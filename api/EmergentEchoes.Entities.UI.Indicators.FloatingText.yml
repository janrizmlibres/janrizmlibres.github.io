### YamlMime:ManagedReference
items:
- uid: EmergentEchoes.Entities.UI.Indicators.FloatingText
  commentId: T:EmergentEchoes.Entities.UI.Indicators.FloatingText
  id: FloatingText
  parent: EmergentEchoes.Entities.UI.Indicators
  children:
  - EmergentEchoes.Entities.UI.Indicators.FloatingText.ShowValue(System.String,Godot.Vector2,System.Single,System.Single)
  - EmergentEchoes.Entities.UI.Indicators.FloatingText._label
  - EmergentEchoes.Entities.UI.Indicators.FloatingText._textureRect
  langs:
  - csharp
  - vb
  name: FloatingText
  nameWithType: FloatingText
  fullName: EmergentEchoes.Entities.UI.Indicators.FloatingText
  type: Class
  source:
    id: FloatingText
    path: Godot.SourceGenerators\Godot.SourceGenerators.ScriptPathAttributeGenerator\EmergentEchoes.Entities.UI.Indicators.FloatingText_ScriptPath.generated.cs
    startLine: 3
  assemblies:
  - EmergentEchoes
  namespace: EmergentEchoes.Entities.UI.Indicators
  syntax:
    content: >-
      [ScriptPath("res://Entities/UI/Indicators/Floating Text/FloatingText.cs")]

      public class FloatingText : Control, IDisposable
    content.vb: >-
      <ScriptPath("res://Entities/UI/Indicators/Floating Text/FloatingText.cs")>

      Public Class FloatingText Inherits Control Implements IDisposable
  inheritance:
  - System.Object
  - Godot.GodotObject
  - Godot.Node
  - Godot.CanvasItem
  - Godot.Control
  implements:
  - System.IDisposable
  inheritedMembers:
  - Godot.Control.NotificationResized
  - Godot.Control.NotificationMouseEnter
  - Godot.Control.NotificationMouseExit
  - Godot.Control.NotificationMouseEnterSelf
  - Godot.Control.NotificationMouseExitSelf
  - Godot.Control.NotificationFocusEnter
  - Godot.Control.NotificationFocusExit
  - Godot.Control.NotificationThemeChanged
  - Godot.Control.NotificationScrollBegin
  - Godot.Control.NotificationScrollEnd
  - Godot.Control.NotificationLayoutDirectionChanged
  - Godot.Control._CanDropData(Godot.Vector2,Godot.Variant)
  - Godot.Control._DropData(Godot.Vector2,Godot.Variant)
  - Godot.Control._GetDragData(Godot.Vector2)
  - Godot.Control._GetMinimumSize
  - Godot.Control._GetTooltip(Godot.Vector2)
  - Godot.Control._GuiInput(Godot.InputEvent)
  - Godot.Control._HasPoint(Godot.Vector2)
  - Godot.Control._MakeCustomTooltip(System.String)
  - Godot.Control._StructuredTextParser(Godot.Collections.Array,System.String)
  - Godot.Control.AcceptEvent
  - Godot.Control.GetMinimumSize
  - Godot.Control.GetCombinedMinimumSize
  - Godot.Control.SetAnchorsPreset(Godot.Control.LayoutPreset,System.Boolean)
  - Godot.Control.SetOffsetsPreset(Godot.Control.LayoutPreset,Godot.Control.LayoutPresetMode,System.Int32)
  - Godot.Control.SetAnchorsAndOffsetsPreset(Godot.Control.LayoutPreset,Godot.Control.LayoutPresetMode,System.Int32)
  - Godot.Control.SetAnchor(Godot.Side,System.Single,System.Boolean,System.Boolean)
  - Godot.Control.SetAnchorAndOffset(Godot.Side,System.Single,System.Single,System.Boolean)
  - Godot.Control.SetBegin(Godot.Vector2)
  - Godot.Control.SetEnd(Godot.Vector2)
  - Godot.Control.SetPosition(Godot.Vector2,System.Boolean)
  - Godot.Control.SetSize(Godot.Vector2,System.Boolean)
  - Godot.Control.ResetSize
  - Godot.Control.SetGlobalPosition(Godot.Vector2,System.Boolean)
  - Godot.Control.GetBegin
  - Godot.Control.GetEnd
  - Godot.Control.GetParentAreaSize
  - Godot.Control.GetScreenPosition
  - Godot.Control.GetRect
  - Godot.Control.GetGlobalRect
  - Godot.Control.HasFocus
  - Godot.Control.GrabFocus
  - Godot.Control.ReleaseFocus
  - Godot.Control.FindPrevValidFocus
  - Godot.Control.FindNextValidFocus
  - Godot.Control.FindValidFocusNeighbor(Godot.Side)
  - Godot.Control.BeginBulkThemeOverride
  - Godot.Control.EndBulkThemeOverride
  - Godot.Control.AddThemeIconOverride(Godot.StringName,Godot.Texture2D)
  - Godot.Control.AddThemeStyleboxOverride(Godot.StringName,Godot.StyleBox)
  - Godot.Control.AddThemeFontOverride(Godot.StringName,Godot.Font)
  - Godot.Control.AddThemeFontSizeOverride(Godot.StringName,System.Int32)
  - Godot.Control.AddThemeColorOverride(Godot.StringName,Godot.Color)
  - Godot.Control.AddThemeConstantOverride(Godot.StringName,System.Int32)
  - Godot.Control.RemoveThemeIconOverride(Godot.StringName)
  - Godot.Control.RemoveThemeStyleboxOverride(Godot.StringName)
  - Godot.Control.RemoveThemeFontOverride(Godot.StringName)
  - Godot.Control.RemoveThemeFontSizeOverride(Godot.StringName)
  - Godot.Control.RemoveThemeColorOverride(Godot.StringName)
  - Godot.Control.RemoveThemeConstantOverride(Godot.StringName)
  - Godot.Control.GetThemeIcon(Godot.StringName,Godot.StringName)
  - Godot.Control.GetThemeStylebox(Godot.StringName,Godot.StringName)
  - Godot.Control.GetThemeFont(Godot.StringName,Godot.StringName)
  - Godot.Control.GetThemeFontSize(Godot.StringName,Godot.StringName)
  - Godot.Control.GetThemeColor(Godot.StringName,Godot.StringName)
  - Godot.Control.GetThemeConstant(Godot.StringName,Godot.StringName)
  - Godot.Control.HasThemeIconOverride(Godot.StringName)
  - Godot.Control.HasThemeStyleboxOverride(Godot.StringName)
  - Godot.Control.HasThemeFontOverride(Godot.StringName)
  - Godot.Control.HasThemeFontSizeOverride(Godot.StringName)
  - Godot.Control.HasThemeColorOverride(Godot.StringName)
  - Godot.Control.HasThemeConstantOverride(Godot.StringName)
  - Godot.Control.HasThemeIcon(Godot.StringName,Godot.StringName)
  - Godot.Control.HasThemeStylebox(Godot.StringName,Godot.StringName)
  - Godot.Control.HasThemeFont(Godot.StringName,Godot.StringName)
  - Godot.Control.HasThemeFontSize(Godot.StringName,Godot.StringName)
  - Godot.Control.HasThemeColor(Godot.StringName,Godot.StringName)
  - Godot.Control.HasThemeConstant(Godot.StringName,Godot.StringName)
  - Godot.Control.GetThemeDefaultBaseScale
  - Godot.Control.GetThemeDefaultFont
  - Godot.Control.GetThemeDefaultFontSize
  - Godot.Control.GetParentControl
  - Godot.Control.GetTooltip(System.Nullable{Godot.Vector2})
  - Godot.Control.GetCursorShape(System.Nullable{Godot.Vector2})
  - Godot.Control.ForceDrag(Godot.Variant,Godot.Control)
  - Godot.Control.GrabClickFocus
  - Godot.Control.SetDragForwarding(Godot.Callable,Godot.Callable,Godot.Callable)
  - Godot.Control.SetDragPreview(Godot.Control)
  - Godot.Control.IsDragSuccessful
  - Godot.Control.WarpMouse(Godot.Vector2)
  - Godot.Control.UpdateMinimumSize
  - Godot.Control.IsLayoutRtl
  - Godot.Control.InvokeGodotClassMethod(Godot.NativeInterop.godot_string_name@,Godot.NativeInterop.NativeVariantPtrArgs,Godot.NativeInterop.godot_variant@)
  - Godot.Control.HasGodotClassMethod(Godot.NativeInterop.godot_string_name@)
  - Godot.Control.HasGodotClassSignal(Godot.NativeInterop.godot_string_name@)
  - Godot.Control.ClipContents
  - Godot.Control.CustomMinimumSize
  - Godot.Control.LayoutDirection
  - Godot.Control.AnchorLeft
  - Godot.Control.AnchorTop
  - Godot.Control.AnchorRight
  - Godot.Control.AnchorBottom
  - Godot.Control.OffsetLeft
  - Godot.Control.OffsetTop
  - Godot.Control.OffsetRight
  - Godot.Control.OffsetBottom
  - Godot.Control.GrowHorizontal
  - Godot.Control.GrowVertical
  - Godot.Control.Size
  - Godot.Control.Position
  - Godot.Control.GlobalPosition
  - Godot.Control.Rotation
  - Godot.Control.RotationDegrees
  - Godot.Control.Scale
  - Godot.Control.PivotOffset
  - Godot.Control.SizeFlagsHorizontal
  - Godot.Control.SizeFlagsVertical
  - Godot.Control.SizeFlagsStretchRatio
  - Godot.Control.LocalizeNumeralSystem
  - Godot.Control.AutoTranslate
  - Godot.Control.TooltipText
  - Godot.Control.FocusNeighborLeft
  - Godot.Control.FocusNeighborTop
  - Godot.Control.FocusNeighborRight
  - Godot.Control.FocusNeighborBottom
  - Godot.Control.FocusNext
  - Godot.Control.FocusPrevious
  - Godot.Control.FocusMode
  - Godot.Control.MouseFilter
  - Godot.Control.MouseForcePassScrollEvents
  - Godot.Control.MouseDefaultCursorShape
  - Godot.Control.ShortcutContext
  - Godot.Control.Theme
  - Godot.Control.ThemeTypeVariation
  - Godot.Control.Resized
  - Godot.Control.GuiInput
  - Godot.Control.MouseEntered
  - Godot.Control.MouseExited
  - Godot.Control.FocusEntered
  - Godot.Control.FocusExited
  - Godot.Control.SizeFlagsChanged
  - Godot.Control.MinimumSizeChanged
  - Godot.Control.ThemeChanged
  - Godot.CanvasItem.NotificationTransformChanged
  - Godot.CanvasItem.NotificationLocalTransformChanged
  - Godot.CanvasItem.NotificationDraw
  - Godot.CanvasItem.NotificationVisibilityChanged
  - Godot.CanvasItem.NotificationEnterCanvas
  - Godot.CanvasItem.NotificationExitCanvas
  - Godot.CanvasItem.NotificationWorld2DChanged
  - Godot.CanvasItem._Draw
  - Godot.CanvasItem.GetCanvasItem
  - Godot.CanvasItem.IsVisibleInTree
  - Godot.CanvasItem.Show
  - Godot.CanvasItem.Hide
  - Godot.CanvasItem.QueueRedraw
  - Godot.CanvasItem.MoveToFront
  - Godot.CanvasItem.DrawLine(Godot.Vector2,Godot.Vector2,Godot.Color,System.Single,System.Boolean)
  - Godot.CanvasItem.DrawDashedLine(Godot.Vector2,Godot.Vector2,Godot.Color,System.Single,System.Single,System.Boolean,System.Boolean)
  - Godot.CanvasItem.DrawPolyline(Godot.Vector2[],Godot.Color,System.Single,System.Boolean)
  - Godot.CanvasItem.DrawPolylineColors(Godot.Vector2[],Godot.Color[],System.Single,System.Boolean)
  - Godot.CanvasItem.DrawArc(Godot.Vector2,System.Single,System.Single,System.Single,System.Int32,Godot.Color,System.Single,System.Boolean)
  - Godot.CanvasItem.DrawMultiline(Godot.Vector2[],Godot.Color,System.Single,System.Boolean)
  - Godot.CanvasItem.DrawMultilineColors(Godot.Vector2[],Godot.Color[],System.Single,System.Boolean)
  - Godot.CanvasItem.DrawRect(Godot.Rect2,Godot.Color,System.Boolean,System.Single,System.Boolean)
  - Godot.CanvasItem.DrawCircle(Godot.Vector2,System.Single,Godot.Color,System.Boolean,System.Single,System.Boolean)
  - Godot.CanvasItem.DrawTexture(Godot.Texture2D,Godot.Vector2,System.Nullable{Godot.Color})
  - Godot.CanvasItem.DrawTextureRect(Godot.Texture2D,Godot.Rect2,System.Boolean,System.Nullable{Godot.Color},System.Boolean)
  - Godot.CanvasItem.DrawTextureRectRegion(Godot.Texture2D,Godot.Rect2,Godot.Rect2,System.Nullable{Godot.Color},System.Boolean,System.Boolean)
  - Godot.CanvasItem.DrawMsdfTextureRectRegion(Godot.Texture2D,Godot.Rect2,Godot.Rect2,System.Nullable{Godot.Color},System.Double,System.Double,System.Double)
  - Godot.CanvasItem.DrawLcdTextureRectRegion(Godot.Texture2D,Godot.Rect2,Godot.Rect2,System.Nullable{Godot.Color})
  - Godot.CanvasItem.DrawStyleBox(Godot.StyleBox,Godot.Rect2)
  - Godot.CanvasItem.DrawPrimitive(Godot.Vector2[],Godot.Color[],Godot.Vector2[],Godot.Texture2D)
  - Godot.CanvasItem.DrawPolygon(Godot.Vector2[],Godot.Color[],Godot.Vector2[],Godot.Texture2D)
  - Godot.CanvasItem.DrawColoredPolygon(Godot.Vector2[],Godot.Color,Godot.Vector2[],Godot.Texture2D)
  - Godot.CanvasItem.DrawString(Godot.Font,Godot.Vector2,System.String,Godot.HorizontalAlignment,System.Single,System.Int32,System.Nullable{Godot.Color},Godot.TextServer.JustificationFlag,Godot.TextServer.Direction,Godot.TextServer.Orientation)
  - Godot.CanvasItem.DrawMultilineString(Godot.Font,Godot.Vector2,System.String,Godot.HorizontalAlignment,System.Single,System.Int32,System.Int32,System.Nullable{Godot.Color},Godot.TextServer.LineBreakFlag,Godot.TextServer.JustificationFlag,Godot.TextServer.Direction,Godot.TextServer.Orientation)
  - Godot.CanvasItem.DrawStringOutline(Godot.Font,Godot.Vector2,System.String,Godot.HorizontalAlignment,System.Single,System.Int32,System.Int32,System.Nullable{Godot.Color},Godot.TextServer.JustificationFlag,Godot.TextServer.Direction,Godot.TextServer.Orientation)
  - Godot.CanvasItem.DrawMultilineStringOutline(Godot.Font,Godot.Vector2,System.String,Godot.HorizontalAlignment,System.Single,System.Int32,System.Int32,System.Int32,System.Nullable{Godot.Color},Godot.TextServer.LineBreakFlag,Godot.TextServer.JustificationFlag,Godot.TextServer.Direction,Godot.TextServer.Orientation)
  - Godot.CanvasItem.DrawChar(Godot.Font,Godot.Vector2,System.String,System.Int32,System.Nullable{Godot.Color})
  - Godot.CanvasItem.DrawCharOutline(Godot.Font,Godot.Vector2,System.String,System.Int32,System.Int32,System.Nullable{Godot.Color})
  - Godot.CanvasItem.DrawMesh(Godot.Mesh,Godot.Texture2D,System.Nullable{Godot.Transform2D},System.Nullable{Godot.Color})
  - Godot.CanvasItem.DrawMultimesh(Godot.MultiMesh,Godot.Texture2D)
  - Godot.CanvasItem.DrawSetTransform(Godot.Vector2,System.Single,System.Nullable{Godot.Vector2})
  - Godot.CanvasItem.DrawSetTransformMatrix(Godot.Transform2D)
  - Godot.CanvasItem.DrawAnimationSlice(System.Double,System.Double,System.Double,System.Double)
  - Godot.CanvasItem.DrawEndAnimation
  - Godot.CanvasItem.GetTransform
  - Godot.CanvasItem.GetGlobalTransform
  - Godot.CanvasItem.GetGlobalTransformWithCanvas
  - Godot.CanvasItem.GetViewportTransform
  - Godot.CanvasItem.GetViewportRect
  - Godot.CanvasItem.GetCanvasTransform
  - Godot.CanvasItem.GetScreenTransform
  - Godot.CanvasItem.GetLocalMousePosition
  - Godot.CanvasItem.GetGlobalMousePosition
  - Godot.CanvasItem.GetCanvas
  - Godot.CanvasItem.GetCanvasLayerNode
  - Godot.CanvasItem.GetWorld2D
  - Godot.CanvasItem.SetNotifyLocalTransform(System.Boolean)
  - Godot.CanvasItem.IsLocalTransformNotificationEnabled
  - Godot.CanvasItem.SetNotifyTransform(System.Boolean)
  - Godot.CanvasItem.IsTransformNotificationEnabled
  - Godot.CanvasItem.ForceUpdateTransform
  - Godot.CanvasItem.MakeCanvasPositionLocal(Godot.Vector2)
  - Godot.CanvasItem.MakeInputLocal(Godot.InputEvent)
  - Godot.CanvasItem.SetVisibilityLayerBit(System.UInt32,System.Boolean)
  - Godot.CanvasItem.GetVisibilityLayerBit(System.UInt32)
  - Godot.CanvasItem.Visible
  - Godot.CanvasItem.Modulate
  - Godot.CanvasItem.SelfModulate
  - Godot.CanvasItem.ShowBehindParent
  - Godot.CanvasItem.TopLevel
  - Godot.CanvasItem.ClipChildren
  - Godot.CanvasItem.LightMask
  - Godot.CanvasItem.VisibilityLayer
  - Godot.CanvasItem.ZIndex
  - Godot.CanvasItem.ZAsRelative
  - Godot.CanvasItem.YSortEnabled
  - Godot.CanvasItem.TextureFilter
  - Godot.CanvasItem.TextureRepeat
  - Godot.CanvasItem.Material
  - Godot.CanvasItem.UseParentMaterial
  - Godot.CanvasItem.Draw
  - Godot.CanvasItem.VisibilityChanged
  - Godot.CanvasItem.Hidden
  - Godot.CanvasItem.ItemRectChanged
  - Godot.Node.NotificationEnterTree
  - Godot.Node.NotificationExitTree
  - Godot.Node.NotificationMovedInParent
  - Godot.Node.NotificationReady
  - Godot.Node.NotificationPaused
  - Godot.Node.NotificationUnpaused
  - Godot.Node.NotificationPhysicsProcess
  - Godot.Node.NotificationProcess
  - Godot.Node.NotificationParented
  - Godot.Node.NotificationUnparented
  - Godot.Node.NotificationSceneInstantiated
  - Godot.Node.NotificationDragBegin
  - Godot.Node.NotificationDragEnd
  - Godot.Node.NotificationPathRenamed
  - Godot.Node.NotificationChildOrderChanged
  - Godot.Node.NotificationInternalProcess
  - Godot.Node.NotificationInternalPhysicsProcess
  - Godot.Node.NotificationPostEnterTree
  - Godot.Node.NotificationDisabled
  - Godot.Node.NotificationEnabled
  - Godot.Node.NotificationResetPhysicsInterpolation
  - Godot.Node.NotificationEditorPreSave
  - Godot.Node.NotificationEditorPostSave
  - Godot.Node.NotificationWMMouseEnter
  - Godot.Node.NotificationWMMouseExit
  - Godot.Node.NotificationWMWindowFocusIn
  - Godot.Node.NotificationWMWindowFocusOut
  - Godot.Node.NotificationWMCloseRequest
  - Godot.Node.NotificationWMGoBackRequest
  - Godot.Node.NotificationWMSizeChanged
  - Godot.Node.NotificationWMDpiChange
  - Godot.Node.NotificationVpMouseEnter
  - Godot.Node.NotificationVpMouseExit
  - Godot.Node.NotificationOsMemoryWarning
  - Godot.Node.NotificationTranslationChanged
  - Godot.Node.NotificationWMAbout
  - Godot.Node.NotificationCrash
  - Godot.Node.NotificationOsImeUpdate
  - Godot.Node.NotificationApplicationResumed
  - Godot.Node.NotificationApplicationPaused
  - Godot.Node.NotificationApplicationFocusIn
  - Godot.Node.NotificationApplicationFocusOut
  - Godot.Node.NotificationTextServerChanged
  - Godot.Node.GetNode``1(Godot.NodePath)
  - Godot.Node.GetNodeOrNull``1(Godot.NodePath)
  - Godot.Node.GetChild``1(System.Int32,System.Boolean)
  - Godot.Node.GetChildOrNull``1(System.Int32,System.Boolean)
  - Godot.Node.GetOwner``1
  - Godot.Node.GetOwnerOrNull``1
  - Godot.Node.GetParent``1
  - Godot.Node.GetParentOrNull``1
  - Godot.Node._ExitTree
  - Godot.Node._Input(Godot.InputEvent)
  - Godot.Node._PhysicsProcess(System.Double)
  - Godot.Node._ShortcutInput(Godot.InputEvent)
  - Godot.Node._UnhandledInput(Godot.InputEvent)
  - Godot.Node._UnhandledKeyInput(Godot.InputEvent)
  - Godot.Node.PrintOrphanNodes
  - Godot.Node.AddSibling(Godot.Node,System.Boolean)
  - Godot.Node.AddChild(Godot.Node,System.Boolean,Godot.Node.InternalMode)
  - Godot.Node.RemoveChild(Godot.Node)
  - Godot.Node.Reparent(Godot.Node,System.Boolean)
  - Godot.Node.GetChildCount(System.Boolean)
  - Godot.Node.GetChildren(System.Boolean)
  - Godot.Node.GetChild(System.Int32,System.Boolean)
  - Godot.Node.HasNode(Godot.NodePath)
  - Godot.Node.GetNode(Godot.NodePath)
  - Godot.Node.GetNodeOrNull(Godot.NodePath)
  - Godot.Node.GetParent
  - Godot.Node.FindChild(System.String,System.Boolean,System.Boolean)
  - Godot.Node.FindChildren(System.String,System.String,System.Boolean,System.Boolean)
  - Godot.Node.FindParent(System.String)
  - Godot.Node.HasNodeAndResource(Godot.NodePath)
  - Godot.Node.GetNodeAndResource(Godot.NodePath)
  - Godot.Node.IsInsideTree
  - Godot.Node.IsPartOfEditedScene
  - Godot.Node.IsAncestorOf(Godot.Node)
  - Godot.Node.IsGreaterThan(Godot.Node)
  - Godot.Node.GetPath
  - Godot.Node.GetPathTo(Godot.Node,System.Boolean)
  - Godot.Node.AddToGroup(Godot.StringName,System.Boolean)
  - Godot.Node.RemoveFromGroup(Godot.StringName)
  - Godot.Node.IsInGroup(Godot.StringName)
  - Godot.Node.MoveChild(Godot.Node,System.Int32)
  - Godot.Node.GetGroups
  - Godot.Node.GetIndex(System.Boolean)
  - Godot.Node.PrintTree
  - Godot.Node.PrintTreePretty
  - Godot.Node.GetTreeString
  - Godot.Node.GetTreeStringPretty
  - Godot.Node.PropagateNotification(System.Int32)
  - Godot.Node.PropagateCall(Godot.StringName,Godot.Collections.Array,System.Boolean)
  - Godot.Node.SetPhysicsProcess(System.Boolean)
  - Godot.Node.GetPhysicsProcessDeltaTime
  - Godot.Node.IsPhysicsProcessing
  - Godot.Node.GetProcessDeltaTime
  - Godot.Node.SetProcess(System.Boolean)
  - Godot.Node.IsProcessing
  - Godot.Node.SetProcessInput(System.Boolean)
  - Godot.Node.IsProcessingInput
  - Godot.Node.SetProcessShortcutInput(System.Boolean)
  - Godot.Node.IsProcessingShortcutInput
  - Godot.Node.SetProcessUnhandledInput(System.Boolean)
  - Godot.Node.IsProcessingUnhandledInput
  - Godot.Node.SetProcessUnhandledKeyInput(System.Boolean)
  - Godot.Node.IsProcessingUnhandledKeyInput
  - Godot.Node.CanProcess
  - Godot.Node.SetDisplayFolded(System.Boolean)
  - Godot.Node.IsDisplayedFolded
  - Godot.Node.SetProcessInternal(System.Boolean)
  - Godot.Node.IsProcessingInternal
  - Godot.Node.SetPhysicsProcessInternal(System.Boolean)
  - Godot.Node.IsPhysicsProcessingInternal
  - Godot.Node.IsPhysicsInterpolated
  - Godot.Node.IsPhysicsInterpolatedAndEnabled
  - Godot.Node.ResetPhysicsInterpolation
  - Godot.Node.GetWindow
  - Godot.Node.GetLastExclusiveWindow
  - Godot.Node.GetTree
  - Godot.Node.CreateTween
  - Godot.Node.Duplicate(System.Int32)
  - Godot.Node.ReplaceBy(Godot.Node,System.Boolean)
  - Godot.Node.SetSceneInstanceLoadPlaceholder(System.Boolean)
  - Godot.Node.GetSceneInstanceLoadPlaceholder
  - Godot.Node.SetEditableInstance(Godot.Node,System.Boolean)
  - Godot.Node.IsEditableInstance(Godot.Node)
  - Godot.Node.GetViewport
  - Godot.Node.QueueFree
  - Godot.Node.RequestReady
  - Godot.Node.IsNodeReady
  - Godot.Node.SetMultiplayerAuthority(System.Int32,System.Boolean)
  - Godot.Node.GetMultiplayerAuthority
  - Godot.Node.IsMultiplayerAuthority
  - Godot.Node.RpcConfig(Godot.StringName,Godot.Variant)
  - Godot.Node.Atr(System.String,Godot.StringName)
  - Godot.Node.AtrN(System.String,Godot.StringName,System.Int32,Godot.StringName)
  - Godot.Node.Rpc(Godot.StringName,Godot.Variant[])
  - Godot.Node.RpcId(System.Int64,Godot.StringName,Godot.Variant[])
  - Godot.Node.UpdateConfigurationWarnings
  - Godot.Node.CallDeferredThreadGroup(Godot.StringName,Godot.Variant[])
  - Godot.Node.SetDeferredThreadGroup(Godot.StringName,Godot.Variant)
  - Godot.Node.NotifyDeferredThreadGroup(System.Int32)
  - Godot.Node.CallThreadSafe(Godot.StringName,Godot.Variant[])
  - Godot.Node.SetThreadSafe(Godot.StringName,Godot.Variant)
  - Godot.Node.NotifyThreadSafe(System.Int32)
  - Godot.Node.Name
  - Godot.Node.UniqueNameInOwner
  - Godot.Node.SceneFilePath
  - Godot.Node.Owner
  - Godot.Node.Multiplayer
  - Godot.Node.ProcessMode
  - Godot.Node.ProcessPriority
  - Godot.Node.ProcessPhysicsPriority
  - Godot.Node.ProcessThreadGroup
  - Godot.Node.ProcessThreadGroupOrder
  - Godot.Node.ProcessThreadMessages
  - Godot.Node.PhysicsInterpolationMode
  - Godot.Node.AutoTranslateMode
  - Godot.Node.EditorDescription
  - Godot.Node.Ready
  - Godot.Node.Renamed
  - Godot.Node.TreeEntered
  - Godot.Node.TreeExiting
  - Godot.Node.TreeExited
  - Godot.Node.ChildEnteredTree
  - Godot.Node.ChildExitingTree
  - Godot.Node.ChildOrderChanged
  - Godot.Node.ReplacingBy
  - Godot.Node.EditorDescriptionChanged
  - Godot.GodotObject.NotificationPostinitialize
  - Godot.GodotObject.NotificationPredelete
  - Godot.GodotObject.NotificationExtensionReloaded
  - Godot.GodotObject.InstanceFromId(System.UInt64)
  - Godot.GodotObject.IsInstanceIdValid(System.UInt64)
  - Godot.GodotObject.IsInstanceValid(Godot.GodotObject)
  - Godot.GodotObject.WeakRef(Godot.GodotObject)
  - Godot.GodotObject.Dispose
  - Godot.GodotObject.Dispose(System.Boolean)
  - Godot.GodotObject.ToString
  - Godot.GodotObject.ToSignal(Godot.GodotObject,Godot.StringName)
  - Godot.GodotObject._Get(Godot.StringName)
  - Godot.GodotObject._GetPropertyList
  - Godot.GodotObject._Notification(System.Int32)
  - Godot.GodotObject._PropertyCanRevert(Godot.StringName)
  - Godot.GodotObject._PropertyGetRevert(Godot.StringName)
  - Godot.GodotObject._Set(Godot.StringName,Godot.Variant)
  - Godot.GodotObject._ValidateProperty(Godot.Collections.Dictionary)
  - Godot.GodotObject.Free
  - Godot.GodotObject.GetClass
  - Godot.GodotObject.IsClass(System.String)
  - Godot.GodotObject.Set(Godot.StringName,Godot.Variant)
  - Godot.GodotObject.Get(Godot.StringName)
  - Godot.GodotObject.SetIndexed(Godot.NodePath,Godot.Variant)
  - Godot.GodotObject.GetIndexed(Godot.NodePath)
  - Godot.GodotObject.GetPropertyList
  - Godot.GodotObject.GetMethodList
  - Godot.GodotObject.PropertyCanRevert(Godot.StringName)
  - Godot.GodotObject.PropertyGetRevert(Godot.StringName)
  - Godot.GodotObject.Notification(System.Int32,System.Boolean)
  - Godot.GodotObject.GetInstanceId
  - Godot.GodotObject.SetScript(Godot.Variant)
  - Godot.GodotObject.GetScript
  - Godot.GodotObject.SetMeta(Godot.StringName,Godot.Variant)
  - Godot.GodotObject.RemoveMeta(Godot.StringName)
  - Godot.GodotObject.GetMeta(Godot.StringName,Godot.Variant)
  - Godot.GodotObject.HasMeta(Godot.StringName)
  - Godot.GodotObject.GetMetaList
  - Godot.GodotObject.AddUserSignal(System.String,Godot.Collections.Array)
  - Godot.GodotObject.HasUserSignal(Godot.StringName)
  - Godot.GodotObject.RemoveUserSignal(Godot.StringName)
  - Godot.GodotObject.EmitSignal(Godot.StringName,Godot.Variant[])
  - Godot.GodotObject.Call(Godot.StringName,Godot.Variant[])
  - Godot.GodotObject.CallDeferred(Godot.StringName,Godot.Variant[])
  - Godot.GodotObject.SetDeferred(Godot.StringName,Godot.Variant)
  - Godot.GodotObject.Callv(Godot.StringName,Godot.Collections.Array)
  - Godot.GodotObject.HasMethod(Godot.StringName)
  - Godot.GodotObject.GetMethodArgumentCount(Godot.StringName)
  - Godot.GodotObject.HasSignal(Godot.StringName)
  - Godot.GodotObject.GetSignalList
  - Godot.GodotObject.GetSignalConnectionList(Godot.StringName)
  - Godot.GodotObject.GetIncomingConnections
  - Godot.GodotObject.Connect(Godot.StringName,Godot.Callable,System.UInt32)
  - Godot.GodotObject.Disconnect(Godot.StringName,Godot.Callable)
  - Godot.GodotObject.IsConnected(Godot.StringName,Godot.Callable)
  - Godot.GodotObject.SetBlockSignals(System.Boolean)
  - Godot.GodotObject.IsBlockingSignals
  - Godot.GodotObject.NotifyPropertyListChanged
  - Godot.GodotObject.SetMessageTranslation(System.Boolean)
  - Godot.GodotObject.CanTranslateMessages
  - Godot.GodotObject.Tr(Godot.StringName,Godot.StringName)
  - Godot.GodotObject.TrN(Godot.StringName,Godot.StringName,System.Int32,Godot.StringName)
  - Godot.GodotObject.IsQueuedForDeletion
  - Godot.GodotObject.CancelFree
  - Godot.GodotObject.NativeInstance
  - Godot.GodotObject.ScriptChanged
  - Godot.GodotObject.PropertyListChanged
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  attributes:
  - type: Godot.ScriptPathAttribute
    ctor: Godot.ScriptPathAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: res://Entities/UI/Indicators/Floating Text/FloatingText.cs
- uid: EmergentEchoes.Entities.UI.Indicators.FloatingText._textureRect
  commentId: F:EmergentEchoes.Entities.UI.Indicators.FloatingText._textureRect
  id: _textureRect
  parent: EmergentEchoes.Entities.UI.Indicators.FloatingText
  langs:
  - csharp
  - vb
  name: _textureRect
  nameWithType: FloatingText._textureRect
  fullName: EmergentEchoes.Entities.UI.Indicators.FloatingText._textureRect
  type: Field
  source:
    remote:
      path: Entities/UI/Indicators/Floating Text/FloatingText.cs
      branch: feat/emote-bubbles
      repo: https://github.com/janrizmlibres/emergent-echoes.git
    id: _textureRect
    path: ../Entities/UI/Indicators/Floating Text/FloatingText.cs
    startLine: 6
  assemblies:
  - EmergentEchoes
  namespace: EmergentEchoes.Entities.UI.Indicators
  syntax:
    content: private TextureRect _textureRect
    return:
      type: Godot.TextureRect
    content.vb: Private _textureRect As TextureRect
- uid: EmergentEchoes.Entities.UI.Indicators.FloatingText._label
  commentId: F:EmergentEchoes.Entities.UI.Indicators.FloatingText._label
  id: _label
  parent: EmergentEchoes.Entities.UI.Indicators.FloatingText
  langs:
  - csharp
  - vb
  name: _label
  nameWithType: FloatingText._label
  fullName: EmergentEchoes.Entities.UI.Indicators.FloatingText._label
  type: Field
  source:
    remote:
      path: Entities/UI/Indicators/Floating Text/FloatingText.cs
      branch: feat/emote-bubbles
      repo: https://github.com/janrizmlibres/emergent-echoes.git
    id: _label
    path: ../Entities/UI/Indicators/Floating Text/FloatingText.cs
    startLine: 7
  assemblies:
  - EmergentEchoes
  namespace: EmergentEchoes.Entities.UI.Indicators
  syntax:
    content: private Label _label
    return:
      type: Godot.Label
    content.vb: Private _label As Label
- uid: EmergentEchoes.Entities.UI.Indicators.FloatingText.ShowValue(System.String,Godot.Vector2,System.Single,System.Single)
  commentId: M:EmergentEchoes.Entities.UI.Indicators.FloatingText.ShowValue(System.String,Godot.Vector2,System.Single,System.Single)
  id: ShowValue(System.String,Godot.Vector2,System.Single,System.Single)
  parent: EmergentEchoes.Entities.UI.Indicators.FloatingText
  langs:
  - csharp
  - vb
  name: ShowValue(string, Vector2, float, float)
  nameWithType: FloatingText.ShowValue(string, Vector2, float, float)
  fullName: EmergentEchoes.Entities.UI.Indicators.FloatingText.ShowValue(string, Godot.Vector2, float, float)
  type: Method
  source:
    remote:
      path: Entities/UI/Indicators/Floating Text/FloatingText.cs
      branch: feat/emote-bubbles
      repo: https://github.com/janrizmlibres/emergent-echoes.git
    id: ShowValue
    path: ../Entities/UI/Indicators/Floating Text/FloatingText.cs
    startLine: 15
  assemblies:
  - EmergentEchoes
  namespace: EmergentEchoes.Entities.UI.Indicators
  syntax:
    content: public void ShowValue(string value, Vector2 travel, float duration, float spread)
    parameters:
    - id: value
      type: System.String
    - id: travel
      type: Godot.Vector2
    - id: duration
      type: System.Single
    - id: spread
      type: System.Single
    content.vb: Public Sub ShowValue(value As String, travel As Vector2, duration As Single, spread As Single)
  overload: EmergentEchoes.Entities.UI.Indicators.FloatingText.ShowValue*
  nameWithType.vb: FloatingText.ShowValue(String, Vector2, Single, Single)
  fullName.vb: EmergentEchoes.Entities.UI.Indicators.FloatingText.ShowValue(String, Godot.Vector2, Single, Single)
  name.vb: ShowValue(String, Vector2, Single, Single)
references:
- uid: EmergentEchoes.Entities.UI.Indicators
  commentId: N:EmergentEchoes.Entities.UI.Indicators
  href: EmergentEchoes.html
  name: EmergentEchoes.Entities.UI.Indicators
  nameWithType: EmergentEchoes.Entities.UI.Indicators
  fullName: EmergentEchoes.Entities.UI.Indicators
  spec.csharp:
  - uid: EmergentEchoes
    name: EmergentEchoes
    href: EmergentEchoes.html
  - name: .
  - uid: EmergentEchoes.Entities
    name: Entities
    href: EmergentEchoes.Entities.html
  - name: .
  - uid: EmergentEchoes.Entities.UI
    name: UI
    href: EmergentEchoes.Entities.UI.html
  - name: .
  - uid: EmergentEchoes.Entities.UI.Indicators
    name: Indicators
    href: EmergentEchoes.Entities.UI.Indicators.html
  spec.vb:
  - uid: EmergentEchoes
    name: EmergentEchoes
    href: EmergentEchoes.html
  - name: .
  - uid: EmergentEchoes.Entities
    name: Entities
    href: EmergentEchoes.Entities.html
  - name: .
  - uid: EmergentEchoes.Entities.UI
    name: UI
    href: EmergentEchoes.Entities.UI.html
  - name: .
  - uid: EmergentEchoes.Entities.UI.Indicators
    name: Indicators
    href: EmergentEchoes.Entities.UI.Indicators.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Godot.GodotObject
  commentId: T:Godot.GodotObject
  parent: Godot
  isExternal: true
  name: GodotObject
  nameWithType: GodotObject
  fullName: Godot.GodotObject
- uid: Godot.Node
  commentId: T:Godot.Node
  parent: Godot
  isExternal: true
  name: Node
  nameWithType: Node
  fullName: Godot.Node
- uid: Godot.CanvasItem
  commentId: T:Godot.CanvasItem
  parent: Godot
  isExternal: true
  name: CanvasItem
  nameWithType: CanvasItem
  fullName: Godot.CanvasItem
- uid: Godot.Control
  commentId: T:Godot.Control
  parent: Godot
  isExternal: true
  name: Control
  nameWithType: Control
  fullName: Godot.Control
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.idisposable
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: Godot.Control.NotificationResized
  commentId: F:Godot.Control.NotificationResized
  parent: Godot.Control
  isExternal: true
  name: NotificationResized
  nameWithType: Control.NotificationResized
  fullName: Godot.Control.NotificationResized
- uid: Godot.Control.NotificationMouseEnter
  commentId: F:Godot.Control.NotificationMouseEnter
  parent: Godot.Control
  isExternal: true
  name: NotificationMouseEnter
  nameWithType: Control.NotificationMouseEnter
  fullName: Godot.Control.NotificationMouseEnter
- uid: Godot.Control.NotificationMouseExit
  commentId: F:Godot.Control.NotificationMouseExit
  parent: Godot.Control
  isExternal: true
  name: NotificationMouseExit
  nameWithType: Control.NotificationMouseExit
  fullName: Godot.Control.NotificationMouseExit
- uid: Godot.Control.NotificationMouseEnterSelf
  commentId: F:Godot.Control.NotificationMouseEnterSelf
  parent: Godot.Control
  isExternal: true
  name: NotificationMouseEnterSelf
  nameWithType: Control.NotificationMouseEnterSelf
  fullName: Godot.Control.NotificationMouseEnterSelf
- uid: Godot.Control.NotificationMouseExitSelf
  commentId: F:Godot.Control.NotificationMouseExitSelf
  parent: Godot.Control
  isExternal: true
  name: NotificationMouseExitSelf
  nameWithType: Control.NotificationMouseExitSelf
  fullName: Godot.Control.NotificationMouseExitSelf
- uid: Godot.Control.NotificationFocusEnter
  commentId: F:Godot.Control.NotificationFocusEnter
  parent: Godot.Control
  isExternal: true
  name: NotificationFocusEnter
  nameWithType: Control.NotificationFocusEnter
  fullName: Godot.Control.NotificationFocusEnter
- uid: Godot.Control.NotificationFocusExit
  commentId: F:Godot.Control.NotificationFocusExit
  parent: Godot.Control
  isExternal: true
  name: NotificationFocusExit
  nameWithType: Control.NotificationFocusExit
  fullName: Godot.Control.NotificationFocusExit
- uid: Godot.Control.NotificationThemeChanged
  commentId: F:Godot.Control.NotificationThemeChanged
  parent: Godot.Control
  isExternal: true
  name: NotificationThemeChanged
  nameWithType: Control.NotificationThemeChanged
  fullName: Godot.Control.NotificationThemeChanged
- uid: Godot.Control.NotificationScrollBegin
  commentId: F:Godot.Control.NotificationScrollBegin
  parent: Godot.Control
  isExternal: true
  name: NotificationScrollBegin
  nameWithType: Control.NotificationScrollBegin
  fullName: Godot.Control.NotificationScrollBegin
- uid: Godot.Control.NotificationScrollEnd
  commentId: F:Godot.Control.NotificationScrollEnd
  parent: Godot.Control
  isExternal: true
  name: NotificationScrollEnd
  nameWithType: Control.NotificationScrollEnd
  fullName: Godot.Control.NotificationScrollEnd
- uid: Godot.Control.NotificationLayoutDirectionChanged
  commentId: F:Godot.Control.NotificationLayoutDirectionChanged
  parent: Godot.Control
  isExternal: true
  name: NotificationLayoutDirectionChanged
  nameWithType: Control.NotificationLayoutDirectionChanged
  fullName: Godot.Control.NotificationLayoutDirectionChanged
- uid: Godot.Control._CanDropData(Godot.Vector2,Godot.Variant)
  commentId: M:Godot.Control._CanDropData(Godot.Vector2,Godot.Variant)
  parent: Godot.Control
  isExternal: true
  name: _CanDropData(Vector2, Variant)
  nameWithType: Control._CanDropData(Vector2, Variant)
  fullName: Godot.Control._CanDropData(Godot.Vector2, Godot.Variant)
  spec.csharp:
  - uid: Godot.Control._CanDropData(Godot.Vector2,Godot.Variant)
    name: _CanDropData
    isExternal: true
  - name: (
  - uid: Godot.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.Variant
    name: Variant
    isExternal: true
  - name: )
  spec.vb:
  - uid: Godot.Control._CanDropData(Godot.Vector2,Godot.Variant)
    name: _CanDropData
    isExternal: true
  - name: (
  - uid: Godot.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.Variant
    name: Variant
    isExternal: true
  - name: )
- uid: Godot.Control._DropData(Godot.Vector2,Godot.Variant)
  commentId: M:Godot.Control._DropData(Godot.Vector2,Godot.Variant)
  parent: Godot.Control
  isExternal: true
  name: _DropData(Vector2, Variant)
  nameWithType: Control._DropData(Vector2, Variant)
  fullName: Godot.Control._DropData(Godot.Vector2, Godot.Variant)
  spec.csharp:
  - uid: Godot.Control._DropData(Godot.Vector2,Godot.Variant)
    name: _DropData
    isExternal: true
  - name: (
  - uid: Godot.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.Variant
    name: Variant
    isExternal: true
  - name: )
  spec.vb:
  - uid: Godot.Control._DropData(Godot.Vector2,Godot.Variant)
    name: _DropData
    isExternal: true
  - name: (
  - uid: Godot.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.Variant
    name: Variant
    isExternal: true
  - name: )
- uid: Godot.Control._GetDragData(Godot.Vector2)
  commentId: M:Godot.Control._GetDragData(Godot.Vector2)
  parent: Godot.Control
  isExternal: true
  name: _GetDragData(Vector2)
  nameWithType: Control._GetDragData(Vector2)
  fullName: Godot.Control._GetDragData(Godot.Vector2)
  spec.csharp:
  - uid: Godot.Control._GetDragData(Godot.Vector2)
    name: _GetDragData
    isExternal: true
  - name: (
  - uid: Godot.Vector2
    name: Vector2
    isExternal: true
  - name: )
  spec.vb:
  - uid: Godot.Control._GetDragData(Godot.Vector2)
    name: _GetDragData
    isExternal: true
  - name: (
  - uid: Godot.Vector2
    name: Vector2
    isExternal: true
  - name: )
- uid: Godot.Control._GetMinimumSize
  commentId: M:Godot.Control._GetMinimumSize
  parent: Godot.Control
  isExternal: true
  name: _GetMinimumSize()
  nameWithType: Control._GetMinimumSize()
  fullName: Godot.Control._GetMinimumSize()
  spec.csharp:
  - uid: Godot.Control._GetMinimumSize
    name: _GetMinimumSize
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Godot.Control._GetMinimumSize
    name: _GetMinimumSize
    isExternal: true
  - name: (
  - name: )
- uid: Godot.Control._GetTooltip(Godot.Vector2)
  commentId: M:Godot.Control._GetTooltip(Godot.Vector2)
  parent: Godot.Control
  isExternal: true
  name: _GetTooltip(Vector2)
  nameWithType: Control._GetTooltip(Vector2)
  fullName: Godot.Control._GetTooltip(Godot.Vector2)
  spec.csharp:
  - uid: Godot.Control._GetTooltip(Godot.Vector2)
    name: _GetTooltip
    isExternal: true
  - name: (
  - uid: Godot.Vector2
    name: Vector2
    isExternal: true
  - name: )
  spec.vb:
  - uid: Godot.Control._GetTooltip(Godot.Vector2)
    name: _GetTooltip
    isExternal: true
  - name: (
  - uid: Godot.Vector2
    name: Vector2
    isExternal: true
  - name: )
- uid: Godot.Control._GuiInput(Godot.InputEvent)
  commentId: M:Godot.Control._GuiInput(Godot.InputEvent)
  parent: Godot.Control
  isExternal: true
  name: _GuiInput(InputEvent)
  nameWithType: Control._GuiInput(InputEvent)
  fullName: Godot.Control._GuiInput(Godot.InputEvent)
  spec.csharp:
  - uid: Godot.Control._GuiInput(Godot.InputEvent)
    name: _GuiInput
    isExternal: true
  - name: (
  - uid: Godot.InputEvent
    name: InputEvent
    isExternal: true
  - name: )
  spec.vb:
  - uid: Godot.Control._GuiInput(Godot.InputEvent)
    name: _GuiInput
    isExternal: true
  - name: (
  - uid: Godot.InputEvent
    name: InputEvent
    isExternal: true
  - name: )
- uid: Godot.Control._HasPoint(Godot.Vector2)
  commentId: M:Godot.Control._HasPoint(Godot.Vector2)
  parent: Godot.Control
  isExternal: true
  name: _HasPoint(Vector2)
  nameWithType: Control._HasPoint(Vector2)
  fullName: Godot.Control._HasPoint(Godot.Vector2)
  spec.csharp:
  - uid: Godot.Control._HasPoint(Godot.Vector2)
    name: _HasPoint
    isExternal: true
  - name: (
  - uid: Godot.Vector2
    name: Vector2
    isExternal: true
  - name: )
  spec.vb:
  - uid: Godot.Control._HasPoint(Godot.Vector2)
    name: _HasPoint
    isExternal: true
  - name: (
  - uid: Godot.Vector2
    name: Vector2
    isExternal: true
  - name: )
- uid: Godot.Control._MakeCustomTooltip(System.String)
  commentId: M:Godot.Control._MakeCustomTooltip(System.String)
  parent: Godot.Control
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: _MakeCustomTooltip(string)
  nameWithType: Control._MakeCustomTooltip(string)
  fullName: Godot.Control._MakeCustomTooltip(string)
  nameWithType.vb: Control._MakeCustomTooltip(String)
  fullName.vb: Godot.Control._MakeCustomTooltip(String)
  name.vb: _MakeCustomTooltip(String)
  spec.csharp:
  - uid: Godot.Control._MakeCustomTooltip(System.String)
    name: _MakeCustomTooltip
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Godot.Control._MakeCustomTooltip(System.String)
    name: _MakeCustomTooltip
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Godot.Control._StructuredTextParser(Godot.Collections.Array,System.String)
  commentId: M:Godot.Control._StructuredTextParser(Godot.Collections.Array,System.String)
  parent: Godot.Control
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: _StructuredTextParser(Array, string)
  nameWithType: Control._StructuredTextParser(Array, string)
  fullName: Godot.Control._StructuredTextParser(Godot.Collections.Array, string)
  nameWithType.vb: Control._StructuredTextParser(Array, String)
  fullName.vb: Godot.Control._StructuredTextParser(Godot.Collections.Array, String)
  name.vb: _StructuredTextParser(Array, String)
  spec.csharp:
  - uid: Godot.Control._StructuredTextParser(Godot.Collections.Array,System.String)
    name: _StructuredTextParser
    isExternal: true
  - name: (
  - uid: Godot.Collections.Array
    name: Array
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Godot.Control._StructuredTextParser(Godot.Collections.Array,System.String)
    name: _StructuredTextParser
    isExternal: true
  - name: (
  - uid: Godot.Collections.Array
    name: Array
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Godot.Control.AcceptEvent
  commentId: M:Godot.Control.AcceptEvent
  parent: Godot.Control
  isExternal: true
  name: AcceptEvent()
  nameWithType: Control.AcceptEvent()
  fullName: Godot.Control.AcceptEvent()
  spec.csharp:
  - uid: Godot.Control.AcceptEvent
    name: AcceptEvent
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Godot.Control.AcceptEvent
    name: AcceptEvent
    isExternal: true
  - name: (
  - name: )
- uid: Godot.Control.GetMinimumSize
  commentId: M:Godot.Control.GetMinimumSize
  parent: Godot.Control
  isExternal: true
  name: GetMinimumSize()
  nameWithType: Control.GetMinimumSize()
  fullName: Godot.Control.GetMinimumSize()
  spec.csharp:
  - uid: Godot.Control.GetMinimumSize
    name: GetMinimumSize
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Godot.Control.GetMinimumSize
    name: GetMinimumSize
    isExternal: true
  - name: (
  - name: )
- uid: Godot.Control.GetCombinedMinimumSize
  commentId: M:Godot.Control.GetCombinedMinimumSize
  parent: Godot.Control
  isExternal: true
  name: GetCombinedMinimumSize()
  nameWithType: Control.GetCombinedMinimumSize()
  fullName: Godot.Control.GetCombinedMinimumSize()
  spec.csharp:
  - uid: Godot.Control.GetCombinedMinimumSize
    name: GetCombinedMinimumSize
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Godot.Control.GetCombinedMinimumSize
    name: GetCombinedMinimumSize
    isExternal: true
  - name: (
  - name: )
- uid: Godot.Control.SetAnchorsPreset(Godot.Control.LayoutPreset,System.Boolean)
  commentId: M:Godot.Control.SetAnchorsPreset(Godot.Control.LayoutPreset,System.Boolean)
  parent: Godot.Control
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: SetAnchorsPreset(LayoutPreset, bool)
  nameWithType: Control.SetAnchorsPreset(Control.LayoutPreset, bool)
  fullName: Godot.Control.SetAnchorsPreset(Godot.Control.LayoutPreset, bool)
  nameWithType.vb: Control.SetAnchorsPreset(Control.LayoutPreset, Boolean)
  fullName.vb: Godot.Control.SetAnchorsPreset(Godot.Control.LayoutPreset, Boolean)
  name.vb: SetAnchorsPreset(LayoutPreset, Boolean)
  spec.csharp:
  - uid: Godot.Control.SetAnchorsPreset(Godot.Control.LayoutPreset,System.Boolean)
    name: SetAnchorsPreset
    isExternal: true
  - name: (
  - uid: Godot.Control.LayoutPreset
    name: LayoutPreset
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Godot.Control.SetAnchorsPreset(Godot.Control.LayoutPreset,System.Boolean)
    name: SetAnchorsPreset
    isExternal: true
  - name: (
  - uid: Godot.Control.LayoutPreset
    name: LayoutPreset
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Godot.Control.SetOffsetsPreset(Godot.Control.LayoutPreset,Godot.Control.LayoutPresetMode,System.Int32)
  commentId: M:Godot.Control.SetOffsetsPreset(Godot.Control.LayoutPreset,Godot.Control.LayoutPresetMode,System.Int32)
  parent: Godot.Control
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: SetOffsetsPreset(LayoutPreset, LayoutPresetMode, int)
  nameWithType: Control.SetOffsetsPreset(Control.LayoutPreset, Control.LayoutPresetMode, int)
  fullName: Godot.Control.SetOffsetsPreset(Godot.Control.LayoutPreset, Godot.Control.LayoutPresetMode, int)
  nameWithType.vb: Control.SetOffsetsPreset(Control.LayoutPreset, Control.LayoutPresetMode, Integer)
  fullName.vb: Godot.Control.SetOffsetsPreset(Godot.Control.LayoutPreset, Godot.Control.LayoutPresetMode, Integer)
  name.vb: SetOffsetsPreset(LayoutPreset, LayoutPresetMode, Integer)
  spec.csharp:
  - uid: Godot.Control.SetOffsetsPreset(Godot.Control.LayoutPreset,Godot.Control.LayoutPresetMode,System.Int32)
    name: SetOffsetsPreset
    isExternal: true
  - name: (
  - uid: Godot.Control.LayoutPreset
    name: LayoutPreset
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.Control.LayoutPresetMode
    name: LayoutPresetMode
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: Godot.Control.SetOffsetsPreset(Godot.Control.LayoutPreset,Godot.Control.LayoutPresetMode,System.Int32)
    name: SetOffsetsPreset
    isExternal: true
  - name: (
  - uid: Godot.Control.LayoutPreset
    name: LayoutPreset
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.Control.LayoutPresetMode
    name: LayoutPresetMode
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: Godot.Control.SetAnchorsAndOffsetsPreset(Godot.Control.LayoutPreset,Godot.Control.LayoutPresetMode,System.Int32)
  commentId: M:Godot.Control.SetAnchorsAndOffsetsPreset(Godot.Control.LayoutPreset,Godot.Control.LayoutPresetMode,System.Int32)
  parent: Godot.Control
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: SetAnchorsAndOffsetsPreset(LayoutPreset, LayoutPresetMode, int)
  nameWithType: Control.SetAnchorsAndOffsetsPreset(Control.LayoutPreset, Control.LayoutPresetMode, int)
  fullName: Godot.Control.SetAnchorsAndOffsetsPreset(Godot.Control.LayoutPreset, Godot.Control.LayoutPresetMode, int)
  nameWithType.vb: Control.SetAnchorsAndOffsetsPreset(Control.LayoutPreset, Control.LayoutPresetMode, Integer)
  fullName.vb: Godot.Control.SetAnchorsAndOffsetsPreset(Godot.Control.LayoutPreset, Godot.Control.LayoutPresetMode, Integer)
  name.vb: SetAnchorsAndOffsetsPreset(LayoutPreset, LayoutPresetMode, Integer)
  spec.csharp:
  - uid: Godot.Control.SetAnchorsAndOffsetsPreset(Godot.Control.LayoutPreset,Godot.Control.LayoutPresetMode,System.Int32)
    name: SetAnchorsAndOffsetsPreset
    isExternal: true
  - name: (
  - uid: Godot.Control.LayoutPreset
    name: LayoutPreset
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.Control.LayoutPresetMode
    name: LayoutPresetMode
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: Godot.Control.SetAnchorsAndOffsetsPreset(Godot.Control.LayoutPreset,Godot.Control.LayoutPresetMode,System.Int32)
    name: SetAnchorsAndOffsetsPreset
    isExternal: true
  - name: (
  - uid: Godot.Control.LayoutPreset
    name: LayoutPreset
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.Control.LayoutPresetMode
    name: LayoutPresetMode
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: Godot.Control.SetAnchor(Godot.Side,System.Single,System.Boolean,System.Boolean)
  commentId: M:Godot.Control.SetAnchor(Godot.Side,System.Single,System.Boolean,System.Boolean)
  parent: Godot.Control
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: SetAnchor(Side, float, bool, bool)
  nameWithType: Control.SetAnchor(Side, float, bool, bool)
  fullName: Godot.Control.SetAnchor(Godot.Side, float, bool, bool)
  nameWithType.vb: Control.SetAnchor(Side, Single, Boolean, Boolean)
  fullName.vb: Godot.Control.SetAnchor(Godot.Side, Single, Boolean, Boolean)
  name.vb: SetAnchor(Side, Single, Boolean, Boolean)
  spec.csharp:
  - uid: Godot.Control.SetAnchor(Godot.Side,System.Single,System.Boolean,System.Boolean)
    name: SetAnchor
    isExternal: true
  - name: (
  - uid: Godot.Side
    name: Side
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Godot.Control.SetAnchor(Godot.Side,System.Single,System.Boolean,System.Boolean)
    name: SetAnchor
    isExternal: true
  - name: (
  - uid: Godot.Side
    name: Side
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Godot.Control.SetAnchorAndOffset(Godot.Side,System.Single,System.Single,System.Boolean)
  commentId: M:Godot.Control.SetAnchorAndOffset(Godot.Side,System.Single,System.Single,System.Boolean)
  parent: Godot.Control
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: SetAnchorAndOffset(Side, float, float, bool)
  nameWithType: Control.SetAnchorAndOffset(Side, float, float, bool)
  fullName: Godot.Control.SetAnchorAndOffset(Godot.Side, float, float, bool)
  nameWithType.vb: Control.SetAnchorAndOffset(Side, Single, Single, Boolean)
  fullName.vb: Godot.Control.SetAnchorAndOffset(Godot.Side, Single, Single, Boolean)
  name.vb: SetAnchorAndOffset(Side, Single, Single, Boolean)
  spec.csharp:
  - uid: Godot.Control.SetAnchorAndOffset(Godot.Side,System.Single,System.Single,System.Boolean)
    name: SetAnchorAndOffset
    isExternal: true
  - name: (
  - uid: Godot.Side
    name: Side
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Godot.Control.SetAnchorAndOffset(Godot.Side,System.Single,System.Single,System.Boolean)
    name: SetAnchorAndOffset
    isExternal: true
  - name: (
  - uid: Godot.Side
    name: Side
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Godot.Control.SetBegin(Godot.Vector2)
  commentId: M:Godot.Control.SetBegin(Godot.Vector2)
  parent: Godot.Control
  isExternal: true
  name: SetBegin(Vector2)
  nameWithType: Control.SetBegin(Vector2)
  fullName: Godot.Control.SetBegin(Godot.Vector2)
  spec.csharp:
  - uid: Godot.Control.SetBegin(Godot.Vector2)
    name: SetBegin
    isExternal: true
  - name: (
  - uid: Godot.Vector2
    name: Vector2
    isExternal: true
  - name: )
  spec.vb:
  - uid: Godot.Control.SetBegin(Godot.Vector2)
    name: SetBegin
    isExternal: true
  - name: (
  - uid: Godot.Vector2
    name: Vector2
    isExternal: true
  - name: )
- uid: Godot.Control.SetEnd(Godot.Vector2)
  commentId: M:Godot.Control.SetEnd(Godot.Vector2)
  parent: Godot.Control
  isExternal: true
  name: SetEnd(Vector2)
  nameWithType: Control.SetEnd(Vector2)
  fullName: Godot.Control.SetEnd(Godot.Vector2)
  spec.csharp:
  - uid: Godot.Control.SetEnd(Godot.Vector2)
    name: SetEnd
    isExternal: true
  - name: (
  - uid: Godot.Vector2
    name: Vector2
    isExternal: true
  - name: )
  spec.vb:
  - uid: Godot.Control.SetEnd(Godot.Vector2)
    name: SetEnd
    isExternal: true
  - name: (
  - uid: Godot.Vector2
    name: Vector2
    isExternal: true
  - name: )
- uid: Godot.Control.SetPosition(Godot.Vector2,System.Boolean)
  commentId: M:Godot.Control.SetPosition(Godot.Vector2,System.Boolean)
  parent: Godot.Control
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: SetPosition(Vector2, bool)
  nameWithType: Control.SetPosition(Vector2, bool)
  fullName: Godot.Control.SetPosition(Godot.Vector2, bool)
  nameWithType.vb: Control.SetPosition(Vector2, Boolean)
  fullName.vb: Godot.Control.SetPosition(Godot.Vector2, Boolean)
  name.vb: SetPosition(Vector2, Boolean)
  spec.csharp:
  - uid: Godot.Control.SetPosition(Godot.Vector2,System.Boolean)
    name: SetPosition
    isExternal: true
  - name: (
  - uid: Godot.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Godot.Control.SetPosition(Godot.Vector2,System.Boolean)
    name: SetPosition
    isExternal: true
  - name: (
  - uid: Godot.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Godot.Control.SetSize(Godot.Vector2,System.Boolean)
  commentId: M:Godot.Control.SetSize(Godot.Vector2,System.Boolean)
  parent: Godot.Control
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: SetSize(Vector2, bool)
  nameWithType: Control.SetSize(Vector2, bool)
  fullName: Godot.Control.SetSize(Godot.Vector2, bool)
  nameWithType.vb: Control.SetSize(Vector2, Boolean)
  fullName.vb: Godot.Control.SetSize(Godot.Vector2, Boolean)
  name.vb: SetSize(Vector2, Boolean)
  spec.csharp:
  - uid: Godot.Control.SetSize(Godot.Vector2,System.Boolean)
    name: SetSize
    isExternal: true
  - name: (
  - uid: Godot.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Godot.Control.SetSize(Godot.Vector2,System.Boolean)
    name: SetSize
    isExternal: true
  - name: (
  - uid: Godot.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Godot.Control.ResetSize
  commentId: M:Godot.Control.ResetSize
  parent: Godot.Control
  isExternal: true
  name: ResetSize()
  nameWithType: Control.ResetSize()
  fullName: Godot.Control.ResetSize()
  spec.csharp:
  - uid: Godot.Control.ResetSize
    name: ResetSize
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Godot.Control.ResetSize
    name: ResetSize
    isExternal: true
  - name: (
  - name: )
- uid: Godot.Control.SetGlobalPosition(Godot.Vector2,System.Boolean)
  commentId: M:Godot.Control.SetGlobalPosition(Godot.Vector2,System.Boolean)
  parent: Godot.Control
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: SetGlobalPosition(Vector2, bool)
  nameWithType: Control.SetGlobalPosition(Vector2, bool)
  fullName: Godot.Control.SetGlobalPosition(Godot.Vector2, bool)
  nameWithType.vb: Control.SetGlobalPosition(Vector2, Boolean)
  fullName.vb: Godot.Control.SetGlobalPosition(Godot.Vector2, Boolean)
  name.vb: SetGlobalPosition(Vector2, Boolean)
  spec.csharp:
  - uid: Godot.Control.SetGlobalPosition(Godot.Vector2,System.Boolean)
    name: SetGlobalPosition
    isExternal: true
  - name: (
  - uid: Godot.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Godot.Control.SetGlobalPosition(Godot.Vector2,System.Boolean)
    name: SetGlobalPosition
    isExternal: true
  - name: (
  - uid: Godot.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Godot.Control.GetBegin
  commentId: M:Godot.Control.GetBegin
  parent: Godot.Control
  isExternal: true
  name: GetBegin()
  nameWithType: Control.GetBegin()
  fullName: Godot.Control.GetBegin()
  spec.csharp:
  - uid: Godot.Control.GetBegin
    name: GetBegin
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Godot.Control.GetBegin
    name: GetBegin
    isExternal: true
  - name: (
  - name: )
- uid: Godot.Control.GetEnd
  commentId: M:Godot.Control.GetEnd
  parent: Godot.Control
  isExternal: true
  name: GetEnd()
  nameWithType: Control.GetEnd()
  fullName: Godot.Control.GetEnd()
  spec.csharp:
  - uid: Godot.Control.GetEnd
    name: GetEnd
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Godot.Control.GetEnd
    name: GetEnd
    isExternal: true
  - name: (
  - name: )
- uid: Godot.Control.GetParentAreaSize
  commentId: M:Godot.Control.GetParentAreaSize
  parent: Godot.Control
  isExternal: true
  name: GetParentAreaSize()
  nameWithType: Control.GetParentAreaSize()
  fullName: Godot.Control.GetParentAreaSize()
  spec.csharp:
  - uid: Godot.Control.GetParentAreaSize
    name: GetParentAreaSize
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Godot.Control.GetParentAreaSize
    name: GetParentAreaSize
    isExternal: true
  - name: (
  - name: )
- uid: Godot.Control.GetScreenPosition
  commentId: M:Godot.Control.GetScreenPosition
  parent: Godot.Control
  isExternal: true
  name: GetScreenPosition()
  nameWithType: Control.GetScreenPosition()
  fullName: Godot.Control.GetScreenPosition()
  spec.csharp:
  - uid: Godot.Control.GetScreenPosition
    name: GetScreenPosition
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Godot.Control.GetScreenPosition
    name: GetScreenPosition
    isExternal: true
  - name: (
  - name: )
- uid: Godot.Control.GetRect
  commentId: M:Godot.Control.GetRect
  parent: Godot.Control
  isExternal: true
  name: GetRect()
  nameWithType: Control.GetRect()
  fullName: Godot.Control.GetRect()
  spec.csharp:
  - uid: Godot.Control.GetRect
    name: GetRect
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Godot.Control.GetRect
    name: GetRect
    isExternal: true
  - name: (
  - name: )
- uid: Godot.Control.GetGlobalRect
  commentId: M:Godot.Control.GetGlobalRect
  parent: Godot.Control
  isExternal: true
  name: GetGlobalRect()
  nameWithType: Control.GetGlobalRect()
  fullName: Godot.Control.GetGlobalRect()
  spec.csharp:
  - uid: Godot.Control.GetGlobalRect
    name: GetGlobalRect
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Godot.Control.GetGlobalRect
    name: GetGlobalRect
    isExternal: true
  - name: (
  - name: )
- uid: Godot.Control.HasFocus
  commentId: M:Godot.Control.HasFocus
  parent: Godot.Control
  isExternal: true
  name: HasFocus()
  nameWithType: Control.HasFocus()
  fullName: Godot.Control.HasFocus()
  spec.csharp:
  - uid: Godot.Control.HasFocus
    name: HasFocus
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Godot.Control.HasFocus
    name: HasFocus
    isExternal: true
  - name: (
  - name: )
- uid: Godot.Control.GrabFocus
  commentId: M:Godot.Control.GrabFocus
  parent: Godot.Control
  isExternal: true
  name: GrabFocus()
  nameWithType: Control.GrabFocus()
  fullName: Godot.Control.GrabFocus()
  spec.csharp:
  - uid: Godot.Control.GrabFocus
    name: GrabFocus
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Godot.Control.GrabFocus
    name: GrabFocus
    isExternal: true
  - name: (
  - name: )
- uid: Godot.Control.ReleaseFocus
  commentId: M:Godot.Control.ReleaseFocus
  parent: Godot.Control
  isExternal: true
  name: ReleaseFocus()
  nameWithType: Control.ReleaseFocus()
  fullName: Godot.Control.ReleaseFocus()
  spec.csharp:
  - uid: Godot.Control.ReleaseFocus
    name: ReleaseFocus
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Godot.Control.ReleaseFocus
    name: ReleaseFocus
    isExternal: true
  - name: (
  - name: )
- uid: Godot.Control.FindPrevValidFocus
  commentId: M:Godot.Control.FindPrevValidFocus
  parent: Godot.Control
  isExternal: true
  name: FindPrevValidFocus()
  nameWithType: Control.FindPrevValidFocus()
  fullName: Godot.Control.FindPrevValidFocus()
  spec.csharp:
  - uid: Godot.Control.FindPrevValidFocus
    name: FindPrevValidFocus
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Godot.Control.FindPrevValidFocus
    name: FindPrevValidFocus
    isExternal: true
  - name: (
  - name: )
- uid: Godot.Control.FindNextValidFocus
  commentId: M:Godot.Control.FindNextValidFocus
  parent: Godot.Control
  isExternal: true
  name: FindNextValidFocus()
  nameWithType: Control.FindNextValidFocus()
  fullName: Godot.Control.FindNextValidFocus()
  spec.csharp:
  - uid: Godot.Control.FindNextValidFocus
    name: FindNextValidFocus
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Godot.Control.FindNextValidFocus
    name: FindNextValidFocus
    isExternal: true
  - name: (
  - name: )
- uid: Godot.Control.FindValidFocusNeighbor(Godot.Side)
  commentId: M:Godot.Control.FindValidFocusNeighbor(Godot.Side)
  parent: Godot.Control
  isExternal: true
  name: FindValidFocusNeighbor(Side)
  nameWithType: Control.FindValidFocusNeighbor(Side)
  fullName: Godot.Control.FindValidFocusNeighbor(Godot.Side)
  spec.csharp:
  - uid: Godot.Control.FindValidFocusNeighbor(Godot.Side)
    name: FindValidFocusNeighbor
    isExternal: true
  - name: (
  - uid: Godot.Side
    name: Side
    isExternal: true
  - name: )
  spec.vb:
  - uid: Godot.Control.FindValidFocusNeighbor(Godot.Side)
    name: FindValidFocusNeighbor
    isExternal: true
  - name: (
  - uid: Godot.Side
    name: Side
    isExternal: true
  - name: )
- uid: Godot.Control.BeginBulkThemeOverride
  commentId: M:Godot.Control.BeginBulkThemeOverride
  parent: Godot.Control
  isExternal: true
  name: BeginBulkThemeOverride()
  nameWithType: Control.BeginBulkThemeOverride()
  fullName: Godot.Control.BeginBulkThemeOverride()
  spec.csharp:
  - uid: Godot.Control.BeginBulkThemeOverride
    name: BeginBulkThemeOverride
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Godot.Control.BeginBulkThemeOverride
    name: BeginBulkThemeOverride
    isExternal: true
  - name: (
  - name: )
- uid: Godot.Control.EndBulkThemeOverride
  commentId: M:Godot.Control.EndBulkThemeOverride
  parent: Godot.Control
  isExternal: true
  name: EndBulkThemeOverride()
  nameWithType: Control.EndBulkThemeOverride()
  fullName: Godot.Control.EndBulkThemeOverride()
  spec.csharp:
  - uid: Godot.Control.EndBulkThemeOverride
    name: EndBulkThemeOverride
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Godot.Control.EndBulkThemeOverride
    name: EndBulkThemeOverride
    isExternal: true
  - name: (
  - name: )
- uid: Godot.Control.AddThemeIconOverride(Godot.StringName,Godot.Texture2D)
  commentId: M:Godot.Control.AddThemeIconOverride(Godot.StringName,Godot.Texture2D)
  parent: Godot.Control
  isExternal: true
  name: AddThemeIconOverride(StringName, Texture2D)
  nameWithType: Control.AddThemeIconOverride(StringName, Texture2D)
  fullName: Godot.Control.AddThemeIconOverride(Godot.StringName, Godot.Texture2D)
  spec.csharp:
  - uid: Godot.Control.AddThemeIconOverride(Godot.StringName,Godot.Texture2D)
    name: AddThemeIconOverride
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.Texture2D
    name: Texture2D
    isExternal: true
  - name: )
  spec.vb:
  - uid: Godot.Control.AddThemeIconOverride(Godot.StringName,Godot.Texture2D)
    name: AddThemeIconOverride
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.Texture2D
    name: Texture2D
    isExternal: true
  - name: )
- uid: Godot.Control.AddThemeStyleboxOverride(Godot.StringName,Godot.StyleBox)
  commentId: M:Godot.Control.AddThemeStyleboxOverride(Godot.StringName,Godot.StyleBox)
  parent: Godot.Control
  isExternal: true
  name: AddThemeStyleboxOverride(StringName, StyleBox)
  nameWithType: Control.AddThemeStyleboxOverride(StringName, StyleBox)
  fullName: Godot.Control.AddThemeStyleboxOverride(Godot.StringName, Godot.StyleBox)
  spec.csharp:
  - uid: Godot.Control.AddThemeStyleboxOverride(Godot.StringName,Godot.StyleBox)
    name: AddThemeStyleboxOverride
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.StyleBox
    name: StyleBox
    isExternal: true
  - name: )
  spec.vb:
  - uid: Godot.Control.AddThemeStyleboxOverride(Godot.StringName,Godot.StyleBox)
    name: AddThemeStyleboxOverride
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.StyleBox
    name: StyleBox
    isExternal: true
  - name: )
- uid: Godot.Control.AddThemeFontOverride(Godot.StringName,Godot.Font)
  commentId: M:Godot.Control.AddThemeFontOverride(Godot.StringName,Godot.Font)
  parent: Godot.Control
  isExternal: true
  name: AddThemeFontOverride(StringName, Font)
  nameWithType: Control.AddThemeFontOverride(StringName, Font)
  fullName: Godot.Control.AddThemeFontOverride(Godot.StringName, Godot.Font)
  spec.csharp:
  - uid: Godot.Control.AddThemeFontOverride(Godot.StringName,Godot.Font)
    name: AddThemeFontOverride
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.Font
    name: Font
    isExternal: true
  - name: )
  spec.vb:
  - uid: Godot.Control.AddThemeFontOverride(Godot.StringName,Godot.Font)
    name: AddThemeFontOverride
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.Font
    name: Font
    isExternal: true
  - name: )
- uid: Godot.Control.AddThemeFontSizeOverride(Godot.StringName,System.Int32)
  commentId: M:Godot.Control.AddThemeFontSizeOverride(Godot.StringName,System.Int32)
  parent: Godot.Control
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: AddThemeFontSizeOverride(StringName, int)
  nameWithType: Control.AddThemeFontSizeOverride(StringName, int)
  fullName: Godot.Control.AddThemeFontSizeOverride(Godot.StringName, int)
  nameWithType.vb: Control.AddThemeFontSizeOverride(StringName, Integer)
  fullName.vb: Godot.Control.AddThemeFontSizeOverride(Godot.StringName, Integer)
  name.vb: AddThemeFontSizeOverride(StringName, Integer)
  spec.csharp:
  - uid: Godot.Control.AddThemeFontSizeOverride(Godot.StringName,System.Int32)
    name: AddThemeFontSizeOverride
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: Godot.Control.AddThemeFontSizeOverride(Godot.StringName,System.Int32)
    name: AddThemeFontSizeOverride
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: Godot.Control.AddThemeColorOverride(Godot.StringName,Godot.Color)
  commentId: M:Godot.Control.AddThemeColorOverride(Godot.StringName,Godot.Color)
  parent: Godot.Control
  isExternal: true
  name: AddThemeColorOverride(StringName, Color)
  nameWithType: Control.AddThemeColorOverride(StringName, Color)
  fullName: Godot.Control.AddThemeColorOverride(Godot.StringName, Godot.Color)
  spec.csharp:
  - uid: Godot.Control.AddThemeColorOverride(Godot.StringName,Godot.Color)
    name: AddThemeColorOverride
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.Color
    name: Color
    isExternal: true
  - name: )
  spec.vb:
  - uid: Godot.Control.AddThemeColorOverride(Godot.StringName,Godot.Color)
    name: AddThemeColorOverride
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.Color
    name: Color
    isExternal: true
  - name: )
- uid: Godot.Control.AddThemeConstantOverride(Godot.StringName,System.Int32)
  commentId: M:Godot.Control.AddThemeConstantOverride(Godot.StringName,System.Int32)
  parent: Godot.Control
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: AddThemeConstantOverride(StringName, int)
  nameWithType: Control.AddThemeConstantOverride(StringName, int)
  fullName: Godot.Control.AddThemeConstantOverride(Godot.StringName, int)
  nameWithType.vb: Control.AddThemeConstantOverride(StringName, Integer)
  fullName.vb: Godot.Control.AddThemeConstantOverride(Godot.StringName, Integer)
  name.vb: AddThemeConstantOverride(StringName, Integer)
  spec.csharp:
  - uid: Godot.Control.AddThemeConstantOverride(Godot.StringName,System.Int32)
    name: AddThemeConstantOverride
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: Godot.Control.AddThemeConstantOverride(Godot.StringName,System.Int32)
    name: AddThemeConstantOverride
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: Godot.Control.RemoveThemeIconOverride(Godot.StringName)
  commentId: M:Godot.Control.RemoveThemeIconOverride(Godot.StringName)
  parent: Godot.Control
  isExternal: true
  name: RemoveThemeIconOverride(StringName)
  nameWithType: Control.RemoveThemeIconOverride(StringName)
  fullName: Godot.Control.RemoveThemeIconOverride(Godot.StringName)
  spec.csharp:
  - uid: Godot.Control.RemoveThemeIconOverride(Godot.StringName)
    name: RemoveThemeIconOverride
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: )
  spec.vb:
  - uid: Godot.Control.RemoveThemeIconOverride(Godot.StringName)
    name: RemoveThemeIconOverride
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: )
- uid: Godot.Control.RemoveThemeStyleboxOverride(Godot.StringName)
  commentId: M:Godot.Control.RemoveThemeStyleboxOverride(Godot.StringName)
  parent: Godot.Control
  isExternal: true
  name: RemoveThemeStyleboxOverride(StringName)
  nameWithType: Control.RemoveThemeStyleboxOverride(StringName)
  fullName: Godot.Control.RemoveThemeStyleboxOverride(Godot.StringName)
  spec.csharp:
  - uid: Godot.Control.RemoveThemeStyleboxOverride(Godot.StringName)
    name: RemoveThemeStyleboxOverride
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: )
  spec.vb:
  - uid: Godot.Control.RemoveThemeStyleboxOverride(Godot.StringName)
    name: RemoveThemeStyleboxOverride
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: )
- uid: Godot.Control.RemoveThemeFontOverride(Godot.StringName)
  commentId: M:Godot.Control.RemoveThemeFontOverride(Godot.StringName)
  parent: Godot.Control
  isExternal: true
  name: RemoveThemeFontOverride(StringName)
  nameWithType: Control.RemoveThemeFontOverride(StringName)
  fullName: Godot.Control.RemoveThemeFontOverride(Godot.StringName)
  spec.csharp:
  - uid: Godot.Control.RemoveThemeFontOverride(Godot.StringName)
    name: RemoveThemeFontOverride
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: )
  spec.vb:
  - uid: Godot.Control.RemoveThemeFontOverride(Godot.StringName)
    name: RemoveThemeFontOverride
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: )
- uid: Godot.Control.RemoveThemeFontSizeOverride(Godot.StringName)
  commentId: M:Godot.Control.RemoveThemeFontSizeOverride(Godot.StringName)
  parent: Godot.Control
  isExternal: true
  name: RemoveThemeFontSizeOverride(StringName)
  nameWithType: Control.RemoveThemeFontSizeOverride(StringName)
  fullName: Godot.Control.RemoveThemeFontSizeOverride(Godot.StringName)
  spec.csharp:
  - uid: Godot.Control.RemoveThemeFontSizeOverride(Godot.StringName)
    name: RemoveThemeFontSizeOverride
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: )
  spec.vb:
  - uid: Godot.Control.RemoveThemeFontSizeOverride(Godot.StringName)
    name: RemoveThemeFontSizeOverride
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: )
- uid: Godot.Control.RemoveThemeColorOverride(Godot.StringName)
  commentId: M:Godot.Control.RemoveThemeColorOverride(Godot.StringName)
  parent: Godot.Control
  isExternal: true
  name: RemoveThemeColorOverride(StringName)
  nameWithType: Control.RemoveThemeColorOverride(StringName)
  fullName: Godot.Control.RemoveThemeColorOverride(Godot.StringName)
  spec.csharp:
  - uid: Godot.Control.RemoveThemeColorOverride(Godot.StringName)
    name: RemoveThemeColorOverride
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: )
  spec.vb:
  - uid: Godot.Control.RemoveThemeColorOverride(Godot.StringName)
    name: RemoveThemeColorOverride
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: )
- uid: Godot.Control.RemoveThemeConstantOverride(Godot.StringName)
  commentId: M:Godot.Control.RemoveThemeConstantOverride(Godot.StringName)
  parent: Godot.Control
  isExternal: true
  name: RemoveThemeConstantOverride(StringName)
  nameWithType: Control.RemoveThemeConstantOverride(StringName)
  fullName: Godot.Control.RemoveThemeConstantOverride(Godot.StringName)
  spec.csharp:
  - uid: Godot.Control.RemoveThemeConstantOverride(Godot.StringName)
    name: RemoveThemeConstantOverride
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: )
  spec.vb:
  - uid: Godot.Control.RemoveThemeConstantOverride(Godot.StringName)
    name: RemoveThemeConstantOverride
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: )
- uid: Godot.Control.GetThemeIcon(Godot.StringName,Godot.StringName)
  commentId: M:Godot.Control.GetThemeIcon(Godot.StringName,Godot.StringName)
  parent: Godot.Control
  isExternal: true
  name: GetThemeIcon(StringName, StringName)
  nameWithType: Control.GetThemeIcon(StringName, StringName)
  fullName: Godot.Control.GetThemeIcon(Godot.StringName, Godot.StringName)
  spec.csharp:
  - uid: Godot.Control.GetThemeIcon(Godot.StringName,Godot.StringName)
    name: GetThemeIcon
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: )
  spec.vb:
  - uid: Godot.Control.GetThemeIcon(Godot.StringName,Godot.StringName)
    name: GetThemeIcon
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: )
- uid: Godot.Control.GetThemeStylebox(Godot.StringName,Godot.StringName)
  commentId: M:Godot.Control.GetThemeStylebox(Godot.StringName,Godot.StringName)
  parent: Godot.Control
  isExternal: true
  name: GetThemeStylebox(StringName, StringName)
  nameWithType: Control.GetThemeStylebox(StringName, StringName)
  fullName: Godot.Control.GetThemeStylebox(Godot.StringName, Godot.StringName)
  spec.csharp:
  - uid: Godot.Control.GetThemeStylebox(Godot.StringName,Godot.StringName)
    name: GetThemeStylebox
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: )
  spec.vb:
  - uid: Godot.Control.GetThemeStylebox(Godot.StringName,Godot.StringName)
    name: GetThemeStylebox
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: )
- uid: Godot.Control.GetThemeFont(Godot.StringName,Godot.StringName)
  commentId: M:Godot.Control.GetThemeFont(Godot.StringName,Godot.StringName)
  parent: Godot.Control
  isExternal: true
  name: GetThemeFont(StringName, StringName)
  nameWithType: Control.GetThemeFont(StringName, StringName)
  fullName: Godot.Control.GetThemeFont(Godot.StringName, Godot.StringName)
  spec.csharp:
  - uid: Godot.Control.GetThemeFont(Godot.StringName,Godot.StringName)
    name: GetThemeFont
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: )
  spec.vb:
  - uid: Godot.Control.GetThemeFont(Godot.StringName,Godot.StringName)
    name: GetThemeFont
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: )
- uid: Godot.Control.GetThemeFontSize(Godot.StringName,Godot.StringName)
  commentId: M:Godot.Control.GetThemeFontSize(Godot.StringName,Godot.StringName)
  parent: Godot.Control
  isExternal: true
  name: GetThemeFontSize(StringName, StringName)
  nameWithType: Control.GetThemeFontSize(StringName, StringName)
  fullName: Godot.Control.GetThemeFontSize(Godot.StringName, Godot.StringName)
  spec.csharp:
  - uid: Godot.Control.GetThemeFontSize(Godot.StringName,Godot.StringName)
    name: GetThemeFontSize
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: )
  spec.vb:
  - uid: Godot.Control.GetThemeFontSize(Godot.StringName,Godot.StringName)
    name: GetThemeFontSize
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: )
- uid: Godot.Control.GetThemeColor(Godot.StringName,Godot.StringName)
  commentId: M:Godot.Control.GetThemeColor(Godot.StringName,Godot.StringName)
  parent: Godot.Control
  isExternal: true
  name: GetThemeColor(StringName, StringName)
  nameWithType: Control.GetThemeColor(StringName, StringName)
  fullName: Godot.Control.GetThemeColor(Godot.StringName, Godot.StringName)
  spec.csharp:
  - uid: Godot.Control.GetThemeColor(Godot.StringName,Godot.StringName)
    name: GetThemeColor
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: )
  spec.vb:
  - uid: Godot.Control.GetThemeColor(Godot.StringName,Godot.StringName)
    name: GetThemeColor
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: )
- uid: Godot.Control.GetThemeConstant(Godot.StringName,Godot.StringName)
  commentId: M:Godot.Control.GetThemeConstant(Godot.StringName,Godot.StringName)
  parent: Godot.Control
  isExternal: true
  name: GetThemeConstant(StringName, StringName)
  nameWithType: Control.GetThemeConstant(StringName, StringName)
  fullName: Godot.Control.GetThemeConstant(Godot.StringName, Godot.StringName)
  spec.csharp:
  - uid: Godot.Control.GetThemeConstant(Godot.StringName,Godot.StringName)
    name: GetThemeConstant
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: )
  spec.vb:
  - uid: Godot.Control.GetThemeConstant(Godot.StringName,Godot.StringName)
    name: GetThemeConstant
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: )
- uid: Godot.Control.HasThemeIconOverride(Godot.StringName)
  commentId: M:Godot.Control.HasThemeIconOverride(Godot.StringName)
  parent: Godot.Control
  isExternal: true
  name: HasThemeIconOverride(StringName)
  nameWithType: Control.HasThemeIconOverride(StringName)
  fullName: Godot.Control.HasThemeIconOverride(Godot.StringName)
  spec.csharp:
  - uid: Godot.Control.HasThemeIconOverride(Godot.StringName)
    name: HasThemeIconOverride
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: )
  spec.vb:
  - uid: Godot.Control.HasThemeIconOverride(Godot.StringName)
    name: HasThemeIconOverride
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: )
- uid: Godot.Control.HasThemeStyleboxOverride(Godot.StringName)
  commentId: M:Godot.Control.HasThemeStyleboxOverride(Godot.StringName)
  parent: Godot.Control
  isExternal: true
  name: HasThemeStyleboxOverride(StringName)
  nameWithType: Control.HasThemeStyleboxOverride(StringName)
  fullName: Godot.Control.HasThemeStyleboxOverride(Godot.StringName)
  spec.csharp:
  - uid: Godot.Control.HasThemeStyleboxOverride(Godot.StringName)
    name: HasThemeStyleboxOverride
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: )
  spec.vb:
  - uid: Godot.Control.HasThemeStyleboxOverride(Godot.StringName)
    name: HasThemeStyleboxOverride
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: )
- uid: Godot.Control.HasThemeFontOverride(Godot.StringName)
  commentId: M:Godot.Control.HasThemeFontOverride(Godot.StringName)
  parent: Godot.Control
  isExternal: true
  name: HasThemeFontOverride(StringName)
  nameWithType: Control.HasThemeFontOverride(StringName)
  fullName: Godot.Control.HasThemeFontOverride(Godot.StringName)
  spec.csharp:
  - uid: Godot.Control.HasThemeFontOverride(Godot.StringName)
    name: HasThemeFontOverride
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: )
  spec.vb:
  - uid: Godot.Control.HasThemeFontOverride(Godot.StringName)
    name: HasThemeFontOverride
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: )
- uid: Godot.Control.HasThemeFontSizeOverride(Godot.StringName)
  commentId: M:Godot.Control.HasThemeFontSizeOverride(Godot.StringName)
  parent: Godot.Control
  isExternal: true
  name: HasThemeFontSizeOverride(StringName)
  nameWithType: Control.HasThemeFontSizeOverride(StringName)
  fullName: Godot.Control.HasThemeFontSizeOverride(Godot.StringName)
  spec.csharp:
  - uid: Godot.Control.HasThemeFontSizeOverride(Godot.StringName)
    name: HasThemeFontSizeOverride
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: )
  spec.vb:
  - uid: Godot.Control.HasThemeFontSizeOverride(Godot.StringName)
    name: HasThemeFontSizeOverride
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: )
- uid: Godot.Control.HasThemeColorOverride(Godot.StringName)
  commentId: M:Godot.Control.HasThemeColorOverride(Godot.StringName)
  parent: Godot.Control
  isExternal: true
  name: HasThemeColorOverride(StringName)
  nameWithType: Control.HasThemeColorOverride(StringName)
  fullName: Godot.Control.HasThemeColorOverride(Godot.StringName)
  spec.csharp:
  - uid: Godot.Control.HasThemeColorOverride(Godot.StringName)
    name: HasThemeColorOverride
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: )
  spec.vb:
  - uid: Godot.Control.HasThemeColorOverride(Godot.StringName)
    name: HasThemeColorOverride
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: )
- uid: Godot.Control.HasThemeConstantOverride(Godot.StringName)
  commentId: M:Godot.Control.HasThemeConstantOverride(Godot.StringName)
  parent: Godot.Control
  isExternal: true
  name: HasThemeConstantOverride(StringName)
  nameWithType: Control.HasThemeConstantOverride(StringName)
  fullName: Godot.Control.HasThemeConstantOverride(Godot.StringName)
  spec.csharp:
  - uid: Godot.Control.HasThemeConstantOverride(Godot.StringName)
    name: HasThemeConstantOverride
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: )
  spec.vb:
  - uid: Godot.Control.HasThemeConstantOverride(Godot.StringName)
    name: HasThemeConstantOverride
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: )
- uid: Godot.Control.HasThemeIcon(Godot.StringName,Godot.StringName)
  commentId: M:Godot.Control.HasThemeIcon(Godot.StringName,Godot.StringName)
  parent: Godot.Control
  isExternal: true
  name: HasThemeIcon(StringName, StringName)
  nameWithType: Control.HasThemeIcon(StringName, StringName)
  fullName: Godot.Control.HasThemeIcon(Godot.StringName, Godot.StringName)
  spec.csharp:
  - uid: Godot.Control.HasThemeIcon(Godot.StringName,Godot.StringName)
    name: HasThemeIcon
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: )
  spec.vb:
  - uid: Godot.Control.HasThemeIcon(Godot.StringName,Godot.StringName)
    name: HasThemeIcon
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: )
- uid: Godot.Control.HasThemeStylebox(Godot.StringName,Godot.StringName)
  commentId: M:Godot.Control.HasThemeStylebox(Godot.StringName,Godot.StringName)
  parent: Godot.Control
  isExternal: true
  name: HasThemeStylebox(StringName, StringName)
  nameWithType: Control.HasThemeStylebox(StringName, StringName)
  fullName: Godot.Control.HasThemeStylebox(Godot.StringName, Godot.StringName)
  spec.csharp:
  - uid: Godot.Control.HasThemeStylebox(Godot.StringName,Godot.StringName)
    name: HasThemeStylebox
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: )
  spec.vb:
  - uid: Godot.Control.HasThemeStylebox(Godot.StringName,Godot.StringName)
    name: HasThemeStylebox
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: )
- uid: Godot.Control.HasThemeFont(Godot.StringName,Godot.StringName)
  commentId: M:Godot.Control.HasThemeFont(Godot.StringName,Godot.StringName)
  parent: Godot.Control
  isExternal: true
  name: HasThemeFont(StringName, StringName)
  nameWithType: Control.HasThemeFont(StringName, StringName)
  fullName: Godot.Control.HasThemeFont(Godot.StringName, Godot.StringName)
  spec.csharp:
  - uid: Godot.Control.HasThemeFont(Godot.StringName,Godot.StringName)
    name: HasThemeFont
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: )
  spec.vb:
  - uid: Godot.Control.HasThemeFont(Godot.StringName,Godot.StringName)
    name: HasThemeFont
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: )
- uid: Godot.Control.HasThemeFontSize(Godot.StringName,Godot.StringName)
  commentId: M:Godot.Control.HasThemeFontSize(Godot.StringName,Godot.StringName)
  parent: Godot.Control
  isExternal: true
  name: HasThemeFontSize(StringName, StringName)
  nameWithType: Control.HasThemeFontSize(StringName, StringName)
  fullName: Godot.Control.HasThemeFontSize(Godot.StringName, Godot.StringName)
  spec.csharp:
  - uid: Godot.Control.HasThemeFontSize(Godot.StringName,Godot.StringName)
    name: HasThemeFontSize
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: )
  spec.vb:
  - uid: Godot.Control.HasThemeFontSize(Godot.StringName,Godot.StringName)
    name: HasThemeFontSize
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: )
- uid: Godot.Control.HasThemeColor(Godot.StringName,Godot.StringName)
  commentId: M:Godot.Control.HasThemeColor(Godot.StringName,Godot.StringName)
  parent: Godot.Control
  isExternal: true
  name: HasThemeColor(StringName, StringName)
  nameWithType: Control.HasThemeColor(StringName, StringName)
  fullName: Godot.Control.HasThemeColor(Godot.StringName, Godot.StringName)
  spec.csharp:
  - uid: Godot.Control.HasThemeColor(Godot.StringName,Godot.StringName)
    name: HasThemeColor
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: )
  spec.vb:
  - uid: Godot.Control.HasThemeColor(Godot.StringName,Godot.StringName)
    name: HasThemeColor
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: )
- uid: Godot.Control.HasThemeConstant(Godot.StringName,Godot.StringName)
  commentId: M:Godot.Control.HasThemeConstant(Godot.StringName,Godot.StringName)
  parent: Godot.Control
  isExternal: true
  name: HasThemeConstant(StringName, StringName)
  nameWithType: Control.HasThemeConstant(StringName, StringName)
  fullName: Godot.Control.HasThemeConstant(Godot.StringName, Godot.StringName)
  spec.csharp:
  - uid: Godot.Control.HasThemeConstant(Godot.StringName,Godot.StringName)
    name: HasThemeConstant
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: )
  spec.vb:
  - uid: Godot.Control.HasThemeConstant(Godot.StringName,Godot.StringName)
    name: HasThemeConstant
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: )
- uid: Godot.Control.GetThemeDefaultBaseScale
  commentId: M:Godot.Control.GetThemeDefaultBaseScale
  parent: Godot.Control
  isExternal: true
  name: GetThemeDefaultBaseScale()
  nameWithType: Control.GetThemeDefaultBaseScale()
  fullName: Godot.Control.GetThemeDefaultBaseScale()
  spec.csharp:
  - uid: Godot.Control.GetThemeDefaultBaseScale
    name: GetThemeDefaultBaseScale
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Godot.Control.GetThemeDefaultBaseScale
    name: GetThemeDefaultBaseScale
    isExternal: true
  - name: (
  - name: )
- uid: Godot.Control.GetThemeDefaultFont
  commentId: M:Godot.Control.GetThemeDefaultFont
  parent: Godot.Control
  isExternal: true
  name: GetThemeDefaultFont()
  nameWithType: Control.GetThemeDefaultFont()
  fullName: Godot.Control.GetThemeDefaultFont()
  spec.csharp:
  - uid: Godot.Control.GetThemeDefaultFont
    name: GetThemeDefaultFont
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Godot.Control.GetThemeDefaultFont
    name: GetThemeDefaultFont
    isExternal: true
  - name: (
  - name: )
- uid: Godot.Control.GetThemeDefaultFontSize
  commentId: M:Godot.Control.GetThemeDefaultFontSize
  parent: Godot.Control
  isExternal: true
  name: GetThemeDefaultFontSize()
  nameWithType: Control.GetThemeDefaultFontSize()
  fullName: Godot.Control.GetThemeDefaultFontSize()
  spec.csharp:
  - uid: Godot.Control.GetThemeDefaultFontSize
    name: GetThemeDefaultFontSize
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Godot.Control.GetThemeDefaultFontSize
    name: GetThemeDefaultFontSize
    isExternal: true
  - name: (
  - name: )
- uid: Godot.Control.GetParentControl
  commentId: M:Godot.Control.GetParentControl
  parent: Godot.Control
  isExternal: true
  name: GetParentControl()
  nameWithType: Control.GetParentControl()
  fullName: Godot.Control.GetParentControl()
  spec.csharp:
  - uid: Godot.Control.GetParentControl
    name: GetParentControl
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Godot.Control.GetParentControl
    name: GetParentControl
    isExternal: true
  - name: (
  - name: )
- uid: Godot.Control.GetTooltip(System.Nullable{Godot.Vector2})
  commentId: M:Godot.Control.GetTooltip(System.Nullable{Godot.Vector2})
  parent: Godot.Control
  isExternal: true
  name: GetTooltip(Vector2?)
  nameWithType: Control.GetTooltip(Vector2?)
  fullName: Godot.Control.GetTooltip(Godot.Vector2?)
  spec.csharp:
  - uid: Godot.Control.GetTooltip(System.Nullable{Godot.Vector2})
    name: GetTooltip
    isExternal: true
  - name: (
  - uid: Godot.Vector2
    name: Vector2
    isExternal: true
  - name: '?'
  - name: )
  spec.vb:
  - uid: Godot.Control.GetTooltip(System.Nullable{Godot.Vector2})
    name: GetTooltip
    isExternal: true
  - name: (
  - uid: Godot.Vector2
    name: Vector2
    isExternal: true
  - name: '?'
  - name: )
- uid: Godot.Control.GetCursorShape(System.Nullable{Godot.Vector2})
  commentId: M:Godot.Control.GetCursorShape(System.Nullable{Godot.Vector2})
  parent: Godot.Control
  isExternal: true
  name: GetCursorShape(Vector2?)
  nameWithType: Control.GetCursorShape(Vector2?)
  fullName: Godot.Control.GetCursorShape(Godot.Vector2?)
  spec.csharp:
  - uid: Godot.Control.GetCursorShape(System.Nullable{Godot.Vector2})
    name: GetCursorShape
    isExternal: true
  - name: (
  - uid: Godot.Vector2
    name: Vector2
    isExternal: true
  - name: '?'
  - name: )
  spec.vb:
  - uid: Godot.Control.GetCursorShape(System.Nullable{Godot.Vector2})
    name: GetCursorShape
    isExternal: true
  - name: (
  - uid: Godot.Vector2
    name: Vector2
    isExternal: true
  - name: '?'
  - name: )
- uid: Godot.Control.ForceDrag(Godot.Variant,Godot.Control)
  commentId: M:Godot.Control.ForceDrag(Godot.Variant,Godot.Control)
  parent: Godot.Control
  isExternal: true
  name: ForceDrag(Variant, Control)
  nameWithType: Control.ForceDrag(Variant, Control)
  fullName: Godot.Control.ForceDrag(Godot.Variant, Godot.Control)
  spec.csharp:
  - uid: Godot.Control.ForceDrag(Godot.Variant,Godot.Control)
    name: ForceDrag
    isExternal: true
  - name: (
  - uid: Godot.Variant
    name: Variant
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.Control
    name: Control
    isExternal: true
  - name: )
  spec.vb:
  - uid: Godot.Control.ForceDrag(Godot.Variant,Godot.Control)
    name: ForceDrag
    isExternal: true
  - name: (
  - uid: Godot.Variant
    name: Variant
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.Control
    name: Control
    isExternal: true
  - name: )
- uid: Godot.Control.GrabClickFocus
  commentId: M:Godot.Control.GrabClickFocus
  parent: Godot.Control
  isExternal: true
  name: GrabClickFocus()
  nameWithType: Control.GrabClickFocus()
  fullName: Godot.Control.GrabClickFocus()
  spec.csharp:
  - uid: Godot.Control.GrabClickFocus
    name: GrabClickFocus
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Godot.Control.GrabClickFocus
    name: GrabClickFocus
    isExternal: true
  - name: (
  - name: )
- uid: Godot.Control.SetDragForwarding(Godot.Callable,Godot.Callable,Godot.Callable)
  commentId: M:Godot.Control.SetDragForwarding(Godot.Callable,Godot.Callable,Godot.Callable)
  parent: Godot.Control
  isExternal: true
  name: SetDragForwarding(Callable, Callable, Callable)
  nameWithType: Control.SetDragForwarding(Callable, Callable, Callable)
  fullName: Godot.Control.SetDragForwarding(Godot.Callable, Godot.Callable, Godot.Callable)
  spec.csharp:
  - uid: Godot.Control.SetDragForwarding(Godot.Callable,Godot.Callable,Godot.Callable)
    name: SetDragForwarding
    isExternal: true
  - name: (
  - uid: Godot.Callable
    name: Callable
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.Callable
    name: Callable
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.Callable
    name: Callable
    isExternal: true
  - name: )
  spec.vb:
  - uid: Godot.Control.SetDragForwarding(Godot.Callable,Godot.Callable,Godot.Callable)
    name: SetDragForwarding
    isExternal: true
  - name: (
  - uid: Godot.Callable
    name: Callable
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.Callable
    name: Callable
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.Callable
    name: Callable
    isExternal: true
  - name: )
- uid: Godot.Control.SetDragPreview(Godot.Control)
  commentId: M:Godot.Control.SetDragPreview(Godot.Control)
  parent: Godot.Control
  isExternal: true
  name: SetDragPreview(Control)
  nameWithType: Control.SetDragPreview(Control)
  fullName: Godot.Control.SetDragPreview(Godot.Control)
  spec.csharp:
  - uid: Godot.Control.SetDragPreview(Godot.Control)
    name: SetDragPreview
    isExternal: true
  - name: (
  - uid: Godot.Control
    name: Control
    isExternal: true
  - name: )
  spec.vb:
  - uid: Godot.Control.SetDragPreview(Godot.Control)
    name: SetDragPreview
    isExternal: true
  - name: (
  - uid: Godot.Control
    name: Control
    isExternal: true
  - name: )
- uid: Godot.Control.IsDragSuccessful
  commentId: M:Godot.Control.IsDragSuccessful
  parent: Godot.Control
  isExternal: true
  name: IsDragSuccessful()
  nameWithType: Control.IsDragSuccessful()
  fullName: Godot.Control.IsDragSuccessful()
  spec.csharp:
  - uid: Godot.Control.IsDragSuccessful
    name: IsDragSuccessful
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Godot.Control.IsDragSuccessful
    name: IsDragSuccessful
    isExternal: true
  - name: (
  - name: )
- uid: Godot.Control.WarpMouse(Godot.Vector2)
  commentId: M:Godot.Control.WarpMouse(Godot.Vector2)
  parent: Godot.Control
  isExternal: true
  name: WarpMouse(Vector2)
  nameWithType: Control.WarpMouse(Vector2)
  fullName: Godot.Control.WarpMouse(Godot.Vector2)
  spec.csharp:
  - uid: Godot.Control.WarpMouse(Godot.Vector2)
    name: WarpMouse
    isExternal: true
  - name: (
  - uid: Godot.Vector2
    name: Vector2
    isExternal: true
  - name: )
  spec.vb:
  - uid: Godot.Control.WarpMouse(Godot.Vector2)
    name: WarpMouse
    isExternal: true
  - name: (
  - uid: Godot.Vector2
    name: Vector2
    isExternal: true
  - name: )
- uid: Godot.Control.UpdateMinimumSize
  commentId: M:Godot.Control.UpdateMinimumSize
  parent: Godot.Control
  isExternal: true
  name: UpdateMinimumSize()
  nameWithType: Control.UpdateMinimumSize()
  fullName: Godot.Control.UpdateMinimumSize()
  spec.csharp:
  - uid: Godot.Control.UpdateMinimumSize
    name: UpdateMinimumSize
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Godot.Control.UpdateMinimumSize
    name: UpdateMinimumSize
    isExternal: true
  - name: (
  - name: )
- uid: Godot.Control.IsLayoutRtl
  commentId: M:Godot.Control.IsLayoutRtl
  parent: Godot.Control
  isExternal: true
  name: IsLayoutRtl()
  nameWithType: Control.IsLayoutRtl()
  fullName: Godot.Control.IsLayoutRtl()
  spec.csharp:
  - uid: Godot.Control.IsLayoutRtl
    name: IsLayoutRtl
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Godot.Control.IsLayoutRtl
    name: IsLayoutRtl
    isExternal: true
  - name: (
  - name: )
- uid: Godot.Control.InvokeGodotClassMethod(Godot.NativeInterop.godot_string_name@,Godot.NativeInterop.NativeVariantPtrArgs,Godot.NativeInterop.godot_variant@)
  commentId: M:Godot.Control.InvokeGodotClassMethod(Godot.NativeInterop.godot_string_name@,Godot.NativeInterop.NativeVariantPtrArgs,Godot.NativeInterop.godot_variant@)
  parent: Godot.Control
  isExternal: true
  name: InvokeGodotClassMethod(in godot_string_name, NativeVariantPtrArgs, out godot_variant)
  nameWithType: Control.InvokeGodotClassMethod(in godot_string_name, NativeVariantPtrArgs, out godot_variant)
  fullName: Godot.Control.InvokeGodotClassMethod(in Godot.NativeInterop.godot_string_name, Godot.NativeInterop.NativeVariantPtrArgs, out Godot.NativeInterop.godot_variant)
  nameWithType.vb: Control.InvokeGodotClassMethod(godot_string_name, NativeVariantPtrArgs, godot_variant)
  fullName.vb: Godot.Control.InvokeGodotClassMethod(Godot.NativeInterop.godot_string_name, Godot.NativeInterop.NativeVariantPtrArgs, Godot.NativeInterop.godot_variant)
  name.vb: InvokeGodotClassMethod(godot_string_name, NativeVariantPtrArgs, godot_variant)
  spec.csharp:
  - uid: Godot.Control.InvokeGodotClassMethod(Godot.NativeInterop.godot_string_name@,Godot.NativeInterop.NativeVariantPtrArgs,Godot.NativeInterop.godot_variant@)
    name: InvokeGodotClassMethod
    isExternal: true
  - name: (
  - name: in
  - name: " "
  - uid: Godot.NativeInterop.godot_string_name
    name: godot_string_name
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.NativeInterop.NativeVariantPtrArgs
    name: NativeVariantPtrArgs
    isExternal: true
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - uid: Godot.NativeInterop.godot_variant
    name: godot_variant
    isExternal: true
  - name: )
  spec.vb:
  - uid: Godot.Control.InvokeGodotClassMethod(Godot.NativeInterop.godot_string_name@,Godot.NativeInterop.NativeVariantPtrArgs,Godot.NativeInterop.godot_variant@)
    name: InvokeGodotClassMethod
    isExternal: true
  - name: (
  - uid: Godot.NativeInterop.godot_string_name
    name: godot_string_name
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.NativeInterop.NativeVariantPtrArgs
    name: NativeVariantPtrArgs
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.NativeInterop.godot_variant
    name: godot_variant
    isExternal: true
  - name: )
- uid: Godot.Control.HasGodotClassMethod(Godot.NativeInterop.godot_string_name@)
  commentId: M:Godot.Control.HasGodotClassMethod(Godot.NativeInterop.godot_string_name@)
  parent: Godot.Control
  isExternal: true
  name: HasGodotClassMethod(in godot_string_name)
  nameWithType: Control.HasGodotClassMethod(in godot_string_name)
  fullName: Godot.Control.HasGodotClassMethod(in Godot.NativeInterop.godot_string_name)
  nameWithType.vb: Control.HasGodotClassMethod(godot_string_name)
  fullName.vb: Godot.Control.HasGodotClassMethod(Godot.NativeInterop.godot_string_name)
  name.vb: HasGodotClassMethod(godot_string_name)
  spec.csharp:
  - uid: Godot.Control.HasGodotClassMethod(Godot.NativeInterop.godot_string_name@)
    name: HasGodotClassMethod
    isExternal: true
  - name: (
  - name: in
  - name: " "
  - uid: Godot.NativeInterop.godot_string_name
    name: godot_string_name
    isExternal: true
  - name: )
  spec.vb:
  - uid: Godot.Control.HasGodotClassMethod(Godot.NativeInterop.godot_string_name@)
    name: HasGodotClassMethod
    isExternal: true
  - name: (
  - uid: Godot.NativeInterop.godot_string_name
    name: godot_string_name
    isExternal: true
  - name: )
- uid: Godot.Control.HasGodotClassSignal(Godot.NativeInterop.godot_string_name@)
  commentId: M:Godot.Control.HasGodotClassSignal(Godot.NativeInterop.godot_string_name@)
  parent: Godot.Control
  isExternal: true
  name: HasGodotClassSignal(in godot_string_name)
  nameWithType: Control.HasGodotClassSignal(in godot_string_name)
  fullName: Godot.Control.HasGodotClassSignal(in Godot.NativeInterop.godot_string_name)
  nameWithType.vb: Control.HasGodotClassSignal(godot_string_name)
  fullName.vb: Godot.Control.HasGodotClassSignal(Godot.NativeInterop.godot_string_name)
  name.vb: HasGodotClassSignal(godot_string_name)
  spec.csharp:
  - uid: Godot.Control.HasGodotClassSignal(Godot.NativeInterop.godot_string_name@)
    name: HasGodotClassSignal
    isExternal: true
  - name: (
  - name: in
  - name: " "
  - uid: Godot.NativeInterop.godot_string_name
    name: godot_string_name
    isExternal: true
  - name: )
  spec.vb:
  - uid: Godot.Control.HasGodotClassSignal(Godot.NativeInterop.godot_string_name@)
    name: HasGodotClassSignal
    isExternal: true
  - name: (
  - uid: Godot.NativeInterop.godot_string_name
    name: godot_string_name
    isExternal: true
  - name: )
- uid: Godot.Control.ClipContents
  commentId: P:Godot.Control.ClipContents
  parent: Godot.Control
  isExternal: true
  name: ClipContents
  nameWithType: Control.ClipContents
  fullName: Godot.Control.ClipContents
- uid: Godot.Control.CustomMinimumSize
  commentId: P:Godot.Control.CustomMinimumSize
  parent: Godot.Control
  isExternal: true
  name: CustomMinimumSize
  nameWithType: Control.CustomMinimumSize
  fullName: Godot.Control.CustomMinimumSize
- uid: Godot.Control.LayoutDirection
  commentId: P:Godot.Control.LayoutDirection
  parent: Godot.Control
  isExternal: true
  name: LayoutDirection
  nameWithType: Control.LayoutDirection
  fullName: Godot.Control.LayoutDirection
- uid: Godot.Control.AnchorLeft
  commentId: P:Godot.Control.AnchorLeft
  parent: Godot.Control
  isExternal: true
  name: AnchorLeft
  nameWithType: Control.AnchorLeft
  fullName: Godot.Control.AnchorLeft
- uid: Godot.Control.AnchorTop
  commentId: P:Godot.Control.AnchorTop
  parent: Godot.Control
  isExternal: true
  name: AnchorTop
  nameWithType: Control.AnchorTop
  fullName: Godot.Control.AnchorTop
- uid: Godot.Control.AnchorRight
  commentId: P:Godot.Control.AnchorRight
  parent: Godot.Control
  isExternal: true
  name: AnchorRight
  nameWithType: Control.AnchorRight
  fullName: Godot.Control.AnchorRight
- uid: Godot.Control.AnchorBottom
  commentId: P:Godot.Control.AnchorBottom
  parent: Godot.Control
  isExternal: true
  name: AnchorBottom
  nameWithType: Control.AnchorBottom
  fullName: Godot.Control.AnchorBottom
- uid: Godot.Control.OffsetLeft
  commentId: P:Godot.Control.OffsetLeft
  parent: Godot.Control
  isExternal: true
  name: OffsetLeft
  nameWithType: Control.OffsetLeft
  fullName: Godot.Control.OffsetLeft
- uid: Godot.Control.OffsetTop
  commentId: P:Godot.Control.OffsetTop
  parent: Godot.Control
  isExternal: true
  name: OffsetTop
  nameWithType: Control.OffsetTop
  fullName: Godot.Control.OffsetTop
- uid: Godot.Control.OffsetRight
  commentId: P:Godot.Control.OffsetRight
  parent: Godot.Control
  isExternal: true
  name: OffsetRight
  nameWithType: Control.OffsetRight
  fullName: Godot.Control.OffsetRight
- uid: Godot.Control.OffsetBottom
  commentId: P:Godot.Control.OffsetBottom
  parent: Godot.Control
  isExternal: true
  name: OffsetBottom
  nameWithType: Control.OffsetBottom
  fullName: Godot.Control.OffsetBottom
- uid: Godot.Control.GrowHorizontal
  commentId: P:Godot.Control.GrowHorizontal
  parent: Godot.Control
  isExternal: true
  name: GrowHorizontal
  nameWithType: Control.GrowHorizontal
  fullName: Godot.Control.GrowHorizontal
- uid: Godot.Control.GrowVertical
  commentId: P:Godot.Control.GrowVertical
  parent: Godot.Control
  isExternal: true
  name: GrowVertical
  nameWithType: Control.GrowVertical
  fullName: Godot.Control.GrowVertical
- uid: Godot.Control.Size
  commentId: P:Godot.Control.Size
  parent: Godot.Control
  isExternal: true
  name: Size
  nameWithType: Control.Size
  fullName: Godot.Control.Size
- uid: Godot.Control.Position
  commentId: P:Godot.Control.Position
  parent: Godot.Control
  isExternal: true
  name: Position
  nameWithType: Control.Position
  fullName: Godot.Control.Position
- uid: Godot.Control.GlobalPosition
  commentId: P:Godot.Control.GlobalPosition
  parent: Godot.Control
  isExternal: true
  name: GlobalPosition
  nameWithType: Control.GlobalPosition
  fullName: Godot.Control.GlobalPosition
- uid: Godot.Control.Rotation
  commentId: P:Godot.Control.Rotation
  parent: Godot.Control
  isExternal: true
  name: Rotation
  nameWithType: Control.Rotation
  fullName: Godot.Control.Rotation
- uid: Godot.Control.RotationDegrees
  commentId: P:Godot.Control.RotationDegrees
  parent: Godot.Control
  isExternal: true
  name: RotationDegrees
  nameWithType: Control.RotationDegrees
  fullName: Godot.Control.RotationDegrees
- uid: Godot.Control.Scale
  commentId: P:Godot.Control.Scale
  parent: Godot.Control
  isExternal: true
  name: Scale
  nameWithType: Control.Scale
  fullName: Godot.Control.Scale
- uid: Godot.Control.PivotOffset
  commentId: P:Godot.Control.PivotOffset
  parent: Godot.Control
  isExternal: true
  name: PivotOffset
  nameWithType: Control.PivotOffset
  fullName: Godot.Control.PivotOffset
- uid: Godot.Control.SizeFlagsHorizontal
  commentId: P:Godot.Control.SizeFlagsHorizontal
  parent: Godot.Control
  isExternal: true
  name: SizeFlagsHorizontal
  nameWithType: Control.SizeFlagsHorizontal
  fullName: Godot.Control.SizeFlagsHorizontal
- uid: Godot.Control.SizeFlagsVertical
  commentId: P:Godot.Control.SizeFlagsVertical
  parent: Godot.Control
  isExternal: true
  name: SizeFlagsVertical
  nameWithType: Control.SizeFlagsVertical
  fullName: Godot.Control.SizeFlagsVertical
- uid: Godot.Control.SizeFlagsStretchRatio
  commentId: P:Godot.Control.SizeFlagsStretchRatio
  parent: Godot.Control
  isExternal: true
  name: SizeFlagsStretchRatio
  nameWithType: Control.SizeFlagsStretchRatio
  fullName: Godot.Control.SizeFlagsStretchRatio
- uid: Godot.Control.LocalizeNumeralSystem
  commentId: P:Godot.Control.LocalizeNumeralSystem
  parent: Godot.Control
  isExternal: true
  name: LocalizeNumeralSystem
  nameWithType: Control.LocalizeNumeralSystem
  fullName: Godot.Control.LocalizeNumeralSystem
- uid: Godot.Control.AutoTranslate
  commentId: P:Godot.Control.AutoTranslate
  parent: Godot.Control
  isExternal: true
  name: AutoTranslate
  nameWithType: Control.AutoTranslate
  fullName: Godot.Control.AutoTranslate
- uid: Godot.Control.TooltipText
  commentId: P:Godot.Control.TooltipText
  parent: Godot.Control
  isExternal: true
  name: TooltipText
  nameWithType: Control.TooltipText
  fullName: Godot.Control.TooltipText
- uid: Godot.Control.FocusNeighborLeft
  commentId: P:Godot.Control.FocusNeighborLeft
  parent: Godot.Control
  isExternal: true
  name: FocusNeighborLeft
  nameWithType: Control.FocusNeighborLeft
  fullName: Godot.Control.FocusNeighborLeft
- uid: Godot.Control.FocusNeighborTop
  commentId: P:Godot.Control.FocusNeighborTop
  parent: Godot.Control
  isExternal: true
  name: FocusNeighborTop
  nameWithType: Control.FocusNeighborTop
  fullName: Godot.Control.FocusNeighborTop
- uid: Godot.Control.FocusNeighborRight
  commentId: P:Godot.Control.FocusNeighborRight
  parent: Godot.Control
  isExternal: true
  name: FocusNeighborRight
  nameWithType: Control.FocusNeighborRight
  fullName: Godot.Control.FocusNeighborRight
- uid: Godot.Control.FocusNeighborBottom
  commentId: P:Godot.Control.FocusNeighborBottom
  parent: Godot.Control
  isExternal: true
  name: FocusNeighborBottom
  nameWithType: Control.FocusNeighborBottom
  fullName: Godot.Control.FocusNeighborBottom
- uid: Godot.Control.FocusNext
  commentId: P:Godot.Control.FocusNext
  parent: Godot.Control
  isExternal: true
  name: FocusNext
  nameWithType: Control.FocusNext
  fullName: Godot.Control.FocusNext
- uid: Godot.Control.FocusPrevious
  commentId: P:Godot.Control.FocusPrevious
  parent: Godot.Control
  isExternal: true
  name: FocusPrevious
  nameWithType: Control.FocusPrevious
  fullName: Godot.Control.FocusPrevious
- uid: Godot.Control.FocusMode
  commentId: P:Godot.Control.FocusMode
  parent: Godot.Control
  isExternal: true
  name: FocusMode
  nameWithType: Control.FocusMode
  fullName: Godot.Control.FocusMode
- uid: Godot.Control.MouseFilter
  commentId: P:Godot.Control.MouseFilter
  parent: Godot.Control
  isExternal: true
  name: MouseFilter
  nameWithType: Control.MouseFilter
  fullName: Godot.Control.MouseFilter
- uid: Godot.Control.MouseForcePassScrollEvents
  commentId: P:Godot.Control.MouseForcePassScrollEvents
  parent: Godot.Control
  isExternal: true
  name: MouseForcePassScrollEvents
  nameWithType: Control.MouseForcePassScrollEvents
  fullName: Godot.Control.MouseForcePassScrollEvents
- uid: Godot.Control.MouseDefaultCursorShape
  commentId: P:Godot.Control.MouseDefaultCursorShape
  parent: Godot.Control
  isExternal: true
  name: MouseDefaultCursorShape
  nameWithType: Control.MouseDefaultCursorShape
  fullName: Godot.Control.MouseDefaultCursorShape
- uid: Godot.Control.ShortcutContext
  commentId: P:Godot.Control.ShortcutContext
  parent: Godot.Control
  isExternal: true
  name: ShortcutContext
  nameWithType: Control.ShortcutContext
  fullName: Godot.Control.ShortcutContext
- uid: Godot.Control.Theme
  commentId: P:Godot.Control.Theme
  parent: Godot.Control
  isExternal: true
  name: Theme
  nameWithType: Control.Theme
  fullName: Godot.Control.Theme
- uid: Godot.Control.ThemeTypeVariation
  commentId: P:Godot.Control.ThemeTypeVariation
  parent: Godot.Control
  isExternal: true
  name: ThemeTypeVariation
  nameWithType: Control.ThemeTypeVariation
  fullName: Godot.Control.ThemeTypeVariation
- uid: Godot.Control.Resized
  commentId: E:Godot.Control.Resized
  parent: Godot.Control
  isExternal: true
  name: Resized
  nameWithType: Control.Resized
  fullName: Godot.Control.Resized
- uid: Godot.Control.GuiInput
  commentId: E:Godot.Control.GuiInput
  parent: Godot.Control
  isExternal: true
  name: GuiInput
  nameWithType: Control.GuiInput
  fullName: Godot.Control.GuiInput
- uid: Godot.Control.MouseEntered
  commentId: E:Godot.Control.MouseEntered
  parent: Godot.Control
  isExternal: true
  name: MouseEntered
  nameWithType: Control.MouseEntered
  fullName: Godot.Control.MouseEntered
- uid: Godot.Control.MouseExited
  commentId: E:Godot.Control.MouseExited
  parent: Godot.Control
  isExternal: true
  name: MouseExited
  nameWithType: Control.MouseExited
  fullName: Godot.Control.MouseExited
- uid: Godot.Control.FocusEntered
  commentId: E:Godot.Control.FocusEntered
  parent: Godot.Control
  isExternal: true
  name: FocusEntered
  nameWithType: Control.FocusEntered
  fullName: Godot.Control.FocusEntered
- uid: Godot.Control.FocusExited
  commentId: E:Godot.Control.FocusExited
  parent: Godot.Control
  isExternal: true
  name: FocusExited
  nameWithType: Control.FocusExited
  fullName: Godot.Control.FocusExited
- uid: Godot.Control.SizeFlagsChanged
  commentId: E:Godot.Control.SizeFlagsChanged
  parent: Godot.Control
  isExternal: true
  name: SizeFlagsChanged
  nameWithType: Control.SizeFlagsChanged
  fullName: Godot.Control.SizeFlagsChanged
- uid: Godot.Control.MinimumSizeChanged
  commentId: E:Godot.Control.MinimumSizeChanged
  parent: Godot.Control
  isExternal: true
  name: MinimumSizeChanged
  nameWithType: Control.MinimumSizeChanged
  fullName: Godot.Control.MinimumSizeChanged
- uid: Godot.Control.ThemeChanged
  commentId: E:Godot.Control.ThemeChanged
  parent: Godot.Control
  isExternal: true
  name: ThemeChanged
  nameWithType: Control.ThemeChanged
  fullName: Godot.Control.ThemeChanged
- uid: Godot.CanvasItem.NotificationTransformChanged
  commentId: F:Godot.CanvasItem.NotificationTransformChanged
  parent: Godot.CanvasItem
  isExternal: true
  name: NotificationTransformChanged
  nameWithType: CanvasItem.NotificationTransformChanged
  fullName: Godot.CanvasItem.NotificationTransformChanged
- uid: Godot.CanvasItem.NotificationLocalTransformChanged
  commentId: F:Godot.CanvasItem.NotificationLocalTransformChanged
  parent: Godot.CanvasItem
  isExternal: true
  name: NotificationLocalTransformChanged
  nameWithType: CanvasItem.NotificationLocalTransformChanged
  fullName: Godot.CanvasItem.NotificationLocalTransformChanged
- uid: Godot.CanvasItem.NotificationDraw
  commentId: F:Godot.CanvasItem.NotificationDraw
  parent: Godot.CanvasItem
  isExternal: true
  name: NotificationDraw
  nameWithType: CanvasItem.NotificationDraw
  fullName: Godot.CanvasItem.NotificationDraw
- uid: Godot.CanvasItem.NotificationVisibilityChanged
  commentId: F:Godot.CanvasItem.NotificationVisibilityChanged
  parent: Godot.CanvasItem
  isExternal: true
  name: NotificationVisibilityChanged
  nameWithType: CanvasItem.NotificationVisibilityChanged
  fullName: Godot.CanvasItem.NotificationVisibilityChanged
- uid: Godot.CanvasItem.NotificationEnterCanvas
  commentId: F:Godot.CanvasItem.NotificationEnterCanvas
  parent: Godot.CanvasItem
  isExternal: true
  name: NotificationEnterCanvas
  nameWithType: CanvasItem.NotificationEnterCanvas
  fullName: Godot.CanvasItem.NotificationEnterCanvas
- uid: Godot.CanvasItem.NotificationExitCanvas
  commentId: F:Godot.CanvasItem.NotificationExitCanvas
  parent: Godot.CanvasItem
  isExternal: true
  name: NotificationExitCanvas
  nameWithType: CanvasItem.NotificationExitCanvas
  fullName: Godot.CanvasItem.NotificationExitCanvas
- uid: Godot.CanvasItem.NotificationWorld2DChanged
  commentId: F:Godot.CanvasItem.NotificationWorld2DChanged
  parent: Godot.CanvasItem
  isExternal: true
  name: NotificationWorld2DChanged
  nameWithType: CanvasItem.NotificationWorld2DChanged
  fullName: Godot.CanvasItem.NotificationWorld2DChanged
- uid: Godot.CanvasItem._Draw
  commentId: M:Godot.CanvasItem._Draw
  parent: Godot.CanvasItem
  isExternal: true
  name: _Draw()
  nameWithType: CanvasItem._Draw()
  fullName: Godot.CanvasItem._Draw()
  spec.csharp:
  - uid: Godot.CanvasItem._Draw
    name: _Draw
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Godot.CanvasItem._Draw
    name: _Draw
    isExternal: true
  - name: (
  - name: )
- uid: Godot.CanvasItem.GetCanvasItem
  commentId: M:Godot.CanvasItem.GetCanvasItem
  parent: Godot.CanvasItem
  isExternal: true
  name: GetCanvasItem()
  nameWithType: CanvasItem.GetCanvasItem()
  fullName: Godot.CanvasItem.GetCanvasItem()
  spec.csharp:
  - uid: Godot.CanvasItem.GetCanvasItem
    name: GetCanvasItem
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Godot.CanvasItem.GetCanvasItem
    name: GetCanvasItem
    isExternal: true
  - name: (
  - name: )
- uid: Godot.CanvasItem.IsVisibleInTree
  commentId: M:Godot.CanvasItem.IsVisibleInTree
  parent: Godot.CanvasItem
  isExternal: true
  name: IsVisibleInTree()
  nameWithType: CanvasItem.IsVisibleInTree()
  fullName: Godot.CanvasItem.IsVisibleInTree()
  spec.csharp:
  - uid: Godot.CanvasItem.IsVisibleInTree
    name: IsVisibleInTree
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Godot.CanvasItem.IsVisibleInTree
    name: IsVisibleInTree
    isExternal: true
  - name: (
  - name: )
- uid: Godot.CanvasItem.Show
  commentId: M:Godot.CanvasItem.Show
  parent: Godot.CanvasItem
  isExternal: true
  name: Show()
  nameWithType: CanvasItem.Show()
  fullName: Godot.CanvasItem.Show()
  spec.csharp:
  - uid: Godot.CanvasItem.Show
    name: Show
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Godot.CanvasItem.Show
    name: Show
    isExternal: true
  - name: (
  - name: )
- uid: Godot.CanvasItem.Hide
  commentId: M:Godot.CanvasItem.Hide
  parent: Godot.CanvasItem
  isExternal: true
  name: Hide()
  nameWithType: CanvasItem.Hide()
  fullName: Godot.CanvasItem.Hide()
  spec.csharp:
  - uid: Godot.CanvasItem.Hide
    name: Hide
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Godot.CanvasItem.Hide
    name: Hide
    isExternal: true
  - name: (
  - name: )
- uid: Godot.CanvasItem.QueueRedraw
  commentId: M:Godot.CanvasItem.QueueRedraw
  parent: Godot.CanvasItem
  isExternal: true
  name: QueueRedraw()
  nameWithType: CanvasItem.QueueRedraw()
  fullName: Godot.CanvasItem.QueueRedraw()
  spec.csharp:
  - uid: Godot.CanvasItem.QueueRedraw
    name: QueueRedraw
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Godot.CanvasItem.QueueRedraw
    name: QueueRedraw
    isExternal: true
  - name: (
  - name: )
- uid: Godot.CanvasItem.MoveToFront
  commentId: M:Godot.CanvasItem.MoveToFront
  parent: Godot.CanvasItem
  isExternal: true
  name: MoveToFront()
  nameWithType: CanvasItem.MoveToFront()
  fullName: Godot.CanvasItem.MoveToFront()
  spec.csharp:
  - uid: Godot.CanvasItem.MoveToFront
    name: MoveToFront
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Godot.CanvasItem.MoveToFront
    name: MoveToFront
    isExternal: true
  - name: (
  - name: )
- uid: Godot.CanvasItem.DrawLine(Godot.Vector2,Godot.Vector2,Godot.Color,System.Single,System.Boolean)
  commentId: M:Godot.CanvasItem.DrawLine(Godot.Vector2,Godot.Vector2,Godot.Color,System.Single,System.Boolean)
  parent: Godot.CanvasItem
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: DrawLine(Vector2, Vector2, Color, float, bool)
  nameWithType: CanvasItem.DrawLine(Vector2, Vector2, Color, float, bool)
  fullName: Godot.CanvasItem.DrawLine(Godot.Vector2, Godot.Vector2, Godot.Color, float, bool)
  nameWithType.vb: CanvasItem.DrawLine(Vector2, Vector2, Color, Single, Boolean)
  fullName.vb: Godot.CanvasItem.DrawLine(Godot.Vector2, Godot.Vector2, Godot.Color, Single, Boolean)
  name.vb: DrawLine(Vector2, Vector2, Color, Single, Boolean)
  spec.csharp:
  - uid: Godot.CanvasItem.DrawLine(Godot.Vector2,Godot.Vector2,Godot.Color,System.Single,System.Boolean)
    name: DrawLine
    isExternal: true
  - name: (
  - uid: Godot.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.Color
    name: Color
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Godot.CanvasItem.DrawLine(Godot.Vector2,Godot.Vector2,Godot.Color,System.Single,System.Boolean)
    name: DrawLine
    isExternal: true
  - name: (
  - uid: Godot.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.Color
    name: Color
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Godot.CanvasItem.DrawDashedLine(Godot.Vector2,Godot.Vector2,Godot.Color,System.Single,System.Single,System.Boolean,System.Boolean)
  commentId: M:Godot.CanvasItem.DrawDashedLine(Godot.Vector2,Godot.Vector2,Godot.Color,System.Single,System.Single,System.Boolean,System.Boolean)
  parent: Godot.CanvasItem
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: DrawDashedLine(Vector2, Vector2, Color, float, float, bool, bool)
  nameWithType: CanvasItem.DrawDashedLine(Vector2, Vector2, Color, float, float, bool, bool)
  fullName: Godot.CanvasItem.DrawDashedLine(Godot.Vector2, Godot.Vector2, Godot.Color, float, float, bool, bool)
  nameWithType.vb: CanvasItem.DrawDashedLine(Vector2, Vector2, Color, Single, Single, Boolean, Boolean)
  fullName.vb: Godot.CanvasItem.DrawDashedLine(Godot.Vector2, Godot.Vector2, Godot.Color, Single, Single, Boolean, Boolean)
  name.vb: DrawDashedLine(Vector2, Vector2, Color, Single, Single, Boolean, Boolean)
  spec.csharp:
  - uid: Godot.CanvasItem.DrawDashedLine(Godot.Vector2,Godot.Vector2,Godot.Color,System.Single,System.Single,System.Boolean,System.Boolean)
    name: DrawDashedLine
    isExternal: true
  - name: (
  - uid: Godot.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.Color
    name: Color
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Godot.CanvasItem.DrawDashedLine(Godot.Vector2,Godot.Vector2,Godot.Color,System.Single,System.Single,System.Boolean,System.Boolean)
    name: DrawDashedLine
    isExternal: true
  - name: (
  - uid: Godot.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.Color
    name: Color
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Godot.CanvasItem.DrawPolyline(Godot.Vector2[],Godot.Color,System.Single,System.Boolean)
  commentId: M:Godot.CanvasItem.DrawPolyline(Godot.Vector2[],Godot.Color,System.Single,System.Boolean)
  parent: Godot.CanvasItem
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: DrawPolyline(Vector2[], Color, float, bool)
  nameWithType: CanvasItem.DrawPolyline(Vector2[], Color, float, bool)
  fullName: Godot.CanvasItem.DrawPolyline(Godot.Vector2[], Godot.Color, float, bool)
  nameWithType.vb: CanvasItem.DrawPolyline(Vector2(), Color, Single, Boolean)
  fullName.vb: Godot.CanvasItem.DrawPolyline(Godot.Vector2(), Godot.Color, Single, Boolean)
  name.vb: DrawPolyline(Vector2(), Color, Single, Boolean)
  spec.csharp:
  - uid: Godot.CanvasItem.DrawPolyline(Godot.Vector2[],Godot.Color,System.Single,System.Boolean)
    name: DrawPolyline
    isExternal: true
  - name: (
  - uid: Godot.Vector2
    name: Vector2
    isExternal: true
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: Godot.Color
    name: Color
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Godot.CanvasItem.DrawPolyline(Godot.Vector2[],Godot.Color,System.Single,System.Boolean)
    name: DrawPolyline
    isExternal: true
  - name: (
  - uid: Godot.Vector2
    name: Vector2
    isExternal: true
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: Godot.Color
    name: Color
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Godot.CanvasItem.DrawPolylineColors(Godot.Vector2[],Godot.Color[],System.Single,System.Boolean)
  commentId: M:Godot.CanvasItem.DrawPolylineColors(Godot.Vector2[],Godot.Color[],System.Single,System.Boolean)
  parent: Godot.CanvasItem
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: DrawPolylineColors(Vector2[], Color[], float, bool)
  nameWithType: CanvasItem.DrawPolylineColors(Vector2[], Color[], float, bool)
  fullName: Godot.CanvasItem.DrawPolylineColors(Godot.Vector2[], Godot.Color[], float, bool)
  nameWithType.vb: CanvasItem.DrawPolylineColors(Vector2(), Color(), Single, Boolean)
  fullName.vb: Godot.CanvasItem.DrawPolylineColors(Godot.Vector2(), Godot.Color(), Single, Boolean)
  name.vb: DrawPolylineColors(Vector2(), Color(), Single, Boolean)
  spec.csharp:
  - uid: Godot.CanvasItem.DrawPolylineColors(Godot.Vector2[],Godot.Color[],System.Single,System.Boolean)
    name: DrawPolylineColors
    isExternal: true
  - name: (
  - uid: Godot.Vector2
    name: Vector2
    isExternal: true
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: Godot.Color
    name: Color
    isExternal: true
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Godot.CanvasItem.DrawPolylineColors(Godot.Vector2[],Godot.Color[],System.Single,System.Boolean)
    name: DrawPolylineColors
    isExternal: true
  - name: (
  - uid: Godot.Vector2
    name: Vector2
    isExternal: true
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: Godot.Color
    name: Color
    isExternal: true
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Godot.CanvasItem.DrawArc(Godot.Vector2,System.Single,System.Single,System.Single,System.Int32,Godot.Color,System.Single,System.Boolean)
  commentId: M:Godot.CanvasItem.DrawArc(Godot.Vector2,System.Single,System.Single,System.Single,System.Int32,Godot.Color,System.Single,System.Boolean)
  parent: Godot.CanvasItem
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: DrawArc(Vector2, float, float, float, int, Color, float, bool)
  nameWithType: CanvasItem.DrawArc(Vector2, float, float, float, int, Color, float, bool)
  fullName: Godot.CanvasItem.DrawArc(Godot.Vector2, float, float, float, int, Godot.Color, float, bool)
  nameWithType.vb: CanvasItem.DrawArc(Vector2, Single, Single, Single, Integer, Color, Single, Boolean)
  fullName.vb: Godot.CanvasItem.DrawArc(Godot.Vector2, Single, Single, Single, Integer, Godot.Color, Single, Boolean)
  name.vb: DrawArc(Vector2, Single, Single, Single, Integer, Color, Single, Boolean)
  spec.csharp:
  - uid: Godot.CanvasItem.DrawArc(Godot.Vector2,System.Single,System.Single,System.Single,System.Int32,Godot.Color,System.Single,System.Boolean)
    name: DrawArc
    isExternal: true
  - name: (
  - uid: Godot.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: Godot.Color
    name: Color
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Godot.CanvasItem.DrawArc(Godot.Vector2,System.Single,System.Single,System.Single,System.Int32,Godot.Color,System.Single,System.Boolean)
    name: DrawArc
    isExternal: true
  - name: (
  - uid: Godot.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: Godot.Color
    name: Color
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Godot.CanvasItem.DrawMultiline(Godot.Vector2[],Godot.Color,System.Single,System.Boolean)
  commentId: M:Godot.CanvasItem.DrawMultiline(Godot.Vector2[],Godot.Color,System.Single,System.Boolean)
  parent: Godot.CanvasItem
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: DrawMultiline(Vector2[], Color, float, bool)
  nameWithType: CanvasItem.DrawMultiline(Vector2[], Color, float, bool)
  fullName: Godot.CanvasItem.DrawMultiline(Godot.Vector2[], Godot.Color, float, bool)
  nameWithType.vb: CanvasItem.DrawMultiline(Vector2(), Color, Single, Boolean)
  fullName.vb: Godot.CanvasItem.DrawMultiline(Godot.Vector2(), Godot.Color, Single, Boolean)
  name.vb: DrawMultiline(Vector2(), Color, Single, Boolean)
  spec.csharp:
  - uid: Godot.CanvasItem.DrawMultiline(Godot.Vector2[],Godot.Color,System.Single,System.Boolean)
    name: DrawMultiline
    isExternal: true
  - name: (
  - uid: Godot.Vector2
    name: Vector2
    isExternal: true
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: Godot.Color
    name: Color
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Godot.CanvasItem.DrawMultiline(Godot.Vector2[],Godot.Color,System.Single,System.Boolean)
    name: DrawMultiline
    isExternal: true
  - name: (
  - uid: Godot.Vector2
    name: Vector2
    isExternal: true
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: Godot.Color
    name: Color
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Godot.CanvasItem.DrawMultilineColors(Godot.Vector2[],Godot.Color[],System.Single,System.Boolean)
  commentId: M:Godot.CanvasItem.DrawMultilineColors(Godot.Vector2[],Godot.Color[],System.Single,System.Boolean)
  parent: Godot.CanvasItem
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: DrawMultilineColors(Vector2[], Color[], float, bool)
  nameWithType: CanvasItem.DrawMultilineColors(Vector2[], Color[], float, bool)
  fullName: Godot.CanvasItem.DrawMultilineColors(Godot.Vector2[], Godot.Color[], float, bool)
  nameWithType.vb: CanvasItem.DrawMultilineColors(Vector2(), Color(), Single, Boolean)
  fullName.vb: Godot.CanvasItem.DrawMultilineColors(Godot.Vector2(), Godot.Color(), Single, Boolean)
  name.vb: DrawMultilineColors(Vector2(), Color(), Single, Boolean)
  spec.csharp:
  - uid: Godot.CanvasItem.DrawMultilineColors(Godot.Vector2[],Godot.Color[],System.Single,System.Boolean)
    name: DrawMultilineColors
    isExternal: true
  - name: (
  - uid: Godot.Vector2
    name: Vector2
    isExternal: true
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: Godot.Color
    name: Color
    isExternal: true
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Godot.CanvasItem.DrawMultilineColors(Godot.Vector2[],Godot.Color[],System.Single,System.Boolean)
    name: DrawMultilineColors
    isExternal: true
  - name: (
  - uid: Godot.Vector2
    name: Vector2
    isExternal: true
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: Godot.Color
    name: Color
    isExternal: true
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Godot.CanvasItem.DrawRect(Godot.Rect2,Godot.Color,System.Boolean,System.Single,System.Boolean)
  commentId: M:Godot.CanvasItem.DrawRect(Godot.Rect2,Godot.Color,System.Boolean,System.Single,System.Boolean)
  parent: Godot.CanvasItem
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: DrawRect(Rect2, Color, bool, float, bool)
  nameWithType: CanvasItem.DrawRect(Rect2, Color, bool, float, bool)
  fullName: Godot.CanvasItem.DrawRect(Godot.Rect2, Godot.Color, bool, float, bool)
  nameWithType.vb: CanvasItem.DrawRect(Rect2, Color, Boolean, Single, Boolean)
  fullName.vb: Godot.CanvasItem.DrawRect(Godot.Rect2, Godot.Color, Boolean, Single, Boolean)
  name.vb: DrawRect(Rect2, Color, Boolean, Single, Boolean)
  spec.csharp:
  - uid: Godot.CanvasItem.DrawRect(Godot.Rect2,Godot.Color,System.Boolean,System.Single,System.Boolean)
    name: DrawRect
    isExternal: true
  - name: (
  - uid: Godot.Rect2
    name: Rect2
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.Color
    name: Color
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Godot.CanvasItem.DrawRect(Godot.Rect2,Godot.Color,System.Boolean,System.Single,System.Boolean)
    name: DrawRect
    isExternal: true
  - name: (
  - uid: Godot.Rect2
    name: Rect2
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.Color
    name: Color
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Godot.CanvasItem.DrawCircle(Godot.Vector2,System.Single,Godot.Color,System.Boolean,System.Single,System.Boolean)
  commentId: M:Godot.CanvasItem.DrawCircle(Godot.Vector2,System.Single,Godot.Color,System.Boolean,System.Single,System.Boolean)
  parent: Godot.CanvasItem
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: DrawCircle(Vector2, float, Color, bool, float, bool)
  nameWithType: CanvasItem.DrawCircle(Vector2, float, Color, bool, float, bool)
  fullName: Godot.CanvasItem.DrawCircle(Godot.Vector2, float, Godot.Color, bool, float, bool)
  nameWithType.vb: CanvasItem.DrawCircle(Vector2, Single, Color, Boolean, Single, Boolean)
  fullName.vb: Godot.CanvasItem.DrawCircle(Godot.Vector2, Single, Godot.Color, Boolean, Single, Boolean)
  name.vb: DrawCircle(Vector2, Single, Color, Boolean, Single, Boolean)
  spec.csharp:
  - uid: Godot.CanvasItem.DrawCircle(Godot.Vector2,System.Single,Godot.Color,System.Boolean,System.Single,System.Boolean)
    name: DrawCircle
    isExternal: true
  - name: (
  - uid: Godot.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: Godot.Color
    name: Color
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Godot.CanvasItem.DrawCircle(Godot.Vector2,System.Single,Godot.Color,System.Boolean,System.Single,System.Boolean)
    name: DrawCircle
    isExternal: true
  - name: (
  - uid: Godot.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: Godot.Color
    name: Color
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Godot.CanvasItem.DrawTexture(Godot.Texture2D,Godot.Vector2,System.Nullable{Godot.Color})
  commentId: M:Godot.CanvasItem.DrawTexture(Godot.Texture2D,Godot.Vector2,System.Nullable{Godot.Color})
  parent: Godot.CanvasItem
  isExternal: true
  name: DrawTexture(Texture2D, Vector2, Color?)
  nameWithType: CanvasItem.DrawTexture(Texture2D, Vector2, Color?)
  fullName: Godot.CanvasItem.DrawTexture(Godot.Texture2D, Godot.Vector2, Godot.Color?)
  spec.csharp:
  - uid: Godot.CanvasItem.DrawTexture(Godot.Texture2D,Godot.Vector2,System.Nullable{Godot.Color})
    name: DrawTexture
    isExternal: true
  - name: (
  - uid: Godot.Texture2D
    name: Texture2D
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.Color
    name: Color
    isExternal: true
  - name: '?'
  - name: )
  spec.vb:
  - uid: Godot.CanvasItem.DrawTexture(Godot.Texture2D,Godot.Vector2,System.Nullable{Godot.Color})
    name: DrawTexture
    isExternal: true
  - name: (
  - uid: Godot.Texture2D
    name: Texture2D
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.Color
    name: Color
    isExternal: true
  - name: '?'
  - name: )
- uid: Godot.CanvasItem.DrawTextureRect(Godot.Texture2D,Godot.Rect2,System.Boolean,System.Nullable{Godot.Color},System.Boolean)
  commentId: M:Godot.CanvasItem.DrawTextureRect(Godot.Texture2D,Godot.Rect2,System.Boolean,System.Nullable{Godot.Color},System.Boolean)
  parent: Godot.CanvasItem
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: DrawTextureRect(Texture2D, Rect2, bool, Color?, bool)
  nameWithType: CanvasItem.DrawTextureRect(Texture2D, Rect2, bool, Color?, bool)
  fullName: Godot.CanvasItem.DrawTextureRect(Godot.Texture2D, Godot.Rect2, bool, Godot.Color?, bool)
  nameWithType.vb: CanvasItem.DrawTextureRect(Texture2D, Rect2, Boolean, Color?, Boolean)
  fullName.vb: Godot.CanvasItem.DrawTextureRect(Godot.Texture2D, Godot.Rect2, Boolean, Godot.Color?, Boolean)
  name.vb: DrawTextureRect(Texture2D, Rect2, Boolean, Color?, Boolean)
  spec.csharp:
  - uid: Godot.CanvasItem.DrawTextureRect(Godot.Texture2D,Godot.Rect2,System.Boolean,System.Nullable{Godot.Color},System.Boolean)
    name: DrawTextureRect
    isExternal: true
  - name: (
  - uid: Godot.Texture2D
    name: Texture2D
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.Rect2
    name: Rect2
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Godot.Color
    name: Color
    isExternal: true
  - name: '?'
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Godot.CanvasItem.DrawTextureRect(Godot.Texture2D,Godot.Rect2,System.Boolean,System.Nullable{Godot.Color},System.Boolean)
    name: DrawTextureRect
    isExternal: true
  - name: (
  - uid: Godot.Texture2D
    name: Texture2D
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.Rect2
    name: Rect2
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Godot.Color
    name: Color
    isExternal: true
  - name: '?'
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Godot.CanvasItem.DrawTextureRectRegion(Godot.Texture2D,Godot.Rect2,Godot.Rect2,System.Nullable{Godot.Color},System.Boolean,System.Boolean)
  commentId: M:Godot.CanvasItem.DrawTextureRectRegion(Godot.Texture2D,Godot.Rect2,Godot.Rect2,System.Nullable{Godot.Color},System.Boolean,System.Boolean)
  parent: Godot.CanvasItem
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: DrawTextureRectRegion(Texture2D, Rect2, Rect2, Color?, bool, bool)
  nameWithType: CanvasItem.DrawTextureRectRegion(Texture2D, Rect2, Rect2, Color?, bool, bool)
  fullName: Godot.CanvasItem.DrawTextureRectRegion(Godot.Texture2D, Godot.Rect2, Godot.Rect2, Godot.Color?, bool, bool)
  nameWithType.vb: CanvasItem.DrawTextureRectRegion(Texture2D, Rect2, Rect2, Color?, Boolean, Boolean)
  fullName.vb: Godot.CanvasItem.DrawTextureRectRegion(Godot.Texture2D, Godot.Rect2, Godot.Rect2, Godot.Color?, Boolean, Boolean)
  name.vb: DrawTextureRectRegion(Texture2D, Rect2, Rect2, Color?, Boolean, Boolean)
  spec.csharp:
  - uid: Godot.CanvasItem.DrawTextureRectRegion(Godot.Texture2D,Godot.Rect2,Godot.Rect2,System.Nullable{Godot.Color},System.Boolean,System.Boolean)
    name: DrawTextureRectRegion
    isExternal: true
  - name: (
  - uid: Godot.Texture2D
    name: Texture2D
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.Rect2
    name: Rect2
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.Rect2
    name: Rect2
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.Color
    name: Color
    isExternal: true
  - name: '?'
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Godot.CanvasItem.DrawTextureRectRegion(Godot.Texture2D,Godot.Rect2,Godot.Rect2,System.Nullable{Godot.Color},System.Boolean,System.Boolean)
    name: DrawTextureRectRegion
    isExternal: true
  - name: (
  - uid: Godot.Texture2D
    name: Texture2D
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.Rect2
    name: Rect2
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.Rect2
    name: Rect2
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.Color
    name: Color
    isExternal: true
  - name: '?'
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Godot.CanvasItem.DrawMsdfTextureRectRegion(Godot.Texture2D,Godot.Rect2,Godot.Rect2,System.Nullable{Godot.Color},System.Double,System.Double,System.Double)
  commentId: M:Godot.CanvasItem.DrawMsdfTextureRectRegion(Godot.Texture2D,Godot.Rect2,Godot.Rect2,System.Nullable{Godot.Color},System.Double,System.Double,System.Double)
  parent: Godot.CanvasItem
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.double
  name: DrawMsdfTextureRectRegion(Texture2D, Rect2, Rect2, Color?, double, double, double)
  nameWithType: CanvasItem.DrawMsdfTextureRectRegion(Texture2D, Rect2, Rect2, Color?, double, double, double)
  fullName: Godot.CanvasItem.DrawMsdfTextureRectRegion(Godot.Texture2D, Godot.Rect2, Godot.Rect2, Godot.Color?, double, double, double)
  nameWithType.vb: CanvasItem.DrawMsdfTextureRectRegion(Texture2D, Rect2, Rect2, Color?, Double, Double, Double)
  fullName.vb: Godot.CanvasItem.DrawMsdfTextureRectRegion(Godot.Texture2D, Godot.Rect2, Godot.Rect2, Godot.Color?, Double, Double, Double)
  name.vb: DrawMsdfTextureRectRegion(Texture2D, Rect2, Rect2, Color?, Double, Double, Double)
  spec.csharp:
  - uid: Godot.CanvasItem.DrawMsdfTextureRectRegion(Godot.Texture2D,Godot.Rect2,Godot.Rect2,System.Nullable{Godot.Color},System.Double,System.Double,System.Double)
    name: DrawMsdfTextureRectRegion
    isExternal: true
  - name: (
  - uid: Godot.Texture2D
    name: Texture2D
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.Rect2
    name: Rect2
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.Rect2
    name: Rect2
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.Color
    name: Color
    isExternal: true
  - name: '?'
  - name: ','
  - name: " "
  - uid: System.Double
    name: double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: ','
  - name: " "
  - uid: System.Double
    name: double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: ','
  - name: " "
  - uid: System.Double
    name: double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: )
  spec.vb:
  - uid: Godot.CanvasItem.DrawMsdfTextureRectRegion(Godot.Texture2D,Godot.Rect2,Godot.Rect2,System.Nullable{Godot.Color},System.Double,System.Double,System.Double)
    name: DrawMsdfTextureRectRegion
    isExternal: true
  - name: (
  - uid: Godot.Texture2D
    name: Texture2D
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.Rect2
    name: Rect2
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.Rect2
    name: Rect2
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.Color
    name: Color
    isExternal: true
  - name: '?'
  - name: ','
  - name: " "
  - uid: System.Double
    name: Double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: ','
  - name: " "
  - uid: System.Double
    name: Double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: ','
  - name: " "
  - uid: System.Double
    name: Double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: )
- uid: Godot.CanvasItem.DrawLcdTextureRectRegion(Godot.Texture2D,Godot.Rect2,Godot.Rect2,System.Nullable{Godot.Color})
  commentId: M:Godot.CanvasItem.DrawLcdTextureRectRegion(Godot.Texture2D,Godot.Rect2,Godot.Rect2,System.Nullable{Godot.Color})
  parent: Godot.CanvasItem
  isExternal: true
  name: DrawLcdTextureRectRegion(Texture2D, Rect2, Rect2, Color?)
  nameWithType: CanvasItem.DrawLcdTextureRectRegion(Texture2D, Rect2, Rect2, Color?)
  fullName: Godot.CanvasItem.DrawLcdTextureRectRegion(Godot.Texture2D, Godot.Rect2, Godot.Rect2, Godot.Color?)
  spec.csharp:
  - uid: Godot.CanvasItem.DrawLcdTextureRectRegion(Godot.Texture2D,Godot.Rect2,Godot.Rect2,System.Nullable{Godot.Color})
    name: DrawLcdTextureRectRegion
    isExternal: true
  - name: (
  - uid: Godot.Texture2D
    name: Texture2D
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.Rect2
    name: Rect2
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.Rect2
    name: Rect2
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.Color
    name: Color
    isExternal: true
  - name: '?'
  - name: )
  spec.vb:
  - uid: Godot.CanvasItem.DrawLcdTextureRectRegion(Godot.Texture2D,Godot.Rect2,Godot.Rect2,System.Nullable{Godot.Color})
    name: DrawLcdTextureRectRegion
    isExternal: true
  - name: (
  - uid: Godot.Texture2D
    name: Texture2D
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.Rect2
    name: Rect2
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.Rect2
    name: Rect2
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.Color
    name: Color
    isExternal: true
  - name: '?'
  - name: )
- uid: Godot.CanvasItem.DrawStyleBox(Godot.StyleBox,Godot.Rect2)
  commentId: M:Godot.CanvasItem.DrawStyleBox(Godot.StyleBox,Godot.Rect2)
  parent: Godot.CanvasItem
  isExternal: true
  name: DrawStyleBox(StyleBox, Rect2)
  nameWithType: CanvasItem.DrawStyleBox(StyleBox, Rect2)
  fullName: Godot.CanvasItem.DrawStyleBox(Godot.StyleBox, Godot.Rect2)
  spec.csharp:
  - uid: Godot.CanvasItem.DrawStyleBox(Godot.StyleBox,Godot.Rect2)
    name: DrawStyleBox
    isExternal: true
  - name: (
  - uid: Godot.StyleBox
    name: StyleBox
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.Rect2
    name: Rect2
    isExternal: true
  - name: )
  spec.vb:
  - uid: Godot.CanvasItem.DrawStyleBox(Godot.StyleBox,Godot.Rect2)
    name: DrawStyleBox
    isExternal: true
  - name: (
  - uid: Godot.StyleBox
    name: StyleBox
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.Rect2
    name: Rect2
    isExternal: true
  - name: )
- uid: Godot.CanvasItem.DrawPrimitive(Godot.Vector2[],Godot.Color[],Godot.Vector2[],Godot.Texture2D)
  commentId: M:Godot.CanvasItem.DrawPrimitive(Godot.Vector2[],Godot.Color[],Godot.Vector2[],Godot.Texture2D)
  parent: Godot.CanvasItem
  isExternal: true
  name: DrawPrimitive(Vector2[], Color[], Vector2[], Texture2D)
  nameWithType: CanvasItem.DrawPrimitive(Vector2[], Color[], Vector2[], Texture2D)
  fullName: Godot.CanvasItem.DrawPrimitive(Godot.Vector2[], Godot.Color[], Godot.Vector2[], Godot.Texture2D)
  nameWithType.vb: CanvasItem.DrawPrimitive(Vector2(), Color(), Vector2(), Texture2D)
  fullName.vb: Godot.CanvasItem.DrawPrimitive(Godot.Vector2(), Godot.Color(), Godot.Vector2(), Godot.Texture2D)
  name.vb: DrawPrimitive(Vector2(), Color(), Vector2(), Texture2D)
  spec.csharp:
  - uid: Godot.CanvasItem.DrawPrimitive(Godot.Vector2[],Godot.Color[],Godot.Vector2[],Godot.Texture2D)
    name: DrawPrimitive
    isExternal: true
  - name: (
  - uid: Godot.Vector2
    name: Vector2
    isExternal: true
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: Godot.Color
    name: Color
    isExternal: true
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: Godot.Vector2
    name: Vector2
    isExternal: true
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: Godot.Texture2D
    name: Texture2D
    isExternal: true
  - name: )
  spec.vb:
  - uid: Godot.CanvasItem.DrawPrimitive(Godot.Vector2[],Godot.Color[],Godot.Vector2[],Godot.Texture2D)
    name: DrawPrimitive
    isExternal: true
  - name: (
  - uid: Godot.Vector2
    name: Vector2
    isExternal: true
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: Godot.Color
    name: Color
    isExternal: true
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: Godot.Vector2
    name: Vector2
    isExternal: true
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: Godot.Texture2D
    name: Texture2D
    isExternal: true
  - name: )
- uid: Godot.CanvasItem.DrawPolygon(Godot.Vector2[],Godot.Color[],Godot.Vector2[],Godot.Texture2D)
  commentId: M:Godot.CanvasItem.DrawPolygon(Godot.Vector2[],Godot.Color[],Godot.Vector2[],Godot.Texture2D)
  parent: Godot.CanvasItem
  isExternal: true
  name: DrawPolygon(Vector2[], Color[], Vector2[], Texture2D)
  nameWithType: CanvasItem.DrawPolygon(Vector2[], Color[], Vector2[], Texture2D)
  fullName: Godot.CanvasItem.DrawPolygon(Godot.Vector2[], Godot.Color[], Godot.Vector2[], Godot.Texture2D)
  nameWithType.vb: CanvasItem.DrawPolygon(Vector2(), Color(), Vector2(), Texture2D)
  fullName.vb: Godot.CanvasItem.DrawPolygon(Godot.Vector2(), Godot.Color(), Godot.Vector2(), Godot.Texture2D)
  name.vb: DrawPolygon(Vector2(), Color(), Vector2(), Texture2D)
  spec.csharp:
  - uid: Godot.CanvasItem.DrawPolygon(Godot.Vector2[],Godot.Color[],Godot.Vector2[],Godot.Texture2D)
    name: DrawPolygon
    isExternal: true
  - name: (
  - uid: Godot.Vector2
    name: Vector2
    isExternal: true
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: Godot.Color
    name: Color
    isExternal: true
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: Godot.Vector2
    name: Vector2
    isExternal: true
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: Godot.Texture2D
    name: Texture2D
    isExternal: true
  - name: )
  spec.vb:
  - uid: Godot.CanvasItem.DrawPolygon(Godot.Vector2[],Godot.Color[],Godot.Vector2[],Godot.Texture2D)
    name: DrawPolygon
    isExternal: true
  - name: (
  - uid: Godot.Vector2
    name: Vector2
    isExternal: true
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: Godot.Color
    name: Color
    isExternal: true
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: Godot.Vector2
    name: Vector2
    isExternal: true
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: Godot.Texture2D
    name: Texture2D
    isExternal: true
  - name: )
- uid: Godot.CanvasItem.DrawColoredPolygon(Godot.Vector2[],Godot.Color,Godot.Vector2[],Godot.Texture2D)
  commentId: M:Godot.CanvasItem.DrawColoredPolygon(Godot.Vector2[],Godot.Color,Godot.Vector2[],Godot.Texture2D)
  parent: Godot.CanvasItem
  isExternal: true
  name: DrawColoredPolygon(Vector2[], Color, Vector2[], Texture2D)
  nameWithType: CanvasItem.DrawColoredPolygon(Vector2[], Color, Vector2[], Texture2D)
  fullName: Godot.CanvasItem.DrawColoredPolygon(Godot.Vector2[], Godot.Color, Godot.Vector2[], Godot.Texture2D)
  nameWithType.vb: CanvasItem.DrawColoredPolygon(Vector2(), Color, Vector2(), Texture2D)
  fullName.vb: Godot.CanvasItem.DrawColoredPolygon(Godot.Vector2(), Godot.Color, Godot.Vector2(), Godot.Texture2D)
  name.vb: DrawColoredPolygon(Vector2(), Color, Vector2(), Texture2D)
  spec.csharp:
  - uid: Godot.CanvasItem.DrawColoredPolygon(Godot.Vector2[],Godot.Color,Godot.Vector2[],Godot.Texture2D)
    name: DrawColoredPolygon
    isExternal: true
  - name: (
  - uid: Godot.Vector2
    name: Vector2
    isExternal: true
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: Godot.Color
    name: Color
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.Vector2
    name: Vector2
    isExternal: true
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: Godot.Texture2D
    name: Texture2D
    isExternal: true
  - name: )
  spec.vb:
  - uid: Godot.CanvasItem.DrawColoredPolygon(Godot.Vector2[],Godot.Color,Godot.Vector2[],Godot.Texture2D)
    name: DrawColoredPolygon
    isExternal: true
  - name: (
  - uid: Godot.Vector2
    name: Vector2
    isExternal: true
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: Godot.Color
    name: Color
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.Vector2
    name: Vector2
    isExternal: true
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: Godot.Texture2D
    name: Texture2D
    isExternal: true
  - name: )
- uid: Godot.CanvasItem.DrawString(Godot.Font,Godot.Vector2,System.String,Godot.HorizontalAlignment,System.Single,System.Int32,System.Nullable{Godot.Color},Godot.TextServer.JustificationFlag,Godot.TextServer.Direction,Godot.TextServer.Orientation)
  commentId: M:Godot.CanvasItem.DrawString(Godot.Font,Godot.Vector2,System.String,Godot.HorizontalAlignment,System.Single,System.Int32,System.Nullable{Godot.Color},Godot.TextServer.JustificationFlag,Godot.TextServer.Direction,Godot.TextServer.Orientation)
  parent: Godot.CanvasItem
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: DrawString(Font, Vector2, string, HorizontalAlignment, float, int, Color?, JustificationFlag, Direction, Orientation)
  nameWithType: CanvasItem.DrawString(Font, Vector2, string, HorizontalAlignment, float, int, Color?, TextServer.JustificationFlag, TextServer.Direction, TextServer.Orientation)
  fullName: Godot.CanvasItem.DrawString(Godot.Font, Godot.Vector2, string, Godot.HorizontalAlignment, float, int, Godot.Color?, Godot.TextServer.JustificationFlag, Godot.TextServer.Direction, Godot.TextServer.Orientation)
  nameWithType.vb: CanvasItem.DrawString(Font, Vector2, String, HorizontalAlignment, Single, Integer, Color?, TextServer.JustificationFlag, TextServer.Direction, TextServer.Orientation)
  fullName.vb: Godot.CanvasItem.DrawString(Godot.Font, Godot.Vector2, String, Godot.HorizontalAlignment, Single, Integer, Godot.Color?, Godot.TextServer.JustificationFlag, Godot.TextServer.Direction, Godot.TextServer.Orientation)
  name.vb: DrawString(Font, Vector2, String, HorizontalAlignment, Single, Integer, Color?, JustificationFlag, Direction, Orientation)
  spec.csharp:
  - uid: Godot.CanvasItem.DrawString(Godot.Font,Godot.Vector2,System.String,Godot.HorizontalAlignment,System.Single,System.Int32,System.Nullable{Godot.Color},Godot.TextServer.JustificationFlag,Godot.TextServer.Direction,Godot.TextServer.Orientation)
    name: DrawString
    isExternal: true
  - name: (
  - uid: Godot.Font
    name: Font
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Godot.HorizontalAlignment
    name: HorizontalAlignment
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: Godot.Color
    name: Color
    isExternal: true
  - name: '?'
  - name: ','
  - name: " "
  - uid: Godot.TextServer.JustificationFlag
    name: JustificationFlag
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.TextServer.Direction
    name: Direction
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.TextServer.Orientation
    name: Orientation
    isExternal: true
  - name: )
  spec.vb:
  - uid: Godot.CanvasItem.DrawString(Godot.Font,Godot.Vector2,System.String,Godot.HorizontalAlignment,System.Single,System.Int32,System.Nullable{Godot.Color},Godot.TextServer.JustificationFlag,Godot.TextServer.Direction,Godot.TextServer.Orientation)
    name: DrawString
    isExternal: true
  - name: (
  - uid: Godot.Font
    name: Font
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Godot.HorizontalAlignment
    name: HorizontalAlignment
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: Godot.Color
    name: Color
    isExternal: true
  - name: '?'
  - name: ','
  - name: " "
  - uid: Godot.TextServer.JustificationFlag
    name: JustificationFlag
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.TextServer.Direction
    name: Direction
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.TextServer.Orientation
    name: Orientation
    isExternal: true
  - name: )
- uid: Godot.CanvasItem.DrawMultilineString(Godot.Font,Godot.Vector2,System.String,Godot.HorizontalAlignment,System.Single,System.Int32,System.Int32,System.Nullable{Godot.Color},Godot.TextServer.LineBreakFlag,Godot.TextServer.JustificationFlag,Godot.TextServer.Direction,Godot.TextServer.Orientation)
  commentId: M:Godot.CanvasItem.DrawMultilineString(Godot.Font,Godot.Vector2,System.String,Godot.HorizontalAlignment,System.Single,System.Int32,System.Int32,System.Nullable{Godot.Color},Godot.TextServer.LineBreakFlag,Godot.TextServer.JustificationFlag,Godot.TextServer.Direction,Godot.TextServer.Orientation)
  parent: Godot.CanvasItem
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: DrawMultilineString(Font, Vector2, string, HorizontalAlignment, float, int, int, Color?, LineBreakFlag, JustificationFlag, Direction, Orientation)
  nameWithType: CanvasItem.DrawMultilineString(Font, Vector2, string, HorizontalAlignment, float, int, int, Color?, TextServer.LineBreakFlag, TextServer.JustificationFlag, TextServer.Direction, TextServer.Orientation)
  fullName: Godot.CanvasItem.DrawMultilineString(Godot.Font, Godot.Vector2, string, Godot.HorizontalAlignment, float, int, int, Godot.Color?, Godot.TextServer.LineBreakFlag, Godot.TextServer.JustificationFlag, Godot.TextServer.Direction, Godot.TextServer.Orientation)
  nameWithType.vb: CanvasItem.DrawMultilineString(Font, Vector2, String, HorizontalAlignment, Single, Integer, Integer, Color?, TextServer.LineBreakFlag, TextServer.JustificationFlag, TextServer.Direction, TextServer.Orientation)
  fullName.vb: Godot.CanvasItem.DrawMultilineString(Godot.Font, Godot.Vector2, String, Godot.HorizontalAlignment, Single, Integer, Integer, Godot.Color?, Godot.TextServer.LineBreakFlag, Godot.TextServer.JustificationFlag, Godot.TextServer.Direction, Godot.TextServer.Orientation)
  name.vb: DrawMultilineString(Font, Vector2, String, HorizontalAlignment, Single, Integer, Integer, Color?, LineBreakFlag, JustificationFlag, Direction, Orientation)
  spec.csharp:
  - uid: Godot.CanvasItem.DrawMultilineString(Godot.Font,Godot.Vector2,System.String,Godot.HorizontalAlignment,System.Single,System.Int32,System.Int32,System.Nullable{Godot.Color},Godot.TextServer.LineBreakFlag,Godot.TextServer.JustificationFlag,Godot.TextServer.Direction,Godot.TextServer.Orientation)
    name: DrawMultilineString
    isExternal: true
  - name: (
  - uid: Godot.Font
    name: Font
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Godot.HorizontalAlignment
    name: HorizontalAlignment
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: Godot.Color
    name: Color
    isExternal: true
  - name: '?'
  - name: ','
  - name: " "
  - uid: Godot.TextServer.LineBreakFlag
    name: LineBreakFlag
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.TextServer.JustificationFlag
    name: JustificationFlag
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.TextServer.Direction
    name: Direction
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.TextServer.Orientation
    name: Orientation
    isExternal: true
  - name: )
  spec.vb:
  - uid: Godot.CanvasItem.DrawMultilineString(Godot.Font,Godot.Vector2,System.String,Godot.HorizontalAlignment,System.Single,System.Int32,System.Int32,System.Nullable{Godot.Color},Godot.TextServer.LineBreakFlag,Godot.TextServer.JustificationFlag,Godot.TextServer.Direction,Godot.TextServer.Orientation)
    name: DrawMultilineString
    isExternal: true
  - name: (
  - uid: Godot.Font
    name: Font
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Godot.HorizontalAlignment
    name: HorizontalAlignment
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: Godot.Color
    name: Color
    isExternal: true
  - name: '?'
  - name: ','
  - name: " "
  - uid: Godot.TextServer.LineBreakFlag
    name: LineBreakFlag
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.TextServer.JustificationFlag
    name: JustificationFlag
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.TextServer.Direction
    name: Direction
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.TextServer.Orientation
    name: Orientation
    isExternal: true
  - name: )
- uid: Godot.CanvasItem.DrawStringOutline(Godot.Font,Godot.Vector2,System.String,Godot.HorizontalAlignment,System.Single,System.Int32,System.Int32,System.Nullable{Godot.Color},Godot.TextServer.JustificationFlag,Godot.TextServer.Direction,Godot.TextServer.Orientation)
  commentId: M:Godot.CanvasItem.DrawStringOutline(Godot.Font,Godot.Vector2,System.String,Godot.HorizontalAlignment,System.Single,System.Int32,System.Int32,System.Nullable{Godot.Color},Godot.TextServer.JustificationFlag,Godot.TextServer.Direction,Godot.TextServer.Orientation)
  parent: Godot.CanvasItem
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: DrawStringOutline(Font, Vector2, string, HorizontalAlignment, float, int, int, Color?, JustificationFlag, Direction, Orientation)
  nameWithType: CanvasItem.DrawStringOutline(Font, Vector2, string, HorizontalAlignment, float, int, int, Color?, TextServer.JustificationFlag, TextServer.Direction, TextServer.Orientation)
  fullName: Godot.CanvasItem.DrawStringOutline(Godot.Font, Godot.Vector2, string, Godot.HorizontalAlignment, float, int, int, Godot.Color?, Godot.TextServer.JustificationFlag, Godot.TextServer.Direction, Godot.TextServer.Orientation)
  nameWithType.vb: CanvasItem.DrawStringOutline(Font, Vector2, String, HorizontalAlignment, Single, Integer, Integer, Color?, TextServer.JustificationFlag, TextServer.Direction, TextServer.Orientation)
  fullName.vb: Godot.CanvasItem.DrawStringOutline(Godot.Font, Godot.Vector2, String, Godot.HorizontalAlignment, Single, Integer, Integer, Godot.Color?, Godot.TextServer.JustificationFlag, Godot.TextServer.Direction, Godot.TextServer.Orientation)
  name.vb: DrawStringOutline(Font, Vector2, String, HorizontalAlignment, Single, Integer, Integer, Color?, JustificationFlag, Direction, Orientation)
  spec.csharp:
  - uid: Godot.CanvasItem.DrawStringOutline(Godot.Font,Godot.Vector2,System.String,Godot.HorizontalAlignment,System.Single,System.Int32,System.Int32,System.Nullable{Godot.Color},Godot.TextServer.JustificationFlag,Godot.TextServer.Direction,Godot.TextServer.Orientation)
    name: DrawStringOutline
    isExternal: true
  - name: (
  - uid: Godot.Font
    name: Font
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Godot.HorizontalAlignment
    name: HorizontalAlignment
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: Godot.Color
    name: Color
    isExternal: true
  - name: '?'
  - name: ','
  - name: " "
  - uid: Godot.TextServer.JustificationFlag
    name: JustificationFlag
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.TextServer.Direction
    name: Direction
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.TextServer.Orientation
    name: Orientation
    isExternal: true
  - name: )
  spec.vb:
  - uid: Godot.CanvasItem.DrawStringOutline(Godot.Font,Godot.Vector2,System.String,Godot.HorizontalAlignment,System.Single,System.Int32,System.Int32,System.Nullable{Godot.Color},Godot.TextServer.JustificationFlag,Godot.TextServer.Direction,Godot.TextServer.Orientation)
    name: DrawStringOutline
    isExternal: true
  - name: (
  - uid: Godot.Font
    name: Font
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Godot.HorizontalAlignment
    name: HorizontalAlignment
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: Godot.Color
    name: Color
    isExternal: true
  - name: '?'
  - name: ','
  - name: " "
  - uid: Godot.TextServer.JustificationFlag
    name: JustificationFlag
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.TextServer.Direction
    name: Direction
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.TextServer.Orientation
    name: Orientation
    isExternal: true
  - name: )
- uid: Godot.CanvasItem.DrawMultilineStringOutline(Godot.Font,Godot.Vector2,System.String,Godot.HorizontalAlignment,System.Single,System.Int32,System.Int32,System.Int32,System.Nullable{Godot.Color},Godot.TextServer.LineBreakFlag,Godot.TextServer.JustificationFlag,Godot.TextServer.Direction,Godot.TextServer.Orientation)
  commentId: M:Godot.CanvasItem.DrawMultilineStringOutline(Godot.Font,Godot.Vector2,System.String,Godot.HorizontalAlignment,System.Single,System.Int32,System.Int32,System.Int32,System.Nullable{Godot.Color},Godot.TextServer.LineBreakFlag,Godot.TextServer.JustificationFlag,Godot.TextServer.Direction,Godot.TextServer.Orientation)
  parent: Godot.CanvasItem
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: DrawMultilineStringOutline(Font, Vector2, string, HorizontalAlignment, float, int, int, int, Color?, LineBreakFlag, JustificationFlag, Direction, Orientation)
  nameWithType: CanvasItem.DrawMultilineStringOutline(Font, Vector2, string, HorizontalAlignment, float, int, int, int, Color?, TextServer.LineBreakFlag, TextServer.JustificationFlag, TextServer.Direction, TextServer.Orientation)
  fullName: Godot.CanvasItem.DrawMultilineStringOutline(Godot.Font, Godot.Vector2, string, Godot.HorizontalAlignment, float, int, int, int, Godot.Color?, Godot.TextServer.LineBreakFlag, Godot.TextServer.JustificationFlag, Godot.TextServer.Direction, Godot.TextServer.Orientation)
  nameWithType.vb: CanvasItem.DrawMultilineStringOutline(Font, Vector2, String, HorizontalAlignment, Single, Integer, Integer, Integer, Color?, TextServer.LineBreakFlag, TextServer.JustificationFlag, TextServer.Direction, TextServer.Orientation)
  fullName.vb: Godot.CanvasItem.DrawMultilineStringOutline(Godot.Font, Godot.Vector2, String, Godot.HorizontalAlignment, Single, Integer, Integer, Integer, Godot.Color?, Godot.TextServer.LineBreakFlag, Godot.TextServer.JustificationFlag, Godot.TextServer.Direction, Godot.TextServer.Orientation)
  name.vb: DrawMultilineStringOutline(Font, Vector2, String, HorizontalAlignment, Single, Integer, Integer, Integer, Color?, LineBreakFlag, JustificationFlag, Direction, Orientation)
  spec.csharp:
  - uid: Godot.CanvasItem.DrawMultilineStringOutline(Godot.Font,Godot.Vector2,System.String,Godot.HorizontalAlignment,System.Single,System.Int32,System.Int32,System.Int32,System.Nullable{Godot.Color},Godot.TextServer.LineBreakFlag,Godot.TextServer.JustificationFlag,Godot.TextServer.Direction,Godot.TextServer.Orientation)
    name: DrawMultilineStringOutline
    isExternal: true
  - name: (
  - uid: Godot.Font
    name: Font
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Godot.HorizontalAlignment
    name: HorizontalAlignment
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: Godot.Color
    name: Color
    isExternal: true
  - name: '?'
  - name: ','
  - name: " "
  - uid: Godot.TextServer.LineBreakFlag
    name: LineBreakFlag
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.TextServer.JustificationFlag
    name: JustificationFlag
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.TextServer.Direction
    name: Direction
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.TextServer.Orientation
    name: Orientation
    isExternal: true
  - name: )
  spec.vb:
  - uid: Godot.CanvasItem.DrawMultilineStringOutline(Godot.Font,Godot.Vector2,System.String,Godot.HorizontalAlignment,System.Single,System.Int32,System.Int32,System.Int32,System.Nullable{Godot.Color},Godot.TextServer.LineBreakFlag,Godot.TextServer.JustificationFlag,Godot.TextServer.Direction,Godot.TextServer.Orientation)
    name: DrawMultilineStringOutline
    isExternal: true
  - name: (
  - uid: Godot.Font
    name: Font
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Godot.HorizontalAlignment
    name: HorizontalAlignment
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: Godot.Color
    name: Color
    isExternal: true
  - name: '?'
  - name: ','
  - name: " "
  - uid: Godot.TextServer.LineBreakFlag
    name: LineBreakFlag
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.TextServer.JustificationFlag
    name: JustificationFlag
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.TextServer.Direction
    name: Direction
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.TextServer.Orientation
    name: Orientation
    isExternal: true
  - name: )
- uid: Godot.CanvasItem.DrawChar(Godot.Font,Godot.Vector2,System.String,System.Int32,System.Nullable{Godot.Color})
  commentId: M:Godot.CanvasItem.DrawChar(Godot.Font,Godot.Vector2,System.String,System.Int32,System.Nullable{Godot.Color})
  parent: Godot.CanvasItem
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: DrawChar(Font, Vector2, string, int, Color?)
  nameWithType: CanvasItem.DrawChar(Font, Vector2, string, int, Color?)
  fullName: Godot.CanvasItem.DrawChar(Godot.Font, Godot.Vector2, string, int, Godot.Color?)
  nameWithType.vb: CanvasItem.DrawChar(Font, Vector2, String, Integer, Color?)
  fullName.vb: Godot.CanvasItem.DrawChar(Godot.Font, Godot.Vector2, String, Integer, Godot.Color?)
  name.vb: DrawChar(Font, Vector2, String, Integer, Color?)
  spec.csharp:
  - uid: Godot.CanvasItem.DrawChar(Godot.Font,Godot.Vector2,System.String,System.Int32,System.Nullable{Godot.Color})
    name: DrawChar
    isExternal: true
  - name: (
  - uid: Godot.Font
    name: Font
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: Godot.Color
    name: Color
    isExternal: true
  - name: '?'
  - name: )
  spec.vb:
  - uid: Godot.CanvasItem.DrawChar(Godot.Font,Godot.Vector2,System.String,System.Int32,System.Nullable{Godot.Color})
    name: DrawChar
    isExternal: true
  - name: (
  - uid: Godot.Font
    name: Font
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: Godot.Color
    name: Color
    isExternal: true
  - name: '?'
  - name: )
- uid: Godot.CanvasItem.DrawCharOutline(Godot.Font,Godot.Vector2,System.String,System.Int32,System.Int32,System.Nullable{Godot.Color})
  commentId: M:Godot.CanvasItem.DrawCharOutline(Godot.Font,Godot.Vector2,System.String,System.Int32,System.Int32,System.Nullable{Godot.Color})
  parent: Godot.CanvasItem
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: DrawCharOutline(Font, Vector2, string, int, int, Color?)
  nameWithType: CanvasItem.DrawCharOutline(Font, Vector2, string, int, int, Color?)
  fullName: Godot.CanvasItem.DrawCharOutline(Godot.Font, Godot.Vector2, string, int, int, Godot.Color?)
  nameWithType.vb: CanvasItem.DrawCharOutline(Font, Vector2, String, Integer, Integer, Color?)
  fullName.vb: Godot.CanvasItem.DrawCharOutline(Godot.Font, Godot.Vector2, String, Integer, Integer, Godot.Color?)
  name.vb: DrawCharOutline(Font, Vector2, String, Integer, Integer, Color?)
  spec.csharp:
  - uid: Godot.CanvasItem.DrawCharOutline(Godot.Font,Godot.Vector2,System.String,System.Int32,System.Int32,System.Nullable{Godot.Color})
    name: DrawCharOutline
    isExternal: true
  - name: (
  - uid: Godot.Font
    name: Font
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: Godot.Color
    name: Color
    isExternal: true
  - name: '?'
  - name: )
  spec.vb:
  - uid: Godot.CanvasItem.DrawCharOutline(Godot.Font,Godot.Vector2,System.String,System.Int32,System.Int32,System.Nullable{Godot.Color})
    name: DrawCharOutline
    isExternal: true
  - name: (
  - uid: Godot.Font
    name: Font
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: Godot.Color
    name: Color
    isExternal: true
  - name: '?'
  - name: )
- uid: Godot.CanvasItem.DrawMesh(Godot.Mesh,Godot.Texture2D,System.Nullable{Godot.Transform2D},System.Nullable{Godot.Color})
  commentId: M:Godot.CanvasItem.DrawMesh(Godot.Mesh,Godot.Texture2D,System.Nullable{Godot.Transform2D},System.Nullable{Godot.Color})
  parent: Godot.CanvasItem
  isExternal: true
  name: DrawMesh(Mesh, Texture2D, Transform2D?, Color?)
  nameWithType: CanvasItem.DrawMesh(Mesh, Texture2D, Transform2D?, Color?)
  fullName: Godot.CanvasItem.DrawMesh(Godot.Mesh, Godot.Texture2D, Godot.Transform2D?, Godot.Color?)
  spec.csharp:
  - uid: Godot.CanvasItem.DrawMesh(Godot.Mesh,Godot.Texture2D,System.Nullable{Godot.Transform2D},System.Nullable{Godot.Color})
    name: DrawMesh
    isExternal: true
  - name: (
  - uid: Godot.Mesh
    name: Mesh
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.Texture2D
    name: Texture2D
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.Transform2D
    name: Transform2D
    isExternal: true
  - name: '?'
  - name: ','
  - name: " "
  - uid: Godot.Color
    name: Color
    isExternal: true
  - name: '?'
  - name: )
  spec.vb:
  - uid: Godot.CanvasItem.DrawMesh(Godot.Mesh,Godot.Texture2D,System.Nullable{Godot.Transform2D},System.Nullable{Godot.Color})
    name: DrawMesh
    isExternal: true
  - name: (
  - uid: Godot.Mesh
    name: Mesh
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.Texture2D
    name: Texture2D
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.Transform2D
    name: Transform2D
    isExternal: true
  - name: '?'
  - name: ','
  - name: " "
  - uid: Godot.Color
    name: Color
    isExternal: true
  - name: '?'
  - name: )
- uid: Godot.CanvasItem.DrawMultimesh(Godot.MultiMesh,Godot.Texture2D)
  commentId: M:Godot.CanvasItem.DrawMultimesh(Godot.MultiMesh,Godot.Texture2D)
  parent: Godot.CanvasItem
  isExternal: true
  name: DrawMultimesh(MultiMesh, Texture2D)
  nameWithType: CanvasItem.DrawMultimesh(MultiMesh, Texture2D)
  fullName: Godot.CanvasItem.DrawMultimesh(Godot.MultiMesh, Godot.Texture2D)
  spec.csharp:
  - uid: Godot.CanvasItem.DrawMultimesh(Godot.MultiMesh,Godot.Texture2D)
    name: DrawMultimesh
    isExternal: true
  - name: (
  - uid: Godot.MultiMesh
    name: MultiMesh
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.Texture2D
    name: Texture2D
    isExternal: true
  - name: )
  spec.vb:
  - uid: Godot.CanvasItem.DrawMultimesh(Godot.MultiMesh,Godot.Texture2D)
    name: DrawMultimesh
    isExternal: true
  - name: (
  - uid: Godot.MultiMesh
    name: MultiMesh
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.Texture2D
    name: Texture2D
    isExternal: true
  - name: )
- uid: Godot.CanvasItem.DrawSetTransform(Godot.Vector2,System.Single,System.Nullable{Godot.Vector2})
  commentId: M:Godot.CanvasItem.DrawSetTransform(Godot.Vector2,System.Single,System.Nullable{Godot.Vector2})
  parent: Godot.CanvasItem
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: DrawSetTransform(Vector2, float, Vector2?)
  nameWithType: CanvasItem.DrawSetTransform(Vector2, float, Vector2?)
  fullName: Godot.CanvasItem.DrawSetTransform(Godot.Vector2, float, Godot.Vector2?)
  nameWithType.vb: CanvasItem.DrawSetTransform(Vector2, Single, Vector2?)
  fullName.vb: Godot.CanvasItem.DrawSetTransform(Godot.Vector2, Single, Godot.Vector2?)
  name.vb: DrawSetTransform(Vector2, Single, Vector2?)
  spec.csharp:
  - uid: Godot.CanvasItem.DrawSetTransform(Godot.Vector2,System.Single,System.Nullable{Godot.Vector2})
    name: DrawSetTransform
    isExternal: true
  - name: (
  - uid: Godot.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: Godot.Vector2
    name: Vector2
    isExternal: true
  - name: '?'
  - name: )
  spec.vb:
  - uid: Godot.CanvasItem.DrawSetTransform(Godot.Vector2,System.Single,System.Nullable{Godot.Vector2})
    name: DrawSetTransform
    isExternal: true
  - name: (
  - uid: Godot.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: Godot.Vector2
    name: Vector2
    isExternal: true
  - name: '?'
  - name: )
- uid: Godot.CanvasItem.DrawSetTransformMatrix(Godot.Transform2D)
  commentId: M:Godot.CanvasItem.DrawSetTransformMatrix(Godot.Transform2D)
  parent: Godot.CanvasItem
  isExternal: true
  name: DrawSetTransformMatrix(Transform2D)
  nameWithType: CanvasItem.DrawSetTransformMatrix(Transform2D)
  fullName: Godot.CanvasItem.DrawSetTransformMatrix(Godot.Transform2D)
  spec.csharp:
  - uid: Godot.CanvasItem.DrawSetTransformMatrix(Godot.Transform2D)
    name: DrawSetTransformMatrix
    isExternal: true
  - name: (
  - uid: Godot.Transform2D
    name: Transform2D
    isExternal: true
  - name: )
  spec.vb:
  - uid: Godot.CanvasItem.DrawSetTransformMatrix(Godot.Transform2D)
    name: DrawSetTransformMatrix
    isExternal: true
  - name: (
  - uid: Godot.Transform2D
    name: Transform2D
    isExternal: true
  - name: )
- uid: Godot.CanvasItem.DrawAnimationSlice(System.Double,System.Double,System.Double,System.Double)
  commentId: M:Godot.CanvasItem.DrawAnimationSlice(System.Double,System.Double,System.Double,System.Double)
  parent: Godot.CanvasItem
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.double
  name: DrawAnimationSlice(double, double, double, double)
  nameWithType: CanvasItem.DrawAnimationSlice(double, double, double, double)
  fullName: Godot.CanvasItem.DrawAnimationSlice(double, double, double, double)
  nameWithType.vb: CanvasItem.DrawAnimationSlice(Double, Double, Double, Double)
  fullName.vb: Godot.CanvasItem.DrawAnimationSlice(Double, Double, Double, Double)
  name.vb: DrawAnimationSlice(Double, Double, Double, Double)
  spec.csharp:
  - uid: Godot.CanvasItem.DrawAnimationSlice(System.Double,System.Double,System.Double,System.Double)
    name: DrawAnimationSlice
    isExternal: true
  - name: (
  - uid: System.Double
    name: double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: ','
  - name: " "
  - uid: System.Double
    name: double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: ','
  - name: " "
  - uid: System.Double
    name: double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: ','
  - name: " "
  - uid: System.Double
    name: double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: )
  spec.vb:
  - uid: Godot.CanvasItem.DrawAnimationSlice(System.Double,System.Double,System.Double,System.Double)
    name: DrawAnimationSlice
    isExternal: true
  - name: (
  - uid: System.Double
    name: Double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: ','
  - name: " "
  - uid: System.Double
    name: Double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: ','
  - name: " "
  - uid: System.Double
    name: Double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: ','
  - name: " "
  - uid: System.Double
    name: Double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: )
- uid: Godot.CanvasItem.DrawEndAnimation
  commentId: M:Godot.CanvasItem.DrawEndAnimation
  parent: Godot.CanvasItem
  isExternal: true
  name: DrawEndAnimation()
  nameWithType: CanvasItem.DrawEndAnimation()
  fullName: Godot.CanvasItem.DrawEndAnimation()
  spec.csharp:
  - uid: Godot.CanvasItem.DrawEndAnimation
    name: DrawEndAnimation
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Godot.CanvasItem.DrawEndAnimation
    name: DrawEndAnimation
    isExternal: true
  - name: (
  - name: )
- uid: Godot.CanvasItem.GetTransform
  commentId: M:Godot.CanvasItem.GetTransform
  parent: Godot.CanvasItem
  isExternal: true
  name: GetTransform()
  nameWithType: CanvasItem.GetTransform()
  fullName: Godot.CanvasItem.GetTransform()
  spec.csharp:
  - uid: Godot.CanvasItem.GetTransform
    name: GetTransform
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Godot.CanvasItem.GetTransform
    name: GetTransform
    isExternal: true
  - name: (
  - name: )
- uid: Godot.CanvasItem.GetGlobalTransform
  commentId: M:Godot.CanvasItem.GetGlobalTransform
  parent: Godot.CanvasItem
  isExternal: true
  name: GetGlobalTransform()
  nameWithType: CanvasItem.GetGlobalTransform()
  fullName: Godot.CanvasItem.GetGlobalTransform()
  spec.csharp:
  - uid: Godot.CanvasItem.GetGlobalTransform
    name: GetGlobalTransform
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Godot.CanvasItem.GetGlobalTransform
    name: GetGlobalTransform
    isExternal: true
  - name: (
  - name: )
- uid: Godot.CanvasItem.GetGlobalTransformWithCanvas
  commentId: M:Godot.CanvasItem.GetGlobalTransformWithCanvas
  parent: Godot.CanvasItem
  isExternal: true
  name: GetGlobalTransformWithCanvas()
  nameWithType: CanvasItem.GetGlobalTransformWithCanvas()
  fullName: Godot.CanvasItem.GetGlobalTransformWithCanvas()
  spec.csharp:
  - uid: Godot.CanvasItem.GetGlobalTransformWithCanvas
    name: GetGlobalTransformWithCanvas
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Godot.CanvasItem.GetGlobalTransformWithCanvas
    name: GetGlobalTransformWithCanvas
    isExternal: true
  - name: (
  - name: )
- uid: Godot.CanvasItem.GetViewportTransform
  commentId: M:Godot.CanvasItem.GetViewportTransform
  parent: Godot.CanvasItem
  isExternal: true
  name: GetViewportTransform()
  nameWithType: CanvasItem.GetViewportTransform()
  fullName: Godot.CanvasItem.GetViewportTransform()
  spec.csharp:
  - uid: Godot.CanvasItem.GetViewportTransform
    name: GetViewportTransform
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Godot.CanvasItem.GetViewportTransform
    name: GetViewportTransform
    isExternal: true
  - name: (
  - name: )
- uid: Godot.CanvasItem.GetViewportRect
  commentId: M:Godot.CanvasItem.GetViewportRect
  parent: Godot.CanvasItem
  isExternal: true
  name: GetViewportRect()
  nameWithType: CanvasItem.GetViewportRect()
  fullName: Godot.CanvasItem.GetViewportRect()
  spec.csharp:
  - uid: Godot.CanvasItem.GetViewportRect
    name: GetViewportRect
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Godot.CanvasItem.GetViewportRect
    name: GetViewportRect
    isExternal: true
  - name: (
  - name: )
- uid: Godot.CanvasItem.GetCanvasTransform
  commentId: M:Godot.CanvasItem.GetCanvasTransform
  parent: Godot.CanvasItem
  isExternal: true
  name: GetCanvasTransform()
  nameWithType: CanvasItem.GetCanvasTransform()
  fullName: Godot.CanvasItem.GetCanvasTransform()
  spec.csharp:
  - uid: Godot.CanvasItem.GetCanvasTransform
    name: GetCanvasTransform
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Godot.CanvasItem.GetCanvasTransform
    name: GetCanvasTransform
    isExternal: true
  - name: (
  - name: )
- uid: Godot.CanvasItem.GetScreenTransform
  commentId: M:Godot.CanvasItem.GetScreenTransform
  parent: Godot.CanvasItem
  isExternal: true
  name: GetScreenTransform()
  nameWithType: CanvasItem.GetScreenTransform()
  fullName: Godot.CanvasItem.GetScreenTransform()
  spec.csharp:
  - uid: Godot.CanvasItem.GetScreenTransform
    name: GetScreenTransform
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Godot.CanvasItem.GetScreenTransform
    name: GetScreenTransform
    isExternal: true
  - name: (
  - name: )
- uid: Godot.CanvasItem.GetLocalMousePosition
  commentId: M:Godot.CanvasItem.GetLocalMousePosition
  parent: Godot.CanvasItem
  isExternal: true
  name: GetLocalMousePosition()
  nameWithType: CanvasItem.GetLocalMousePosition()
  fullName: Godot.CanvasItem.GetLocalMousePosition()
  spec.csharp:
  - uid: Godot.CanvasItem.GetLocalMousePosition
    name: GetLocalMousePosition
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Godot.CanvasItem.GetLocalMousePosition
    name: GetLocalMousePosition
    isExternal: true
  - name: (
  - name: )
- uid: Godot.CanvasItem.GetGlobalMousePosition
  commentId: M:Godot.CanvasItem.GetGlobalMousePosition
  parent: Godot.CanvasItem
  isExternal: true
  name: GetGlobalMousePosition()
  nameWithType: CanvasItem.GetGlobalMousePosition()
  fullName: Godot.CanvasItem.GetGlobalMousePosition()
  spec.csharp:
  - uid: Godot.CanvasItem.GetGlobalMousePosition
    name: GetGlobalMousePosition
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Godot.CanvasItem.GetGlobalMousePosition
    name: GetGlobalMousePosition
    isExternal: true
  - name: (
  - name: )
- uid: Godot.CanvasItem.GetCanvas
  commentId: M:Godot.CanvasItem.GetCanvas
  parent: Godot.CanvasItem
  isExternal: true
  name: GetCanvas()
  nameWithType: CanvasItem.GetCanvas()
  fullName: Godot.CanvasItem.GetCanvas()
  spec.csharp:
  - uid: Godot.CanvasItem.GetCanvas
    name: GetCanvas
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Godot.CanvasItem.GetCanvas
    name: GetCanvas
    isExternal: true
  - name: (
  - name: )
- uid: Godot.CanvasItem.GetCanvasLayerNode
  commentId: M:Godot.CanvasItem.GetCanvasLayerNode
  parent: Godot.CanvasItem
  isExternal: true
  name: GetCanvasLayerNode()
  nameWithType: CanvasItem.GetCanvasLayerNode()
  fullName: Godot.CanvasItem.GetCanvasLayerNode()
  spec.csharp:
  - uid: Godot.CanvasItem.GetCanvasLayerNode
    name: GetCanvasLayerNode
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Godot.CanvasItem.GetCanvasLayerNode
    name: GetCanvasLayerNode
    isExternal: true
  - name: (
  - name: )
- uid: Godot.CanvasItem.GetWorld2D
  commentId: M:Godot.CanvasItem.GetWorld2D
  parent: Godot.CanvasItem
  isExternal: true
  name: GetWorld2D()
  nameWithType: CanvasItem.GetWorld2D()
  fullName: Godot.CanvasItem.GetWorld2D()
  spec.csharp:
  - uid: Godot.CanvasItem.GetWorld2D
    name: GetWorld2D
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Godot.CanvasItem.GetWorld2D
    name: GetWorld2D
    isExternal: true
  - name: (
  - name: )
- uid: Godot.CanvasItem.SetNotifyLocalTransform(System.Boolean)
  commentId: M:Godot.CanvasItem.SetNotifyLocalTransform(System.Boolean)
  parent: Godot.CanvasItem
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: SetNotifyLocalTransform(bool)
  nameWithType: CanvasItem.SetNotifyLocalTransform(bool)
  fullName: Godot.CanvasItem.SetNotifyLocalTransform(bool)
  nameWithType.vb: CanvasItem.SetNotifyLocalTransform(Boolean)
  fullName.vb: Godot.CanvasItem.SetNotifyLocalTransform(Boolean)
  name.vb: SetNotifyLocalTransform(Boolean)
  spec.csharp:
  - uid: Godot.CanvasItem.SetNotifyLocalTransform(System.Boolean)
    name: SetNotifyLocalTransform
    isExternal: true
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Godot.CanvasItem.SetNotifyLocalTransform(System.Boolean)
    name: SetNotifyLocalTransform
    isExternal: true
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Godot.CanvasItem.IsLocalTransformNotificationEnabled
  commentId: M:Godot.CanvasItem.IsLocalTransformNotificationEnabled
  parent: Godot.CanvasItem
  isExternal: true
  name: IsLocalTransformNotificationEnabled()
  nameWithType: CanvasItem.IsLocalTransformNotificationEnabled()
  fullName: Godot.CanvasItem.IsLocalTransformNotificationEnabled()
  spec.csharp:
  - uid: Godot.CanvasItem.IsLocalTransformNotificationEnabled
    name: IsLocalTransformNotificationEnabled
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Godot.CanvasItem.IsLocalTransformNotificationEnabled
    name: IsLocalTransformNotificationEnabled
    isExternal: true
  - name: (
  - name: )
- uid: Godot.CanvasItem.SetNotifyTransform(System.Boolean)
  commentId: M:Godot.CanvasItem.SetNotifyTransform(System.Boolean)
  parent: Godot.CanvasItem
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: SetNotifyTransform(bool)
  nameWithType: CanvasItem.SetNotifyTransform(bool)
  fullName: Godot.CanvasItem.SetNotifyTransform(bool)
  nameWithType.vb: CanvasItem.SetNotifyTransform(Boolean)
  fullName.vb: Godot.CanvasItem.SetNotifyTransform(Boolean)
  name.vb: SetNotifyTransform(Boolean)
  spec.csharp:
  - uid: Godot.CanvasItem.SetNotifyTransform(System.Boolean)
    name: SetNotifyTransform
    isExternal: true
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Godot.CanvasItem.SetNotifyTransform(System.Boolean)
    name: SetNotifyTransform
    isExternal: true
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Godot.CanvasItem.IsTransformNotificationEnabled
  commentId: M:Godot.CanvasItem.IsTransformNotificationEnabled
  parent: Godot.CanvasItem
  isExternal: true
  name: IsTransformNotificationEnabled()
  nameWithType: CanvasItem.IsTransformNotificationEnabled()
  fullName: Godot.CanvasItem.IsTransformNotificationEnabled()
  spec.csharp:
  - uid: Godot.CanvasItem.IsTransformNotificationEnabled
    name: IsTransformNotificationEnabled
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Godot.CanvasItem.IsTransformNotificationEnabled
    name: IsTransformNotificationEnabled
    isExternal: true
  - name: (
  - name: )
- uid: Godot.CanvasItem.ForceUpdateTransform
  commentId: M:Godot.CanvasItem.ForceUpdateTransform
  parent: Godot.CanvasItem
  isExternal: true
  name: ForceUpdateTransform()
  nameWithType: CanvasItem.ForceUpdateTransform()
  fullName: Godot.CanvasItem.ForceUpdateTransform()
  spec.csharp:
  - uid: Godot.CanvasItem.ForceUpdateTransform
    name: ForceUpdateTransform
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Godot.CanvasItem.ForceUpdateTransform
    name: ForceUpdateTransform
    isExternal: true
  - name: (
  - name: )
- uid: Godot.CanvasItem.MakeCanvasPositionLocal(Godot.Vector2)
  commentId: M:Godot.CanvasItem.MakeCanvasPositionLocal(Godot.Vector2)
  parent: Godot.CanvasItem
  isExternal: true
  name: MakeCanvasPositionLocal(Vector2)
  nameWithType: CanvasItem.MakeCanvasPositionLocal(Vector2)
  fullName: Godot.CanvasItem.MakeCanvasPositionLocal(Godot.Vector2)
  spec.csharp:
  - uid: Godot.CanvasItem.MakeCanvasPositionLocal(Godot.Vector2)
    name: MakeCanvasPositionLocal
    isExternal: true
  - name: (
  - uid: Godot.Vector2
    name: Vector2
    isExternal: true
  - name: )
  spec.vb:
  - uid: Godot.CanvasItem.MakeCanvasPositionLocal(Godot.Vector2)
    name: MakeCanvasPositionLocal
    isExternal: true
  - name: (
  - uid: Godot.Vector2
    name: Vector2
    isExternal: true
  - name: )
- uid: Godot.CanvasItem.MakeInputLocal(Godot.InputEvent)
  commentId: M:Godot.CanvasItem.MakeInputLocal(Godot.InputEvent)
  parent: Godot.CanvasItem
  isExternal: true
  name: MakeInputLocal(InputEvent)
  nameWithType: CanvasItem.MakeInputLocal(InputEvent)
  fullName: Godot.CanvasItem.MakeInputLocal(Godot.InputEvent)
  spec.csharp:
  - uid: Godot.CanvasItem.MakeInputLocal(Godot.InputEvent)
    name: MakeInputLocal
    isExternal: true
  - name: (
  - uid: Godot.InputEvent
    name: InputEvent
    isExternal: true
  - name: )
  spec.vb:
  - uid: Godot.CanvasItem.MakeInputLocal(Godot.InputEvent)
    name: MakeInputLocal
    isExternal: true
  - name: (
  - uid: Godot.InputEvent
    name: InputEvent
    isExternal: true
  - name: )
- uid: Godot.CanvasItem.SetVisibilityLayerBit(System.UInt32,System.Boolean)
  commentId: M:Godot.CanvasItem.SetVisibilityLayerBit(System.UInt32,System.Boolean)
  parent: Godot.CanvasItem
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.uint32
  name: SetVisibilityLayerBit(uint, bool)
  nameWithType: CanvasItem.SetVisibilityLayerBit(uint, bool)
  fullName: Godot.CanvasItem.SetVisibilityLayerBit(uint, bool)
  nameWithType.vb: CanvasItem.SetVisibilityLayerBit(UInteger, Boolean)
  fullName.vb: Godot.CanvasItem.SetVisibilityLayerBit(UInteger, Boolean)
  name.vb: SetVisibilityLayerBit(UInteger, Boolean)
  spec.csharp:
  - uid: Godot.CanvasItem.SetVisibilityLayerBit(System.UInt32,System.Boolean)
    name: SetVisibilityLayerBit
    isExternal: true
  - name: (
  - uid: System.UInt32
    name: uint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Godot.CanvasItem.SetVisibilityLayerBit(System.UInt32,System.Boolean)
    name: SetVisibilityLayerBit
    isExternal: true
  - name: (
  - uid: System.UInt32
    name: UInteger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Godot.CanvasItem.GetVisibilityLayerBit(System.UInt32)
  commentId: M:Godot.CanvasItem.GetVisibilityLayerBit(System.UInt32)
  parent: Godot.CanvasItem
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.uint32
  name: GetVisibilityLayerBit(uint)
  nameWithType: CanvasItem.GetVisibilityLayerBit(uint)
  fullName: Godot.CanvasItem.GetVisibilityLayerBit(uint)
  nameWithType.vb: CanvasItem.GetVisibilityLayerBit(UInteger)
  fullName.vb: Godot.CanvasItem.GetVisibilityLayerBit(UInteger)
  name.vb: GetVisibilityLayerBit(UInteger)
  spec.csharp:
  - uid: Godot.CanvasItem.GetVisibilityLayerBit(System.UInt32)
    name: GetVisibilityLayerBit
    isExternal: true
  - name: (
  - uid: System.UInt32
    name: uint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: )
  spec.vb:
  - uid: Godot.CanvasItem.GetVisibilityLayerBit(System.UInt32)
    name: GetVisibilityLayerBit
    isExternal: true
  - name: (
  - uid: System.UInt32
    name: UInteger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: )
- uid: Godot.CanvasItem.Visible
  commentId: P:Godot.CanvasItem.Visible
  parent: Godot.CanvasItem
  isExternal: true
  name: Visible
  nameWithType: CanvasItem.Visible
  fullName: Godot.CanvasItem.Visible
- uid: Godot.CanvasItem.Modulate
  commentId: P:Godot.CanvasItem.Modulate
  parent: Godot.CanvasItem
  isExternal: true
  name: Modulate
  nameWithType: CanvasItem.Modulate
  fullName: Godot.CanvasItem.Modulate
- uid: Godot.CanvasItem.SelfModulate
  commentId: P:Godot.CanvasItem.SelfModulate
  parent: Godot.CanvasItem
  isExternal: true
  name: SelfModulate
  nameWithType: CanvasItem.SelfModulate
  fullName: Godot.CanvasItem.SelfModulate
- uid: Godot.CanvasItem.ShowBehindParent
  commentId: P:Godot.CanvasItem.ShowBehindParent
  parent: Godot.CanvasItem
  isExternal: true
  name: ShowBehindParent
  nameWithType: CanvasItem.ShowBehindParent
  fullName: Godot.CanvasItem.ShowBehindParent
- uid: Godot.CanvasItem.TopLevel
  commentId: P:Godot.CanvasItem.TopLevel
  parent: Godot.CanvasItem
  isExternal: true
  name: TopLevel
  nameWithType: CanvasItem.TopLevel
  fullName: Godot.CanvasItem.TopLevel
- uid: Godot.CanvasItem.ClipChildren
  commentId: P:Godot.CanvasItem.ClipChildren
  parent: Godot.CanvasItem
  isExternal: true
  name: ClipChildren
  nameWithType: CanvasItem.ClipChildren
  fullName: Godot.CanvasItem.ClipChildren
- uid: Godot.CanvasItem.LightMask
  commentId: P:Godot.CanvasItem.LightMask
  parent: Godot.CanvasItem
  isExternal: true
  name: LightMask
  nameWithType: CanvasItem.LightMask
  fullName: Godot.CanvasItem.LightMask
- uid: Godot.CanvasItem.VisibilityLayer
  commentId: P:Godot.CanvasItem.VisibilityLayer
  parent: Godot.CanvasItem
  isExternal: true
  name: VisibilityLayer
  nameWithType: CanvasItem.VisibilityLayer
  fullName: Godot.CanvasItem.VisibilityLayer
- uid: Godot.CanvasItem.ZIndex
  commentId: P:Godot.CanvasItem.ZIndex
  parent: Godot.CanvasItem
  isExternal: true
  name: ZIndex
  nameWithType: CanvasItem.ZIndex
  fullName: Godot.CanvasItem.ZIndex
- uid: Godot.CanvasItem.ZAsRelative
  commentId: P:Godot.CanvasItem.ZAsRelative
  parent: Godot.CanvasItem
  isExternal: true
  name: ZAsRelative
  nameWithType: CanvasItem.ZAsRelative
  fullName: Godot.CanvasItem.ZAsRelative
- uid: Godot.CanvasItem.YSortEnabled
  commentId: P:Godot.CanvasItem.YSortEnabled
  parent: Godot.CanvasItem
  isExternal: true
  name: YSortEnabled
  nameWithType: CanvasItem.YSortEnabled
  fullName: Godot.CanvasItem.YSortEnabled
- uid: Godot.CanvasItem.TextureFilter
  commentId: P:Godot.CanvasItem.TextureFilter
  parent: Godot.CanvasItem
  isExternal: true
  name: TextureFilter
  nameWithType: CanvasItem.TextureFilter
  fullName: Godot.CanvasItem.TextureFilter
- uid: Godot.CanvasItem.TextureRepeat
  commentId: P:Godot.CanvasItem.TextureRepeat
  parent: Godot.CanvasItem
  isExternal: true
  name: TextureRepeat
  nameWithType: CanvasItem.TextureRepeat
  fullName: Godot.CanvasItem.TextureRepeat
- uid: Godot.CanvasItem.Material
  commentId: P:Godot.CanvasItem.Material
  parent: Godot.CanvasItem
  isExternal: true
  name: Material
  nameWithType: CanvasItem.Material
  fullName: Godot.CanvasItem.Material
- uid: Godot.CanvasItem.UseParentMaterial
  commentId: P:Godot.CanvasItem.UseParentMaterial
  parent: Godot.CanvasItem
  isExternal: true
  name: UseParentMaterial
  nameWithType: CanvasItem.UseParentMaterial
  fullName: Godot.CanvasItem.UseParentMaterial
- uid: Godot.CanvasItem.Draw
  commentId: E:Godot.CanvasItem.Draw
  parent: Godot.CanvasItem
  isExternal: true
  name: Draw
  nameWithType: CanvasItem.Draw
  fullName: Godot.CanvasItem.Draw
- uid: Godot.CanvasItem.VisibilityChanged
  commentId: E:Godot.CanvasItem.VisibilityChanged
  parent: Godot.CanvasItem
  isExternal: true
  name: VisibilityChanged
  nameWithType: CanvasItem.VisibilityChanged
  fullName: Godot.CanvasItem.VisibilityChanged
- uid: Godot.CanvasItem.Hidden
  commentId: E:Godot.CanvasItem.Hidden
  parent: Godot.CanvasItem
  isExternal: true
  name: Hidden
  nameWithType: CanvasItem.Hidden
  fullName: Godot.CanvasItem.Hidden
- uid: Godot.CanvasItem.ItemRectChanged
  commentId: E:Godot.CanvasItem.ItemRectChanged
  parent: Godot.CanvasItem
  isExternal: true
  name: ItemRectChanged
  nameWithType: CanvasItem.ItemRectChanged
  fullName: Godot.CanvasItem.ItemRectChanged
- uid: Godot.Node.NotificationEnterTree
  commentId: F:Godot.Node.NotificationEnterTree
  parent: Godot.Node
  isExternal: true
  name: NotificationEnterTree
  nameWithType: Node.NotificationEnterTree
  fullName: Godot.Node.NotificationEnterTree
- uid: Godot.Node.NotificationExitTree
  commentId: F:Godot.Node.NotificationExitTree
  parent: Godot.Node
  isExternal: true
  name: NotificationExitTree
  nameWithType: Node.NotificationExitTree
  fullName: Godot.Node.NotificationExitTree
- uid: Godot.Node.NotificationMovedInParent
  commentId: F:Godot.Node.NotificationMovedInParent
  parent: Godot.Node
  isExternal: true
  name: NotificationMovedInParent
  nameWithType: Node.NotificationMovedInParent
  fullName: Godot.Node.NotificationMovedInParent
- uid: Godot.Node.NotificationReady
  commentId: F:Godot.Node.NotificationReady
  parent: Godot.Node
  isExternal: true
  name: NotificationReady
  nameWithType: Node.NotificationReady
  fullName: Godot.Node.NotificationReady
- uid: Godot.Node.NotificationPaused
  commentId: F:Godot.Node.NotificationPaused
  parent: Godot.Node
  isExternal: true
  name: NotificationPaused
  nameWithType: Node.NotificationPaused
  fullName: Godot.Node.NotificationPaused
- uid: Godot.Node.NotificationUnpaused
  commentId: F:Godot.Node.NotificationUnpaused
  parent: Godot.Node
  isExternal: true
  name: NotificationUnpaused
  nameWithType: Node.NotificationUnpaused
  fullName: Godot.Node.NotificationUnpaused
- uid: Godot.Node.NotificationPhysicsProcess
  commentId: F:Godot.Node.NotificationPhysicsProcess
  parent: Godot.Node
  isExternal: true
  name: NotificationPhysicsProcess
  nameWithType: Node.NotificationPhysicsProcess
  fullName: Godot.Node.NotificationPhysicsProcess
- uid: Godot.Node.NotificationProcess
  commentId: F:Godot.Node.NotificationProcess
  parent: Godot.Node
  isExternal: true
  name: NotificationProcess
  nameWithType: Node.NotificationProcess
  fullName: Godot.Node.NotificationProcess
- uid: Godot.Node.NotificationParented
  commentId: F:Godot.Node.NotificationParented
  parent: Godot.Node
  isExternal: true
  name: NotificationParented
  nameWithType: Node.NotificationParented
  fullName: Godot.Node.NotificationParented
- uid: Godot.Node.NotificationUnparented
  commentId: F:Godot.Node.NotificationUnparented
  parent: Godot.Node
  isExternal: true
  name: NotificationUnparented
  nameWithType: Node.NotificationUnparented
  fullName: Godot.Node.NotificationUnparented
- uid: Godot.Node.NotificationSceneInstantiated
  commentId: F:Godot.Node.NotificationSceneInstantiated
  parent: Godot.Node
  isExternal: true
  name: NotificationSceneInstantiated
  nameWithType: Node.NotificationSceneInstantiated
  fullName: Godot.Node.NotificationSceneInstantiated
- uid: Godot.Node.NotificationDragBegin
  commentId: F:Godot.Node.NotificationDragBegin
  parent: Godot.Node
  isExternal: true
  name: NotificationDragBegin
  nameWithType: Node.NotificationDragBegin
  fullName: Godot.Node.NotificationDragBegin
- uid: Godot.Node.NotificationDragEnd
  commentId: F:Godot.Node.NotificationDragEnd
  parent: Godot.Node
  isExternal: true
  name: NotificationDragEnd
  nameWithType: Node.NotificationDragEnd
  fullName: Godot.Node.NotificationDragEnd
- uid: Godot.Node.NotificationPathRenamed
  commentId: F:Godot.Node.NotificationPathRenamed
  parent: Godot.Node
  isExternal: true
  name: NotificationPathRenamed
  nameWithType: Node.NotificationPathRenamed
  fullName: Godot.Node.NotificationPathRenamed
- uid: Godot.Node.NotificationChildOrderChanged
  commentId: F:Godot.Node.NotificationChildOrderChanged
  parent: Godot.Node
  isExternal: true
  name: NotificationChildOrderChanged
  nameWithType: Node.NotificationChildOrderChanged
  fullName: Godot.Node.NotificationChildOrderChanged
- uid: Godot.Node.NotificationInternalProcess
  commentId: F:Godot.Node.NotificationInternalProcess
  parent: Godot.Node
  isExternal: true
  name: NotificationInternalProcess
  nameWithType: Node.NotificationInternalProcess
  fullName: Godot.Node.NotificationInternalProcess
- uid: Godot.Node.NotificationInternalPhysicsProcess
  commentId: F:Godot.Node.NotificationInternalPhysicsProcess
  parent: Godot.Node
  isExternal: true
  name: NotificationInternalPhysicsProcess
  nameWithType: Node.NotificationInternalPhysicsProcess
  fullName: Godot.Node.NotificationInternalPhysicsProcess
- uid: Godot.Node.NotificationPostEnterTree
  commentId: F:Godot.Node.NotificationPostEnterTree
  parent: Godot.Node
  isExternal: true
  name: NotificationPostEnterTree
  nameWithType: Node.NotificationPostEnterTree
  fullName: Godot.Node.NotificationPostEnterTree
- uid: Godot.Node.NotificationDisabled
  commentId: F:Godot.Node.NotificationDisabled
  parent: Godot.Node
  isExternal: true
  name: NotificationDisabled
  nameWithType: Node.NotificationDisabled
  fullName: Godot.Node.NotificationDisabled
- uid: Godot.Node.NotificationEnabled
  commentId: F:Godot.Node.NotificationEnabled
  parent: Godot.Node
  isExternal: true
  name: NotificationEnabled
  nameWithType: Node.NotificationEnabled
  fullName: Godot.Node.NotificationEnabled
- uid: Godot.Node.NotificationResetPhysicsInterpolation
  commentId: F:Godot.Node.NotificationResetPhysicsInterpolation
  parent: Godot.Node
  isExternal: true
  name: NotificationResetPhysicsInterpolation
  nameWithType: Node.NotificationResetPhysicsInterpolation
  fullName: Godot.Node.NotificationResetPhysicsInterpolation
- uid: Godot.Node.NotificationEditorPreSave
  commentId: F:Godot.Node.NotificationEditorPreSave
  parent: Godot.Node
  isExternal: true
  name: NotificationEditorPreSave
  nameWithType: Node.NotificationEditorPreSave
  fullName: Godot.Node.NotificationEditorPreSave
- uid: Godot.Node.NotificationEditorPostSave
  commentId: F:Godot.Node.NotificationEditorPostSave
  parent: Godot.Node
  isExternal: true
  name: NotificationEditorPostSave
  nameWithType: Node.NotificationEditorPostSave
  fullName: Godot.Node.NotificationEditorPostSave
- uid: Godot.Node.NotificationWMMouseEnter
  commentId: F:Godot.Node.NotificationWMMouseEnter
  parent: Godot.Node
  isExternal: true
  name: NotificationWMMouseEnter
  nameWithType: Node.NotificationWMMouseEnter
  fullName: Godot.Node.NotificationWMMouseEnter
- uid: Godot.Node.NotificationWMMouseExit
  commentId: F:Godot.Node.NotificationWMMouseExit
  parent: Godot.Node
  isExternal: true
  name: NotificationWMMouseExit
  nameWithType: Node.NotificationWMMouseExit
  fullName: Godot.Node.NotificationWMMouseExit
- uid: Godot.Node.NotificationWMWindowFocusIn
  commentId: F:Godot.Node.NotificationWMWindowFocusIn
  parent: Godot.Node
  isExternal: true
  name: NotificationWMWindowFocusIn
  nameWithType: Node.NotificationWMWindowFocusIn
  fullName: Godot.Node.NotificationWMWindowFocusIn
- uid: Godot.Node.NotificationWMWindowFocusOut
  commentId: F:Godot.Node.NotificationWMWindowFocusOut
  parent: Godot.Node
  isExternal: true
  name: NotificationWMWindowFocusOut
  nameWithType: Node.NotificationWMWindowFocusOut
  fullName: Godot.Node.NotificationWMWindowFocusOut
- uid: Godot.Node.NotificationWMCloseRequest
  commentId: F:Godot.Node.NotificationWMCloseRequest
  parent: Godot.Node
  isExternal: true
  name: NotificationWMCloseRequest
  nameWithType: Node.NotificationWMCloseRequest
  fullName: Godot.Node.NotificationWMCloseRequest
- uid: Godot.Node.NotificationWMGoBackRequest
  commentId: F:Godot.Node.NotificationWMGoBackRequest
  parent: Godot.Node
  isExternal: true
  name: NotificationWMGoBackRequest
  nameWithType: Node.NotificationWMGoBackRequest
  fullName: Godot.Node.NotificationWMGoBackRequest
- uid: Godot.Node.NotificationWMSizeChanged
  commentId: F:Godot.Node.NotificationWMSizeChanged
  parent: Godot.Node
  isExternal: true
  name: NotificationWMSizeChanged
  nameWithType: Node.NotificationWMSizeChanged
  fullName: Godot.Node.NotificationWMSizeChanged
- uid: Godot.Node.NotificationWMDpiChange
  commentId: F:Godot.Node.NotificationWMDpiChange
  parent: Godot.Node
  isExternal: true
  name: NotificationWMDpiChange
  nameWithType: Node.NotificationWMDpiChange
  fullName: Godot.Node.NotificationWMDpiChange
- uid: Godot.Node.NotificationVpMouseEnter
  commentId: F:Godot.Node.NotificationVpMouseEnter
  parent: Godot.Node
  isExternal: true
  name: NotificationVpMouseEnter
  nameWithType: Node.NotificationVpMouseEnter
  fullName: Godot.Node.NotificationVpMouseEnter
- uid: Godot.Node.NotificationVpMouseExit
  commentId: F:Godot.Node.NotificationVpMouseExit
  parent: Godot.Node
  isExternal: true
  name: NotificationVpMouseExit
  nameWithType: Node.NotificationVpMouseExit
  fullName: Godot.Node.NotificationVpMouseExit
- uid: Godot.Node.NotificationOsMemoryWarning
  commentId: F:Godot.Node.NotificationOsMemoryWarning
  parent: Godot.Node
  isExternal: true
  name: NotificationOsMemoryWarning
  nameWithType: Node.NotificationOsMemoryWarning
  fullName: Godot.Node.NotificationOsMemoryWarning
- uid: Godot.Node.NotificationTranslationChanged
  commentId: F:Godot.Node.NotificationTranslationChanged
  parent: Godot.Node
  isExternal: true
  name: NotificationTranslationChanged
  nameWithType: Node.NotificationTranslationChanged
  fullName: Godot.Node.NotificationTranslationChanged
- uid: Godot.Node.NotificationWMAbout
  commentId: F:Godot.Node.NotificationWMAbout
  parent: Godot.Node
  isExternal: true
  name: NotificationWMAbout
  nameWithType: Node.NotificationWMAbout
  fullName: Godot.Node.NotificationWMAbout
- uid: Godot.Node.NotificationCrash
  commentId: F:Godot.Node.NotificationCrash
  parent: Godot.Node
  isExternal: true
  name: NotificationCrash
  nameWithType: Node.NotificationCrash
  fullName: Godot.Node.NotificationCrash
- uid: Godot.Node.NotificationOsImeUpdate
  commentId: F:Godot.Node.NotificationOsImeUpdate
  parent: Godot.Node
  isExternal: true
  name: NotificationOsImeUpdate
  nameWithType: Node.NotificationOsImeUpdate
  fullName: Godot.Node.NotificationOsImeUpdate
- uid: Godot.Node.NotificationApplicationResumed
  commentId: F:Godot.Node.NotificationApplicationResumed
  parent: Godot.Node
  isExternal: true
  name: NotificationApplicationResumed
  nameWithType: Node.NotificationApplicationResumed
  fullName: Godot.Node.NotificationApplicationResumed
- uid: Godot.Node.NotificationApplicationPaused
  commentId: F:Godot.Node.NotificationApplicationPaused
  parent: Godot.Node
  isExternal: true
  name: NotificationApplicationPaused
  nameWithType: Node.NotificationApplicationPaused
  fullName: Godot.Node.NotificationApplicationPaused
- uid: Godot.Node.NotificationApplicationFocusIn
  commentId: F:Godot.Node.NotificationApplicationFocusIn
  parent: Godot.Node
  isExternal: true
  name: NotificationApplicationFocusIn
  nameWithType: Node.NotificationApplicationFocusIn
  fullName: Godot.Node.NotificationApplicationFocusIn
- uid: Godot.Node.NotificationApplicationFocusOut
  commentId: F:Godot.Node.NotificationApplicationFocusOut
  parent: Godot.Node
  isExternal: true
  name: NotificationApplicationFocusOut
  nameWithType: Node.NotificationApplicationFocusOut
  fullName: Godot.Node.NotificationApplicationFocusOut
- uid: Godot.Node.NotificationTextServerChanged
  commentId: F:Godot.Node.NotificationTextServerChanged
  parent: Godot.Node
  isExternal: true
  name: NotificationTextServerChanged
  nameWithType: Node.NotificationTextServerChanged
  fullName: Godot.Node.NotificationTextServerChanged
- uid: Godot.Node.GetNode``1(Godot.NodePath)
  commentId: M:Godot.Node.GetNode``1(Godot.NodePath)
  parent: Godot.Node
  isExternal: true
  name: GetNode<T>(NodePath)
  nameWithType: Node.GetNode<T>(NodePath)
  fullName: Godot.Node.GetNode<T>(Godot.NodePath)
  nameWithType.vb: Node.GetNode(Of T)(NodePath)
  fullName.vb: Godot.Node.GetNode(Of T)(Godot.NodePath)
  name.vb: GetNode(Of T)(NodePath)
  spec.csharp:
  - uid: Godot.Node.GetNode``1(Godot.NodePath)
    name: GetNode
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: Godot.NodePath
    name: NodePath
    isExternal: true
  - name: )
  spec.vb:
  - uid: Godot.Node.GetNode``1(Godot.NodePath)
    name: GetNode
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: Godot.NodePath
    name: NodePath
    isExternal: true
  - name: )
- uid: Godot.Node.GetNodeOrNull``1(Godot.NodePath)
  commentId: M:Godot.Node.GetNodeOrNull``1(Godot.NodePath)
  parent: Godot.Node
  isExternal: true
  name: GetNodeOrNull<T>(NodePath)
  nameWithType: Node.GetNodeOrNull<T>(NodePath)
  fullName: Godot.Node.GetNodeOrNull<T>(Godot.NodePath)
  nameWithType.vb: Node.GetNodeOrNull(Of T)(NodePath)
  fullName.vb: Godot.Node.GetNodeOrNull(Of T)(Godot.NodePath)
  name.vb: GetNodeOrNull(Of T)(NodePath)
  spec.csharp:
  - uid: Godot.Node.GetNodeOrNull``1(Godot.NodePath)
    name: GetNodeOrNull
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: Godot.NodePath
    name: NodePath
    isExternal: true
  - name: )
  spec.vb:
  - uid: Godot.Node.GetNodeOrNull``1(Godot.NodePath)
    name: GetNodeOrNull
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: Godot.NodePath
    name: NodePath
    isExternal: true
  - name: )
- uid: Godot.Node.GetChild``1(System.Int32,System.Boolean)
  commentId: M:Godot.Node.GetChild``1(System.Int32,System.Boolean)
  parent: Godot.Node
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: GetChild<T>(int, bool)
  nameWithType: Node.GetChild<T>(int, bool)
  fullName: Godot.Node.GetChild<T>(int, bool)
  nameWithType.vb: Node.GetChild(Of T)(Integer, Boolean)
  fullName.vb: Godot.Node.GetChild(Of T)(Integer, Boolean)
  name.vb: GetChild(Of T)(Integer, Boolean)
  spec.csharp:
  - uid: Godot.Node.GetChild``1(System.Int32,System.Boolean)
    name: GetChild
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Godot.Node.GetChild``1(System.Int32,System.Boolean)
    name: GetChild
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Godot.Node.GetChildOrNull``1(System.Int32,System.Boolean)
  commentId: M:Godot.Node.GetChildOrNull``1(System.Int32,System.Boolean)
  parent: Godot.Node
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: GetChildOrNull<T>(int, bool)
  nameWithType: Node.GetChildOrNull<T>(int, bool)
  fullName: Godot.Node.GetChildOrNull<T>(int, bool)
  nameWithType.vb: Node.GetChildOrNull(Of T)(Integer, Boolean)
  fullName.vb: Godot.Node.GetChildOrNull(Of T)(Integer, Boolean)
  name.vb: GetChildOrNull(Of T)(Integer, Boolean)
  spec.csharp:
  - uid: Godot.Node.GetChildOrNull``1(System.Int32,System.Boolean)
    name: GetChildOrNull
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Godot.Node.GetChildOrNull``1(System.Int32,System.Boolean)
    name: GetChildOrNull
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Godot.Node.GetOwner``1
  commentId: M:Godot.Node.GetOwner``1
  parent: Godot.Node
  isExternal: true
  name: GetOwner<T>()
  nameWithType: Node.GetOwner<T>()
  fullName: Godot.Node.GetOwner<T>()
  nameWithType.vb: Node.GetOwner(Of T)()
  fullName.vb: Godot.Node.GetOwner(Of T)()
  name.vb: GetOwner(Of T)()
  spec.csharp:
  - uid: Godot.Node.GetOwner``1
    name: GetOwner
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: )
  spec.vb:
  - uid: Godot.Node.GetOwner``1
    name: GetOwner
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: )
- uid: Godot.Node.GetOwnerOrNull``1
  commentId: M:Godot.Node.GetOwnerOrNull``1
  parent: Godot.Node
  isExternal: true
  name: GetOwnerOrNull<T>()
  nameWithType: Node.GetOwnerOrNull<T>()
  fullName: Godot.Node.GetOwnerOrNull<T>()
  nameWithType.vb: Node.GetOwnerOrNull(Of T)()
  fullName.vb: Godot.Node.GetOwnerOrNull(Of T)()
  name.vb: GetOwnerOrNull(Of T)()
  spec.csharp:
  - uid: Godot.Node.GetOwnerOrNull``1
    name: GetOwnerOrNull
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: )
  spec.vb:
  - uid: Godot.Node.GetOwnerOrNull``1
    name: GetOwnerOrNull
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: )
- uid: Godot.Node.GetParent``1
  commentId: M:Godot.Node.GetParent``1
  parent: Godot.Node
  isExternal: true
  name: GetParent<T>()
  nameWithType: Node.GetParent<T>()
  fullName: Godot.Node.GetParent<T>()
  nameWithType.vb: Node.GetParent(Of T)()
  fullName.vb: Godot.Node.GetParent(Of T)()
  name.vb: GetParent(Of T)()
  spec.csharp:
  - uid: Godot.Node.GetParent``1
    name: GetParent
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: )
  spec.vb:
  - uid: Godot.Node.GetParent``1
    name: GetParent
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: )
- uid: Godot.Node.GetParentOrNull``1
  commentId: M:Godot.Node.GetParentOrNull``1
  parent: Godot.Node
  isExternal: true
  name: GetParentOrNull<T>()
  nameWithType: Node.GetParentOrNull<T>()
  fullName: Godot.Node.GetParentOrNull<T>()
  nameWithType.vb: Node.GetParentOrNull(Of T)()
  fullName.vb: Godot.Node.GetParentOrNull(Of T)()
  name.vb: GetParentOrNull(Of T)()
  spec.csharp:
  - uid: Godot.Node.GetParentOrNull``1
    name: GetParentOrNull
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: )
  spec.vb:
  - uid: Godot.Node.GetParentOrNull``1
    name: GetParentOrNull
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: )
- uid: Godot.Node._ExitTree
  commentId: M:Godot.Node._ExitTree
  parent: Godot.Node
  isExternal: true
  name: _ExitTree()
  nameWithType: Node._ExitTree()
  fullName: Godot.Node._ExitTree()
  spec.csharp:
  - uid: Godot.Node._ExitTree
    name: _ExitTree
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Godot.Node._ExitTree
    name: _ExitTree
    isExternal: true
  - name: (
  - name: )
- uid: Godot.Node._Input(Godot.InputEvent)
  commentId: M:Godot.Node._Input(Godot.InputEvent)
  parent: Godot.Node
  isExternal: true
  name: _Input(InputEvent)
  nameWithType: Node._Input(InputEvent)
  fullName: Godot.Node._Input(Godot.InputEvent)
  spec.csharp:
  - uid: Godot.Node._Input(Godot.InputEvent)
    name: _Input
    isExternal: true
  - name: (
  - uid: Godot.InputEvent
    name: InputEvent
    isExternal: true
  - name: )
  spec.vb:
  - uid: Godot.Node._Input(Godot.InputEvent)
    name: _Input
    isExternal: true
  - name: (
  - uid: Godot.InputEvent
    name: InputEvent
    isExternal: true
  - name: )
- uid: Godot.Node._PhysicsProcess(System.Double)
  commentId: M:Godot.Node._PhysicsProcess(System.Double)
  parent: Godot.Node
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.double
  name: _PhysicsProcess(double)
  nameWithType: Node._PhysicsProcess(double)
  fullName: Godot.Node._PhysicsProcess(double)
  nameWithType.vb: Node._PhysicsProcess(Double)
  fullName.vb: Godot.Node._PhysicsProcess(Double)
  name.vb: _PhysicsProcess(Double)
  spec.csharp:
  - uid: Godot.Node._PhysicsProcess(System.Double)
    name: _PhysicsProcess
    isExternal: true
  - name: (
  - uid: System.Double
    name: double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: )
  spec.vb:
  - uid: Godot.Node._PhysicsProcess(System.Double)
    name: _PhysicsProcess
    isExternal: true
  - name: (
  - uid: System.Double
    name: Double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: )
- uid: Godot.Node._ShortcutInput(Godot.InputEvent)
  commentId: M:Godot.Node._ShortcutInput(Godot.InputEvent)
  parent: Godot.Node
  isExternal: true
  name: _ShortcutInput(InputEvent)
  nameWithType: Node._ShortcutInput(InputEvent)
  fullName: Godot.Node._ShortcutInput(Godot.InputEvent)
  spec.csharp:
  - uid: Godot.Node._ShortcutInput(Godot.InputEvent)
    name: _ShortcutInput
    isExternal: true
  - name: (
  - uid: Godot.InputEvent
    name: InputEvent
    isExternal: true
  - name: )
  spec.vb:
  - uid: Godot.Node._ShortcutInput(Godot.InputEvent)
    name: _ShortcutInput
    isExternal: true
  - name: (
  - uid: Godot.InputEvent
    name: InputEvent
    isExternal: true
  - name: )
- uid: Godot.Node._UnhandledInput(Godot.InputEvent)
  commentId: M:Godot.Node._UnhandledInput(Godot.InputEvent)
  parent: Godot.Node
  isExternal: true
  name: _UnhandledInput(InputEvent)
  nameWithType: Node._UnhandledInput(InputEvent)
  fullName: Godot.Node._UnhandledInput(Godot.InputEvent)
  spec.csharp:
  - uid: Godot.Node._UnhandledInput(Godot.InputEvent)
    name: _UnhandledInput
    isExternal: true
  - name: (
  - uid: Godot.InputEvent
    name: InputEvent
    isExternal: true
  - name: )
  spec.vb:
  - uid: Godot.Node._UnhandledInput(Godot.InputEvent)
    name: _UnhandledInput
    isExternal: true
  - name: (
  - uid: Godot.InputEvent
    name: InputEvent
    isExternal: true
  - name: )
- uid: Godot.Node._UnhandledKeyInput(Godot.InputEvent)
  commentId: M:Godot.Node._UnhandledKeyInput(Godot.InputEvent)
  parent: Godot.Node
  isExternal: true
  name: _UnhandledKeyInput(InputEvent)
  nameWithType: Node._UnhandledKeyInput(InputEvent)
  fullName: Godot.Node._UnhandledKeyInput(Godot.InputEvent)
  spec.csharp:
  - uid: Godot.Node._UnhandledKeyInput(Godot.InputEvent)
    name: _UnhandledKeyInput
    isExternal: true
  - name: (
  - uid: Godot.InputEvent
    name: InputEvent
    isExternal: true
  - name: )
  spec.vb:
  - uid: Godot.Node._UnhandledKeyInput(Godot.InputEvent)
    name: _UnhandledKeyInput
    isExternal: true
  - name: (
  - uid: Godot.InputEvent
    name: InputEvent
    isExternal: true
  - name: )
- uid: Godot.Node.PrintOrphanNodes
  commentId: M:Godot.Node.PrintOrphanNodes
  parent: Godot.Node
  isExternal: true
  name: PrintOrphanNodes()
  nameWithType: Node.PrintOrphanNodes()
  fullName: Godot.Node.PrintOrphanNodes()
  spec.csharp:
  - uid: Godot.Node.PrintOrphanNodes
    name: PrintOrphanNodes
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Godot.Node.PrintOrphanNodes
    name: PrintOrphanNodes
    isExternal: true
  - name: (
  - name: )
- uid: Godot.Node.AddSibling(Godot.Node,System.Boolean)
  commentId: M:Godot.Node.AddSibling(Godot.Node,System.Boolean)
  parent: Godot.Node
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: AddSibling(Node, bool)
  nameWithType: Node.AddSibling(Node, bool)
  fullName: Godot.Node.AddSibling(Godot.Node, bool)
  nameWithType.vb: Node.AddSibling(Node, Boolean)
  fullName.vb: Godot.Node.AddSibling(Godot.Node, Boolean)
  name.vb: AddSibling(Node, Boolean)
  spec.csharp:
  - uid: Godot.Node.AddSibling(Godot.Node,System.Boolean)
    name: AddSibling
    isExternal: true
  - name: (
  - uid: Godot.Node
    name: Node
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Godot.Node.AddSibling(Godot.Node,System.Boolean)
    name: AddSibling
    isExternal: true
  - name: (
  - uid: Godot.Node
    name: Node
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Godot.Node.AddChild(Godot.Node,System.Boolean,Godot.Node.InternalMode)
  commentId: M:Godot.Node.AddChild(Godot.Node,System.Boolean,Godot.Node.InternalMode)
  parent: Godot.Node
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: AddChild(Node, bool, InternalMode)
  nameWithType: Node.AddChild(Node, bool, Node.InternalMode)
  fullName: Godot.Node.AddChild(Godot.Node, bool, Godot.Node.InternalMode)
  nameWithType.vb: Node.AddChild(Node, Boolean, Node.InternalMode)
  fullName.vb: Godot.Node.AddChild(Godot.Node, Boolean, Godot.Node.InternalMode)
  name.vb: AddChild(Node, Boolean, InternalMode)
  spec.csharp:
  - uid: Godot.Node.AddChild(Godot.Node,System.Boolean,Godot.Node.InternalMode)
    name: AddChild
    isExternal: true
  - name: (
  - uid: Godot.Node
    name: Node
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Godot.Node.InternalMode
    name: InternalMode
    isExternal: true
  - name: )
  spec.vb:
  - uid: Godot.Node.AddChild(Godot.Node,System.Boolean,Godot.Node.InternalMode)
    name: AddChild
    isExternal: true
  - name: (
  - uid: Godot.Node
    name: Node
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Godot.Node.InternalMode
    name: InternalMode
    isExternal: true
  - name: )
- uid: Godot.Node.RemoveChild(Godot.Node)
  commentId: M:Godot.Node.RemoveChild(Godot.Node)
  parent: Godot.Node
  isExternal: true
  name: RemoveChild(Node)
  nameWithType: Node.RemoveChild(Node)
  fullName: Godot.Node.RemoveChild(Godot.Node)
  spec.csharp:
  - uid: Godot.Node.RemoveChild(Godot.Node)
    name: RemoveChild
    isExternal: true
  - name: (
  - uid: Godot.Node
    name: Node
    isExternal: true
  - name: )
  spec.vb:
  - uid: Godot.Node.RemoveChild(Godot.Node)
    name: RemoveChild
    isExternal: true
  - name: (
  - uid: Godot.Node
    name: Node
    isExternal: true
  - name: )
- uid: Godot.Node.Reparent(Godot.Node,System.Boolean)
  commentId: M:Godot.Node.Reparent(Godot.Node,System.Boolean)
  parent: Godot.Node
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: Reparent(Node, bool)
  nameWithType: Node.Reparent(Node, bool)
  fullName: Godot.Node.Reparent(Godot.Node, bool)
  nameWithType.vb: Node.Reparent(Node, Boolean)
  fullName.vb: Godot.Node.Reparent(Godot.Node, Boolean)
  name.vb: Reparent(Node, Boolean)
  spec.csharp:
  - uid: Godot.Node.Reparent(Godot.Node,System.Boolean)
    name: Reparent
    isExternal: true
  - name: (
  - uid: Godot.Node
    name: Node
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Godot.Node.Reparent(Godot.Node,System.Boolean)
    name: Reparent
    isExternal: true
  - name: (
  - uid: Godot.Node
    name: Node
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Godot.Node.GetChildCount(System.Boolean)
  commentId: M:Godot.Node.GetChildCount(System.Boolean)
  parent: Godot.Node
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: GetChildCount(bool)
  nameWithType: Node.GetChildCount(bool)
  fullName: Godot.Node.GetChildCount(bool)
  nameWithType.vb: Node.GetChildCount(Boolean)
  fullName.vb: Godot.Node.GetChildCount(Boolean)
  name.vb: GetChildCount(Boolean)
  spec.csharp:
  - uid: Godot.Node.GetChildCount(System.Boolean)
    name: GetChildCount
    isExternal: true
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Godot.Node.GetChildCount(System.Boolean)
    name: GetChildCount
    isExternal: true
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Godot.Node.GetChildren(System.Boolean)
  commentId: M:Godot.Node.GetChildren(System.Boolean)
  parent: Godot.Node
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: GetChildren(bool)
  nameWithType: Node.GetChildren(bool)
  fullName: Godot.Node.GetChildren(bool)
  nameWithType.vb: Node.GetChildren(Boolean)
  fullName.vb: Godot.Node.GetChildren(Boolean)
  name.vb: GetChildren(Boolean)
  spec.csharp:
  - uid: Godot.Node.GetChildren(System.Boolean)
    name: GetChildren
    isExternal: true
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Godot.Node.GetChildren(System.Boolean)
    name: GetChildren
    isExternal: true
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Godot.Node.GetChild(System.Int32,System.Boolean)
  commentId: M:Godot.Node.GetChild(System.Int32,System.Boolean)
  parent: Godot.Node
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: GetChild(int, bool)
  nameWithType: Node.GetChild(int, bool)
  fullName: Godot.Node.GetChild(int, bool)
  nameWithType.vb: Node.GetChild(Integer, Boolean)
  fullName.vb: Godot.Node.GetChild(Integer, Boolean)
  name.vb: GetChild(Integer, Boolean)
  spec.csharp:
  - uid: Godot.Node.GetChild(System.Int32,System.Boolean)
    name: GetChild
    isExternal: true
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Godot.Node.GetChild(System.Int32,System.Boolean)
    name: GetChild
    isExternal: true
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Godot.Node.HasNode(Godot.NodePath)
  commentId: M:Godot.Node.HasNode(Godot.NodePath)
  parent: Godot.Node
  isExternal: true
  name: HasNode(NodePath)
  nameWithType: Node.HasNode(NodePath)
  fullName: Godot.Node.HasNode(Godot.NodePath)
  spec.csharp:
  - uid: Godot.Node.HasNode(Godot.NodePath)
    name: HasNode
    isExternal: true
  - name: (
  - uid: Godot.NodePath
    name: NodePath
    isExternal: true
  - name: )
  spec.vb:
  - uid: Godot.Node.HasNode(Godot.NodePath)
    name: HasNode
    isExternal: true
  - name: (
  - uid: Godot.NodePath
    name: NodePath
    isExternal: true
  - name: )
- uid: Godot.Node.GetNode(Godot.NodePath)
  commentId: M:Godot.Node.GetNode(Godot.NodePath)
  parent: Godot.Node
  isExternal: true
  name: GetNode(NodePath)
  nameWithType: Node.GetNode(NodePath)
  fullName: Godot.Node.GetNode(Godot.NodePath)
  spec.csharp:
  - uid: Godot.Node.GetNode(Godot.NodePath)
    name: GetNode
    isExternal: true
  - name: (
  - uid: Godot.NodePath
    name: NodePath
    isExternal: true
  - name: )
  spec.vb:
  - uid: Godot.Node.GetNode(Godot.NodePath)
    name: GetNode
    isExternal: true
  - name: (
  - uid: Godot.NodePath
    name: NodePath
    isExternal: true
  - name: )
- uid: Godot.Node.GetNodeOrNull(Godot.NodePath)
  commentId: M:Godot.Node.GetNodeOrNull(Godot.NodePath)
  parent: Godot.Node
  isExternal: true
  name: GetNodeOrNull(NodePath)
  nameWithType: Node.GetNodeOrNull(NodePath)
  fullName: Godot.Node.GetNodeOrNull(Godot.NodePath)
  spec.csharp:
  - uid: Godot.Node.GetNodeOrNull(Godot.NodePath)
    name: GetNodeOrNull
    isExternal: true
  - name: (
  - uid: Godot.NodePath
    name: NodePath
    isExternal: true
  - name: )
  spec.vb:
  - uid: Godot.Node.GetNodeOrNull(Godot.NodePath)
    name: GetNodeOrNull
    isExternal: true
  - name: (
  - uid: Godot.NodePath
    name: NodePath
    isExternal: true
  - name: )
- uid: Godot.Node.GetParent
  commentId: M:Godot.Node.GetParent
  parent: Godot.Node
  isExternal: true
  name: GetParent()
  nameWithType: Node.GetParent()
  fullName: Godot.Node.GetParent()
  spec.csharp:
  - uid: Godot.Node.GetParent
    name: GetParent
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Godot.Node.GetParent
    name: GetParent
    isExternal: true
  - name: (
  - name: )
- uid: Godot.Node.FindChild(System.String,System.Boolean,System.Boolean)
  commentId: M:Godot.Node.FindChild(System.String,System.Boolean,System.Boolean)
  parent: Godot.Node
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: FindChild(string, bool, bool)
  nameWithType: Node.FindChild(string, bool, bool)
  fullName: Godot.Node.FindChild(string, bool, bool)
  nameWithType.vb: Node.FindChild(String, Boolean, Boolean)
  fullName.vb: Godot.Node.FindChild(String, Boolean, Boolean)
  name.vb: FindChild(String, Boolean, Boolean)
  spec.csharp:
  - uid: Godot.Node.FindChild(System.String,System.Boolean,System.Boolean)
    name: FindChild
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Godot.Node.FindChild(System.String,System.Boolean,System.Boolean)
    name: FindChild
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Godot.Node.FindChildren(System.String,System.String,System.Boolean,System.Boolean)
  commentId: M:Godot.Node.FindChildren(System.String,System.String,System.Boolean,System.Boolean)
  parent: Godot.Node
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: FindChildren(string, string, bool, bool)
  nameWithType: Node.FindChildren(string, string, bool, bool)
  fullName: Godot.Node.FindChildren(string, string, bool, bool)
  nameWithType.vb: Node.FindChildren(String, String, Boolean, Boolean)
  fullName.vb: Godot.Node.FindChildren(String, String, Boolean, Boolean)
  name.vb: FindChildren(String, String, Boolean, Boolean)
  spec.csharp:
  - uid: Godot.Node.FindChildren(System.String,System.String,System.Boolean,System.Boolean)
    name: FindChildren
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Godot.Node.FindChildren(System.String,System.String,System.Boolean,System.Boolean)
    name: FindChildren
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Godot.Node.FindParent(System.String)
  commentId: M:Godot.Node.FindParent(System.String)
  parent: Godot.Node
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: FindParent(string)
  nameWithType: Node.FindParent(string)
  fullName: Godot.Node.FindParent(string)
  nameWithType.vb: Node.FindParent(String)
  fullName.vb: Godot.Node.FindParent(String)
  name.vb: FindParent(String)
  spec.csharp:
  - uid: Godot.Node.FindParent(System.String)
    name: FindParent
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Godot.Node.FindParent(System.String)
    name: FindParent
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Godot.Node.HasNodeAndResource(Godot.NodePath)
  commentId: M:Godot.Node.HasNodeAndResource(Godot.NodePath)
  parent: Godot.Node
  isExternal: true
  name: HasNodeAndResource(NodePath)
  nameWithType: Node.HasNodeAndResource(NodePath)
  fullName: Godot.Node.HasNodeAndResource(Godot.NodePath)
  spec.csharp:
  - uid: Godot.Node.HasNodeAndResource(Godot.NodePath)
    name: HasNodeAndResource
    isExternal: true
  - name: (
  - uid: Godot.NodePath
    name: NodePath
    isExternal: true
  - name: )
  spec.vb:
  - uid: Godot.Node.HasNodeAndResource(Godot.NodePath)
    name: HasNodeAndResource
    isExternal: true
  - name: (
  - uid: Godot.NodePath
    name: NodePath
    isExternal: true
  - name: )
- uid: Godot.Node.GetNodeAndResource(Godot.NodePath)
  commentId: M:Godot.Node.GetNodeAndResource(Godot.NodePath)
  parent: Godot.Node
  isExternal: true
  name: GetNodeAndResource(NodePath)
  nameWithType: Node.GetNodeAndResource(NodePath)
  fullName: Godot.Node.GetNodeAndResource(Godot.NodePath)
  spec.csharp:
  - uid: Godot.Node.GetNodeAndResource(Godot.NodePath)
    name: GetNodeAndResource
    isExternal: true
  - name: (
  - uid: Godot.NodePath
    name: NodePath
    isExternal: true
  - name: )
  spec.vb:
  - uid: Godot.Node.GetNodeAndResource(Godot.NodePath)
    name: GetNodeAndResource
    isExternal: true
  - name: (
  - uid: Godot.NodePath
    name: NodePath
    isExternal: true
  - name: )
- uid: Godot.Node.IsInsideTree
  commentId: M:Godot.Node.IsInsideTree
  parent: Godot.Node
  isExternal: true
  name: IsInsideTree()
  nameWithType: Node.IsInsideTree()
  fullName: Godot.Node.IsInsideTree()
  spec.csharp:
  - uid: Godot.Node.IsInsideTree
    name: IsInsideTree
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Godot.Node.IsInsideTree
    name: IsInsideTree
    isExternal: true
  - name: (
  - name: )
- uid: Godot.Node.IsPartOfEditedScene
  commentId: M:Godot.Node.IsPartOfEditedScene
  parent: Godot.Node
  isExternal: true
  name: IsPartOfEditedScene()
  nameWithType: Node.IsPartOfEditedScene()
  fullName: Godot.Node.IsPartOfEditedScene()
  spec.csharp:
  - uid: Godot.Node.IsPartOfEditedScene
    name: IsPartOfEditedScene
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Godot.Node.IsPartOfEditedScene
    name: IsPartOfEditedScene
    isExternal: true
  - name: (
  - name: )
- uid: Godot.Node.IsAncestorOf(Godot.Node)
  commentId: M:Godot.Node.IsAncestorOf(Godot.Node)
  parent: Godot.Node
  isExternal: true
  name: IsAncestorOf(Node)
  nameWithType: Node.IsAncestorOf(Node)
  fullName: Godot.Node.IsAncestorOf(Godot.Node)
  spec.csharp:
  - uid: Godot.Node.IsAncestorOf(Godot.Node)
    name: IsAncestorOf
    isExternal: true
  - name: (
  - uid: Godot.Node
    name: Node
    isExternal: true
  - name: )
  spec.vb:
  - uid: Godot.Node.IsAncestorOf(Godot.Node)
    name: IsAncestorOf
    isExternal: true
  - name: (
  - uid: Godot.Node
    name: Node
    isExternal: true
  - name: )
- uid: Godot.Node.IsGreaterThan(Godot.Node)
  commentId: M:Godot.Node.IsGreaterThan(Godot.Node)
  parent: Godot.Node
  isExternal: true
  name: IsGreaterThan(Node)
  nameWithType: Node.IsGreaterThan(Node)
  fullName: Godot.Node.IsGreaterThan(Godot.Node)
  spec.csharp:
  - uid: Godot.Node.IsGreaterThan(Godot.Node)
    name: IsGreaterThan
    isExternal: true
  - name: (
  - uid: Godot.Node
    name: Node
    isExternal: true
  - name: )
  spec.vb:
  - uid: Godot.Node.IsGreaterThan(Godot.Node)
    name: IsGreaterThan
    isExternal: true
  - name: (
  - uid: Godot.Node
    name: Node
    isExternal: true
  - name: )
- uid: Godot.Node.GetPath
  commentId: M:Godot.Node.GetPath
  parent: Godot.Node
  isExternal: true
  name: GetPath()
  nameWithType: Node.GetPath()
  fullName: Godot.Node.GetPath()
  spec.csharp:
  - uid: Godot.Node.GetPath
    name: GetPath
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Godot.Node.GetPath
    name: GetPath
    isExternal: true
  - name: (
  - name: )
- uid: Godot.Node.GetPathTo(Godot.Node,System.Boolean)
  commentId: M:Godot.Node.GetPathTo(Godot.Node,System.Boolean)
  parent: Godot.Node
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: GetPathTo(Node, bool)
  nameWithType: Node.GetPathTo(Node, bool)
  fullName: Godot.Node.GetPathTo(Godot.Node, bool)
  nameWithType.vb: Node.GetPathTo(Node, Boolean)
  fullName.vb: Godot.Node.GetPathTo(Godot.Node, Boolean)
  name.vb: GetPathTo(Node, Boolean)
  spec.csharp:
  - uid: Godot.Node.GetPathTo(Godot.Node,System.Boolean)
    name: GetPathTo
    isExternal: true
  - name: (
  - uid: Godot.Node
    name: Node
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Godot.Node.GetPathTo(Godot.Node,System.Boolean)
    name: GetPathTo
    isExternal: true
  - name: (
  - uid: Godot.Node
    name: Node
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Godot.Node.AddToGroup(Godot.StringName,System.Boolean)
  commentId: M:Godot.Node.AddToGroup(Godot.StringName,System.Boolean)
  parent: Godot.Node
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: AddToGroup(StringName, bool)
  nameWithType: Node.AddToGroup(StringName, bool)
  fullName: Godot.Node.AddToGroup(Godot.StringName, bool)
  nameWithType.vb: Node.AddToGroup(StringName, Boolean)
  fullName.vb: Godot.Node.AddToGroup(Godot.StringName, Boolean)
  name.vb: AddToGroup(StringName, Boolean)
  spec.csharp:
  - uid: Godot.Node.AddToGroup(Godot.StringName,System.Boolean)
    name: AddToGroup
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Godot.Node.AddToGroup(Godot.StringName,System.Boolean)
    name: AddToGroup
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Godot.Node.RemoveFromGroup(Godot.StringName)
  commentId: M:Godot.Node.RemoveFromGroup(Godot.StringName)
  parent: Godot.Node
  isExternal: true
  name: RemoveFromGroup(StringName)
  nameWithType: Node.RemoveFromGroup(StringName)
  fullName: Godot.Node.RemoveFromGroup(Godot.StringName)
  spec.csharp:
  - uid: Godot.Node.RemoveFromGroup(Godot.StringName)
    name: RemoveFromGroup
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: )
  spec.vb:
  - uid: Godot.Node.RemoveFromGroup(Godot.StringName)
    name: RemoveFromGroup
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: )
- uid: Godot.Node.IsInGroup(Godot.StringName)
  commentId: M:Godot.Node.IsInGroup(Godot.StringName)
  parent: Godot.Node
  isExternal: true
  name: IsInGroup(StringName)
  nameWithType: Node.IsInGroup(StringName)
  fullName: Godot.Node.IsInGroup(Godot.StringName)
  spec.csharp:
  - uid: Godot.Node.IsInGroup(Godot.StringName)
    name: IsInGroup
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: )
  spec.vb:
  - uid: Godot.Node.IsInGroup(Godot.StringName)
    name: IsInGroup
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: )
- uid: Godot.Node.MoveChild(Godot.Node,System.Int32)
  commentId: M:Godot.Node.MoveChild(Godot.Node,System.Int32)
  parent: Godot.Node
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: MoveChild(Node, int)
  nameWithType: Node.MoveChild(Node, int)
  fullName: Godot.Node.MoveChild(Godot.Node, int)
  nameWithType.vb: Node.MoveChild(Node, Integer)
  fullName.vb: Godot.Node.MoveChild(Godot.Node, Integer)
  name.vb: MoveChild(Node, Integer)
  spec.csharp:
  - uid: Godot.Node.MoveChild(Godot.Node,System.Int32)
    name: MoveChild
    isExternal: true
  - name: (
  - uid: Godot.Node
    name: Node
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: Godot.Node.MoveChild(Godot.Node,System.Int32)
    name: MoveChild
    isExternal: true
  - name: (
  - uid: Godot.Node
    name: Node
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: Godot.Node.GetGroups
  commentId: M:Godot.Node.GetGroups
  parent: Godot.Node
  isExternal: true
  name: GetGroups()
  nameWithType: Node.GetGroups()
  fullName: Godot.Node.GetGroups()
  spec.csharp:
  - uid: Godot.Node.GetGroups
    name: GetGroups
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Godot.Node.GetGroups
    name: GetGroups
    isExternal: true
  - name: (
  - name: )
- uid: Godot.Node.GetIndex(System.Boolean)
  commentId: M:Godot.Node.GetIndex(System.Boolean)
  parent: Godot.Node
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: GetIndex(bool)
  nameWithType: Node.GetIndex(bool)
  fullName: Godot.Node.GetIndex(bool)
  nameWithType.vb: Node.GetIndex(Boolean)
  fullName.vb: Godot.Node.GetIndex(Boolean)
  name.vb: GetIndex(Boolean)
  spec.csharp:
  - uid: Godot.Node.GetIndex(System.Boolean)
    name: GetIndex
    isExternal: true
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Godot.Node.GetIndex(System.Boolean)
    name: GetIndex
    isExternal: true
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Godot.Node.PrintTree
  commentId: M:Godot.Node.PrintTree
  parent: Godot.Node
  isExternal: true
  name: PrintTree()
  nameWithType: Node.PrintTree()
  fullName: Godot.Node.PrintTree()
  spec.csharp:
  - uid: Godot.Node.PrintTree
    name: PrintTree
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Godot.Node.PrintTree
    name: PrintTree
    isExternal: true
  - name: (
  - name: )
- uid: Godot.Node.PrintTreePretty
  commentId: M:Godot.Node.PrintTreePretty
  parent: Godot.Node
  isExternal: true
  name: PrintTreePretty()
  nameWithType: Node.PrintTreePretty()
  fullName: Godot.Node.PrintTreePretty()
  spec.csharp:
  - uid: Godot.Node.PrintTreePretty
    name: PrintTreePretty
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Godot.Node.PrintTreePretty
    name: PrintTreePretty
    isExternal: true
  - name: (
  - name: )
- uid: Godot.Node.GetTreeString
  commentId: M:Godot.Node.GetTreeString
  parent: Godot.Node
  isExternal: true
  name: GetTreeString()
  nameWithType: Node.GetTreeString()
  fullName: Godot.Node.GetTreeString()
  spec.csharp:
  - uid: Godot.Node.GetTreeString
    name: GetTreeString
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Godot.Node.GetTreeString
    name: GetTreeString
    isExternal: true
  - name: (
  - name: )
- uid: Godot.Node.GetTreeStringPretty
  commentId: M:Godot.Node.GetTreeStringPretty
  parent: Godot.Node
  isExternal: true
  name: GetTreeStringPretty()
  nameWithType: Node.GetTreeStringPretty()
  fullName: Godot.Node.GetTreeStringPretty()
  spec.csharp:
  - uid: Godot.Node.GetTreeStringPretty
    name: GetTreeStringPretty
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Godot.Node.GetTreeStringPretty
    name: GetTreeStringPretty
    isExternal: true
  - name: (
  - name: )
- uid: Godot.Node.PropagateNotification(System.Int32)
  commentId: M:Godot.Node.PropagateNotification(System.Int32)
  parent: Godot.Node
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: PropagateNotification(int)
  nameWithType: Node.PropagateNotification(int)
  fullName: Godot.Node.PropagateNotification(int)
  nameWithType.vb: Node.PropagateNotification(Integer)
  fullName.vb: Godot.Node.PropagateNotification(Integer)
  name.vb: PropagateNotification(Integer)
  spec.csharp:
  - uid: Godot.Node.PropagateNotification(System.Int32)
    name: PropagateNotification
    isExternal: true
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: Godot.Node.PropagateNotification(System.Int32)
    name: PropagateNotification
    isExternal: true
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: Godot.Node.PropagateCall(Godot.StringName,Godot.Collections.Array,System.Boolean)
  commentId: M:Godot.Node.PropagateCall(Godot.StringName,Godot.Collections.Array,System.Boolean)
  parent: Godot.Node
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: PropagateCall(StringName, Array, bool)
  nameWithType: Node.PropagateCall(StringName, Array, bool)
  fullName: Godot.Node.PropagateCall(Godot.StringName, Godot.Collections.Array, bool)
  nameWithType.vb: Node.PropagateCall(StringName, Array, Boolean)
  fullName.vb: Godot.Node.PropagateCall(Godot.StringName, Godot.Collections.Array, Boolean)
  name.vb: PropagateCall(StringName, Array, Boolean)
  spec.csharp:
  - uid: Godot.Node.PropagateCall(Godot.StringName,Godot.Collections.Array,System.Boolean)
    name: PropagateCall
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.Collections.Array
    name: Array
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Godot.Node.PropagateCall(Godot.StringName,Godot.Collections.Array,System.Boolean)
    name: PropagateCall
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.Collections.Array
    name: Array
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Godot.Node.SetPhysicsProcess(System.Boolean)
  commentId: M:Godot.Node.SetPhysicsProcess(System.Boolean)
  parent: Godot.Node
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: SetPhysicsProcess(bool)
  nameWithType: Node.SetPhysicsProcess(bool)
  fullName: Godot.Node.SetPhysicsProcess(bool)
  nameWithType.vb: Node.SetPhysicsProcess(Boolean)
  fullName.vb: Godot.Node.SetPhysicsProcess(Boolean)
  name.vb: SetPhysicsProcess(Boolean)
  spec.csharp:
  - uid: Godot.Node.SetPhysicsProcess(System.Boolean)
    name: SetPhysicsProcess
    isExternal: true
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Godot.Node.SetPhysicsProcess(System.Boolean)
    name: SetPhysicsProcess
    isExternal: true
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Godot.Node.GetPhysicsProcessDeltaTime
  commentId: M:Godot.Node.GetPhysicsProcessDeltaTime
  parent: Godot.Node
  isExternal: true
  name: GetPhysicsProcessDeltaTime()
  nameWithType: Node.GetPhysicsProcessDeltaTime()
  fullName: Godot.Node.GetPhysicsProcessDeltaTime()
  spec.csharp:
  - uid: Godot.Node.GetPhysicsProcessDeltaTime
    name: GetPhysicsProcessDeltaTime
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Godot.Node.GetPhysicsProcessDeltaTime
    name: GetPhysicsProcessDeltaTime
    isExternal: true
  - name: (
  - name: )
- uid: Godot.Node.IsPhysicsProcessing
  commentId: M:Godot.Node.IsPhysicsProcessing
  parent: Godot.Node
  isExternal: true
  name: IsPhysicsProcessing()
  nameWithType: Node.IsPhysicsProcessing()
  fullName: Godot.Node.IsPhysicsProcessing()
  spec.csharp:
  - uid: Godot.Node.IsPhysicsProcessing
    name: IsPhysicsProcessing
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Godot.Node.IsPhysicsProcessing
    name: IsPhysicsProcessing
    isExternal: true
  - name: (
  - name: )
- uid: Godot.Node.GetProcessDeltaTime
  commentId: M:Godot.Node.GetProcessDeltaTime
  parent: Godot.Node
  isExternal: true
  name: GetProcessDeltaTime()
  nameWithType: Node.GetProcessDeltaTime()
  fullName: Godot.Node.GetProcessDeltaTime()
  spec.csharp:
  - uid: Godot.Node.GetProcessDeltaTime
    name: GetProcessDeltaTime
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Godot.Node.GetProcessDeltaTime
    name: GetProcessDeltaTime
    isExternal: true
  - name: (
  - name: )
- uid: Godot.Node.SetProcess(System.Boolean)
  commentId: M:Godot.Node.SetProcess(System.Boolean)
  parent: Godot.Node
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: SetProcess(bool)
  nameWithType: Node.SetProcess(bool)
  fullName: Godot.Node.SetProcess(bool)
  nameWithType.vb: Node.SetProcess(Boolean)
  fullName.vb: Godot.Node.SetProcess(Boolean)
  name.vb: SetProcess(Boolean)
  spec.csharp:
  - uid: Godot.Node.SetProcess(System.Boolean)
    name: SetProcess
    isExternal: true
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Godot.Node.SetProcess(System.Boolean)
    name: SetProcess
    isExternal: true
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Godot.Node.IsProcessing
  commentId: M:Godot.Node.IsProcessing
  parent: Godot.Node
  isExternal: true
  name: IsProcessing()
  nameWithType: Node.IsProcessing()
  fullName: Godot.Node.IsProcessing()
  spec.csharp:
  - uid: Godot.Node.IsProcessing
    name: IsProcessing
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Godot.Node.IsProcessing
    name: IsProcessing
    isExternal: true
  - name: (
  - name: )
- uid: Godot.Node.SetProcessInput(System.Boolean)
  commentId: M:Godot.Node.SetProcessInput(System.Boolean)
  parent: Godot.Node
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: SetProcessInput(bool)
  nameWithType: Node.SetProcessInput(bool)
  fullName: Godot.Node.SetProcessInput(bool)
  nameWithType.vb: Node.SetProcessInput(Boolean)
  fullName.vb: Godot.Node.SetProcessInput(Boolean)
  name.vb: SetProcessInput(Boolean)
  spec.csharp:
  - uid: Godot.Node.SetProcessInput(System.Boolean)
    name: SetProcessInput
    isExternal: true
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Godot.Node.SetProcessInput(System.Boolean)
    name: SetProcessInput
    isExternal: true
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Godot.Node.IsProcessingInput
  commentId: M:Godot.Node.IsProcessingInput
  parent: Godot.Node
  isExternal: true
  name: IsProcessingInput()
  nameWithType: Node.IsProcessingInput()
  fullName: Godot.Node.IsProcessingInput()
  spec.csharp:
  - uid: Godot.Node.IsProcessingInput
    name: IsProcessingInput
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Godot.Node.IsProcessingInput
    name: IsProcessingInput
    isExternal: true
  - name: (
  - name: )
- uid: Godot.Node.SetProcessShortcutInput(System.Boolean)
  commentId: M:Godot.Node.SetProcessShortcutInput(System.Boolean)
  parent: Godot.Node
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: SetProcessShortcutInput(bool)
  nameWithType: Node.SetProcessShortcutInput(bool)
  fullName: Godot.Node.SetProcessShortcutInput(bool)
  nameWithType.vb: Node.SetProcessShortcutInput(Boolean)
  fullName.vb: Godot.Node.SetProcessShortcutInput(Boolean)
  name.vb: SetProcessShortcutInput(Boolean)
  spec.csharp:
  - uid: Godot.Node.SetProcessShortcutInput(System.Boolean)
    name: SetProcessShortcutInput
    isExternal: true
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Godot.Node.SetProcessShortcutInput(System.Boolean)
    name: SetProcessShortcutInput
    isExternal: true
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Godot.Node.IsProcessingShortcutInput
  commentId: M:Godot.Node.IsProcessingShortcutInput
  parent: Godot.Node
  isExternal: true
  name: IsProcessingShortcutInput()
  nameWithType: Node.IsProcessingShortcutInput()
  fullName: Godot.Node.IsProcessingShortcutInput()
  spec.csharp:
  - uid: Godot.Node.IsProcessingShortcutInput
    name: IsProcessingShortcutInput
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Godot.Node.IsProcessingShortcutInput
    name: IsProcessingShortcutInput
    isExternal: true
  - name: (
  - name: )
- uid: Godot.Node.SetProcessUnhandledInput(System.Boolean)
  commentId: M:Godot.Node.SetProcessUnhandledInput(System.Boolean)
  parent: Godot.Node
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: SetProcessUnhandledInput(bool)
  nameWithType: Node.SetProcessUnhandledInput(bool)
  fullName: Godot.Node.SetProcessUnhandledInput(bool)
  nameWithType.vb: Node.SetProcessUnhandledInput(Boolean)
  fullName.vb: Godot.Node.SetProcessUnhandledInput(Boolean)
  name.vb: SetProcessUnhandledInput(Boolean)
  spec.csharp:
  - uid: Godot.Node.SetProcessUnhandledInput(System.Boolean)
    name: SetProcessUnhandledInput
    isExternal: true
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Godot.Node.SetProcessUnhandledInput(System.Boolean)
    name: SetProcessUnhandledInput
    isExternal: true
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Godot.Node.IsProcessingUnhandledInput
  commentId: M:Godot.Node.IsProcessingUnhandledInput
  parent: Godot.Node
  isExternal: true
  name: IsProcessingUnhandledInput()
  nameWithType: Node.IsProcessingUnhandledInput()
  fullName: Godot.Node.IsProcessingUnhandledInput()
  spec.csharp:
  - uid: Godot.Node.IsProcessingUnhandledInput
    name: IsProcessingUnhandledInput
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Godot.Node.IsProcessingUnhandledInput
    name: IsProcessingUnhandledInput
    isExternal: true
  - name: (
  - name: )
- uid: Godot.Node.SetProcessUnhandledKeyInput(System.Boolean)
  commentId: M:Godot.Node.SetProcessUnhandledKeyInput(System.Boolean)
  parent: Godot.Node
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: SetProcessUnhandledKeyInput(bool)
  nameWithType: Node.SetProcessUnhandledKeyInput(bool)
  fullName: Godot.Node.SetProcessUnhandledKeyInput(bool)
  nameWithType.vb: Node.SetProcessUnhandledKeyInput(Boolean)
  fullName.vb: Godot.Node.SetProcessUnhandledKeyInput(Boolean)
  name.vb: SetProcessUnhandledKeyInput(Boolean)
  spec.csharp:
  - uid: Godot.Node.SetProcessUnhandledKeyInput(System.Boolean)
    name: SetProcessUnhandledKeyInput
    isExternal: true
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Godot.Node.SetProcessUnhandledKeyInput(System.Boolean)
    name: SetProcessUnhandledKeyInput
    isExternal: true
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Godot.Node.IsProcessingUnhandledKeyInput
  commentId: M:Godot.Node.IsProcessingUnhandledKeyInput
  parent: Godot.Node
  isExternal: true
  name: IsProcessingUnhandledKeyInput()
  nameWithType: Node.IsProcessingUnhandledKeyInput()
  fullName: Godot.Node.IsProcessingUnhandledKeyInput()
  spec.csharp:
  - uid: Godot.Node.IsProcessingUnhandledKeyInput
    name: IsProcessingUnhandledKeyInput
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Godot.Node.IsProcessingUnhandledKeyInput
    name: IsProcessingUnhandledKeyInput
    isExternal: true
  - name: (
  - name: )
- uid: Godot.Node.CanProcess
  commentId: M:Godot.Node.CanProcess
  parent: Godot.Node
  isExternal: true
  name: CanProcess()
  nameWithType: Node.CanProcess()
  fullName: Godot.Node.CanProcess()
  spec.csharp:
  - uid: Godot.Node.CanProcess
    name: CanProcess
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Godot.Node.CanProcess
    name: CanProcess
    isExternal: true
  - name: (
  - name: )
- uid: Godot.Node.SetDisplayFolded(System.Boolean)
  commentId: M:Godot.Node.SetDisplayFolded(System.Boolean)
  parent: Godot.Node
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: SetDisplayFolded(bool)
  nameWithType: Node.SetDisplayFolded(bool)
  fullName: Godot.Node.SetDisplayFolded(bool)
  nameWithType.vb: Node.SetDisplayFolded(Boolean)
  fullName.vb: Godot.Node.SetDisplayFolded(Boolean)
  name.vb: SetDisplayFolded(Boolean)
  spec.csharp:
  - uid: Godot.Node.SetDisplayFolded(System.Boolean)
    name: SetDisplayFolded
    isExternal: true
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Godot.Node.SetDisplayFolded(System.Boolean)
    name: SetDisplayFolded
    isExternal: true
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Godot.Node.IsDisplayedFolded
  commentId: M:Godot.Node.IsDisplayedFolded
  parent: Godot.Node
  isExternal: true
  name: IsDisplayedFolded()
  nameWithType: Node.IsDisplayedFolded()
  fullName: Godot.Node.IsDisplayedFolded()
  spec.csharp:
  - uid: Godot.Node.IsDisplayedFolded
    name: IsDisplayedFolded
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Godot.Node.IsDisplayedFolded
    name: IsDisplayedFolded
    isExternal: true
  - name: (
  - name: )
- uid: Godot.Node.SetProcessInternal(System.Boolean)
  commentId: M:Godot.Node.SetProcessInternal(System.Boolean)
  parent: Godot.Node
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: SetProcessInternal(bool)
  nameWithType: Node.SetProcessInternal(bool)
  fullName: Godot.Node.SetProcessInternal(bool)
  nameWithType.vb: Node.SetProcessInternal(Boolean)
  fullName.vb: Godot.Node.SetProcessInternal(Boolean)
  name.vb: SetProcessInternal(Boolean)
  spec.csharp:
  - uid: Godot.Node.SetProcessInternal(System.Boolean)
    name: SetProcessInternal
    isExternal: true
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Godot.Node.SetProcessInternal(System.Boolean)
    name: SetProcessInternal
    isExternal: true
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Godot.Node.IsProcessingInternal
  commentId: M:Godot.Node.IsProcessingInternal
  parent: Godot.Node
  isExternal: true
  name: IsProcessingInternal()
  nameWithType: Node.IsProcessingInternal()
  fullName: Godot.Node.IsProcessingInternal()
  spec.csharp:
  - uid: Godot.Node.IsProcessingInternal
    name: IsProcessingInternal
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Godot.Node.IsProcessingInternal
    name: IsProcessingInternal
    isExternal: true
  - name: (
  - name: )
- uid: Godot.Node.SetPhysicsProcessInternal(System.Boolean)
  commentId: M:Godot.Node.SetPhysicsProcessInternal(System.Boolean)
  parent: Godot.Node
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: SetPhysicsProcessInternal(bool)
  nameWithType: Node.SetPhysicsProcessInternal(bool)
  fullName: Godot.Node.SetPhysicsProcessInternal(bool)
  nameWithType.vb: Node.SetPhysicsProcessInternal(Boolean)
  fullName.vb: Godot.Node.SetPhysicsProcessInternal(Boolean)
  name.vb: SetPhysicsProcessInternal(Boolean)
  spec.csharp:
  - uid: Godot.Node.SetPhysicsProcessInternal(System.Boolean)
    name: SetPhysicsProcessInternal
    isExternal: true
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Godot.Node.SetPhysicsProcessInternal(System.Boolean)
    name: SetPhysicsProcessInternal
    isExternal: true
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Godot.Node.IsPhysicsProcessingInternal
  commentId: M:Godot.Node.IsPhysicsProcessingInternal
  parent: Godot.Node
  isExternal: true
  name: IsPhysicsProcessingInternal()
  nameWithType: Node.IsPhysicsProcessingInternal()
  fullName: Godot.Node.IsPhysicsProcessingInternal()
  spec.csharp:
  - uid: Godot.Node.IsPhysicsProcessingInternal
    name: IsPhysicsProcessingInternal
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Godot.Node.IsPhysicsProcessingInternal
    name: IsPhysicsProcessingInternal
    isExternal: true
  - name: (
  - name: )
- uid: Godot.Node.IsPhysicsInterpolated
  commentId: M:Godot.Node.IsPhysicsInterpolated
  parent: Godot.Node
  isExternal: true
  name: IsPhysicsInterpolated()
  nameWithType: Node.IsPhysicsInterpolated()
  fullName: Godot.Node.IsPhysicsInterpolated()
  spec.csharp:
  - uid: Godot.Node.IsPhysicsInterpolated
    name: IsPhysicsInterpolated
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Godot.Node.IsPhysicsInterpolated
    name: IsPhysicsInterpolated
    isExternal: true
  - name: (
  - name: )
- uid: Godot.Node.IsPhysicsInterpolatedAndEnabled
  commentId: M:Godot.Node.IsPhysicsInterpolatedAndEnabled
  parent: Godot.Node
  isExternal: true
  name: IsPhysicsInterpolatedAndEnabled()
  nameWithType: Node.IsPhysicsInterpolatedAndEnabled()
  fullName: Godot.Node.IsPhysicsInterpolatedAndEnabled()
  spec.csharp:
  - uid: Godot.Node.IsPhysicsInterpolatedAndEnabled
    name: IsPhysicsInterpolatedAndEnabled
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Godot.Node.IsPhysicsInterpolatedAndEnabled
    name: IsPhysicsInterpolatedAndEnabled
    isExternal: true
  - name: (
  - name: )
- uid: Godot.Node.ResetPhysicsInterpolation
  commentId: M:Godot.Node.ResetPhysicsInterpolation
  parent: Godot.Node
  isExternal: true
  name: ResetPhysicsInterpolation()
  nameWithType: Node.ResetPhysicsInterpolation()
  fullName: Godot.Node.ResetPhysicsInterpolation()
  spec.csharp:
  - uid: Godot.Node.ResetPhysicsInterpolation
    name: ResetPhysicsInterpolation
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Godot.Node.ResetPhysicsInterpolation
    name: ResetPhysicsInterpolation
    isExternal: true
  - name: (
  - name: )
- uid: Godot.Node.GetWindow
  commentId: M:Godot.Node.GetWindow
  parent: Godot.Node
  isExternal: true
  name: GetWindow()
  nameWithType: Node.GetWindow()
  fullName: Godot.Node.GetWindow()
  spec.csharp:
  - uid: Godot.Node.GetWindow
    name: GetWindow
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Godot.Node.GetWindow
    name: GetWindow
    isExternal: true
  - name: (
  - name: )
- uid: Godot.Node.GetLastExclusiveWindow
  commentId: M:Godot.Node.GetLastExclusiveWindow
  parent: Godot.Node
  isExternal: true
  name: GetLastExclusiveWindow()
  nameWithType: Node.GetLastExclusiveWindow()
  fullName: Godot.Node.GetLastExclusiveWindow()
  spec.csharp:
  - uid: Godot.Node.GetLastExclusiveWindow
    name: GetLastExclusiveWindow
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Godot.Node.GetLastExclusiveWindow
    name: GetLastExclusiveWindow
    isExternal: true
  - name: (
  - name: )
- uid: Godot.Node.GetTree
  commentId: M:Godot.Node.GetTree
  parent: Godot.Node
  isExternal: true
  name: GetTree()
  nameWithType: Node.GetTree()
  fullName: Godot.Node.GetTree()
  spec.csharp:
  - uid: Godot.Node.GetTree
    name: GetTree
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Godot.Node.GetTree
    name: GetTree
    isExternal: true
  - name: (
  - name: )
- uid: Godot.Node.CreateTween
  commentId: M:Godot.Node.CreateTween
  parent: Godot.Node
  isExternal: true
  name: CreateTween()
  nameWithType: Node.CreateTween()
  fullName: Godot.Node.CreateTween()
  spec.csharp:
  - uid: Godot.Node.CreateTween
    name: CreateTween
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Godot.Node.CreateTween
    name: CreateTween
    isExternal: true
  - name: (
  - name: )
- uid: Godot.Node.Duplicate(System.Int32)
  commentId: M:Godot.Node.Duplicate(System.Int32)
  parent: Godot.Node
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: Duplicate(int)
  nameWithType: Node.Duplicate(int)
  fullName: Godot.Node.Duplicate(int)
  nameWithType.vb: Node.Duplicate(Integer)
  fullName.vb: Godot.Node.Duplicate(Integer)
  name.vb: Duplicate(Integer)
  spec.csharp:
  - uid: Godot.Node.Duplicate(System.Int32)
    name: Duplicate
    isExternal: true
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: Godot.Node.Duplicate(System.Int32)
    name: Duplicate
    isExternal: true
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: Godot.Node.ReplaceBy(Godot.Node,System.Boolean)
  commentId: M:Godot.Node.ReplaceBy(Godot.Node,System.Boolean)
  parent: Godot.Node
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: ReplaceBy(Node, bool)
  nameWithType: Node.ReplaceBy(Node, bool)
  fullName: Godot.Node.ReplaceBy(Godot.Node, bool)
  nameWithType.vb: Node.ReplaceBy(Node, Boolean)
  fullName.vb: Godot.Node.ReplaceBy(Godot.Node, Boolean)
  name.vb: ReplaceBy(Node, Boolean)
  spec.csharp:
  - uid: Godot.Node.ReplaceBy(Godot.Node,System.Boolean)
    name: ReplaceBy
    isExternal: true
  - name: (
  - uid: Godot.Node
    name: Node
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Godot.Node.ReplaceBy(Godot.Node,System.Boolean)
    name: ReplaceBy
    isExternal: true
  - name: (
  - uid: Godot.Node
    name: Node
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Godot.Node.SetSceneInstanceLoadPlaceholder(System.Boolean)
  commentId: M:Godot.Node.SetSceneInstanceLoadPlaceholder(System.Boolean)
  parent: Godot.Node
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: SetSceneInstanceLoadPlaceholder(bool)
  nameWithType: Node.SetSceneInstanceLoadPlaceholder(bool)
  fullName: Godot.Node.SetSceneInstanceLoadPlaceholder(bool)
  nameWithType.vb: Node.SetSceneInstanceLoadPlaceholder(Boolean)
  fullName.vb: Godot.Node.SetSceneInstanceLoadPlaceholder(Boolean)
  name.vb: SetSceneInstanceLoadPlaceholder(Boolean)
  spec.csharp:
  - uid: Godot.Node.SetSceneInstanceLoadPlaceholder(System.Boolean)
    name: SetSceneInstanceLoadPlaceholder
    isExternal: true
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Godot.Node.SetSceneInstanceLoadPlaceholder(System.Boolean)
    name: SetSceneInstanceLoadPlaceholder
    isExternal: true
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Godot.Node.GetSceneInstanceLoadPlaceholder
  commentId: M:Godot.Node.GetSceneInstanceLoadPlaceholder
  parent: Godot.Node
  isExternal: true
  name: GetSceneInstanceLoadPlaceholder()
  nameWithType: Node.GetSceneInstanceLoadPlaceholder()
  fullName: Godot.Node.GetSceneInstanceLoadPlaceholder()
  spec.csharp:
  - uid: Godot.Node.GetSceneInstanceLoadPlaceholder
    name: GetSceneInstanceLoadPlaceholder
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Godot.Node.GetSceneInstanceLoadPlaceholder
    name: GetSceneInstanceLoadPlaceholder
    isExternal: true
  - name: (
  - name: )
- uid: Godot.Node.SetEditableInstance(Godot.Node,System.Boolean)
  commentId: M:Godot.Node.SetEditableInstance(Godot.Node,System.Boolean)
  parent: Godot.Node
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: SetEditableInstance(Node, bool)
  nameWithType: Node.SetEditableInstance(Node, bool)
  fullName: Godot.Node.SetEditableInstance(Godot.Node, bool)
  nameWithType.vb: Node.SetEditableInstance(Node, Boolean)
  fullName.vb: Godot.Node.SetEditableInstance(Godot.Node, Boolean)
  name.vb: SetEditableInstance(Node, Boolean)
  spec.csharp:
  - uid: Godot.Node.SetEditableInstance(Godot.Node,System.Boolean)
    name: SetEditableInstance
    isExternal: true
  - name: (
  - uid: Godot.Node
    name: Node
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Godot.Node.SetEditableInstance(Godot.Node,System.Boolean)
    name: SetEditableInstance
    isExternal: true
  - name: (
  - uid: Godot.Node
    name: Node
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Godot.Node.IsEditableInstance(Godot.Node)
  commentId: M:Godot.Node.IsEditableInstance(Godot.Node)
  parent: Godot.Node
  isExternal: true
  name: IsEditableInstance(Node)
  nameWithType: Node.IsEditableInstance(Node)
  fullName: Godot.Node.IsEditableInstance(Godot.Node)
  spec.csharp:
  - uid: Godot.Node.IsEditableInstance(Godot.Node)
    name: IsEditableInstance
    isExternal: true
  - name: (
  - uid: Godot.Node
    name: Node
    isExternal: true
  - name: )
  spec.vb:
  - uid: Godot.Node.IsEditableInstance(Godot.Node)
    name: IsEditableInstance
    isExternal: true
  - name: (
  - uid: Godot.Node
    name: Node
    isExternal: true
  - name: )
- uid: Godot.Node.GetViewport
  commentId: M:Godot.Node.GetViewport
  parent: Godot.Node
  isExternal: true
  name: GetViewport()
  nameWithType: Node.GetViewport()
  fullName: Godot.Node.GetViewport()
  spec.csharp:
  - uid: Godot.Node.GetViewport
    name: GetViewport
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Godot.Node.GetViewport
    name: GetViewport
    isExternal: true
  - name: (
  - name: )
- uid: Godot.Node.QueueFree
  commentId: M:Godot.Node.QueueFree
  parent: Godot.Node
  isExternal: true
  name: QueueFree()
  nameWithType: Node.QueueFree()
  fullName: Godot.Node.QueueFree()
  spec.csharp:
  - uid: Godot.Node.QueueFree
    name: QueueFree
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Godot.Node.QueueFree
    name: QueueFree
    isExternal: true
  - name: (
  - name: )
- uid: Godot.Node.RequestReady
  commentId: M:Godot.Node.RequestReady
  parent: Godot.Node
  isExternal: true
  name: RequestReady()
  nameWithType: Node.RequestReady()
  fullName: Godot.Node.RequestReady()
  spec.csharp:
  - uid: Godot.Node.RequestReady
    name: RequestReady
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Godot.Node.RequestReady
    name: RequestReady
    isExternal: true
  - name: (
  - name: )
- uid: Godot.Node.IsNodeReady
  commentId: M:Godot.Node.IsNodeReady
  parent: Godot.Node
  isExternal: true
  name: IsNodeReady()
  nameWithType: Node.IsNodeReady()
  fullName: Godot.Node.IsNodeReady()
  spec.csharp:
  - uid: Godot.Node.IsNodeReady
    name: IsNodeReady
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Godot.Node.IsNodeReady
    name: IsNodeReady
    isExternal: true
  - name: (
  - name: )
- uid: Godot.Node.SetMultiplayerAuthority(System.Int32,System.Boolean)
  commentId: M:Godot.Node.SetMultiplayerAuthority(System.Int32,System.Boolean)
  parent: Godot.Node
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: SetMultiplayerAuthority(int, bool)
  nameWithType: Node.SetMultiplayerAuthority(int, bool)
  fullName: Godot.Node.SetMultiplayerAuthority(int, bool)
  nameWithType.vb: Node.SetMultiplayerAuthority(Integer, Boolean)
  fullName.vb: Godot.Node.SetMultiplayerAuthority(Integer, Boolean)
  name.vb: SetMultiplayerAuthority(Integer, Boolean)
  spec.csharp:
  - uid: Godot.Node.SetMultiplayerAuthority(System.Int32,System.Boolean)
    name: SetMultiplayerAuthority
    isExternal: true
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Godot.Node.SetMultiplayerAuthority(System.Int32,System.Boolean)
    name: SetMultiplayerAuthority
    isExternal: true
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Godot.Node.GetMultiplayerAuthority
  commentId: M:Godot.Node.GetMultiplayerAuthority
  parent: Godot.Node
  isExternal: true
  name: GetMultiplayerAuthority()
  nameWithType: Node.GetMultiplayerAuthority()
  fullName: Godot.Node.GetMultiplayerAuthority()
  spec.csharp:
  - uid: Godot.Node.GetMultiplayerAuthority
    name: GetMultiplayerAuthority
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Godot.Node.GetMultiplayerAuthority
    name: GetMultiplayerAuthority
    isExternal: true
  - name: (
  - name: )
- uid: Godot.Node.IsMultiplayerAuthority
  commentId: M:Godot.Node.IsMultiplayerAuthority
  parent: Godot.Node
  isExternal: true
  name: IsMultiplayerAuthority()
  nameWithType: Node.IsMultiplayerAuthority()
  fullName: Godot.Node.IsMultiplayerAuthority()
  spec.csharp:
  - uid: Godot.Node.IsMultiplayerAuthority
    name: IsMultiplayerAuthority
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Godot.Node.IsMultiplayerAuthority
    name: IsMultiplayerAuthority
    isExternal: true
  - name: (
  - name: )
- uid: Godot.Node.RpcConfig(Godot.StringName,Godot.Variant)
  commentId: M:Godot.Node.RpcConfig(Godot.StringName,Godot.Variant)
  parent: Godot.Node
  isExternal: true
  name: RpcConfig(StringName, Variant)
  nameWithType: Node.RpcConfig(StringName, Variant)
  fullName: Godot.Node.RpcConfig(Godot.StringName, Godot.Variant)
  spec.csharp:
  - uid: Godot.Node.RpcConfig(Godot.StringName,Godot.Variant)
    name: RpcConfig
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.Variant
    name: Variant
    isExternal: true
  - name: )
  spec.vb:
  - uid: Godot.Node.RpcConfig(Godot.StringName,Godot.Variant)
    name: RpcConfig
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.Variant
    name: Variant
    isExternal: true
  - name: )
- uid: Godot.Node.Atr(System.String,Godot.StringName)
  commentId: M:Godot.Node.Atr(System.String,Godot.StringName)
  parent: Godot.Node
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: Atr(string, StringName)
  nameWithType: Node.Atr(string, StringName)
  fullName: Godot.Node.Atr(string, Godot.StringName)
  nameWithType.vb: Node.Atr(String, StringName)
  fullName.vb: Godot.Node.Atr(String, Godot.StringName)
  name.vb: Atr(String, StringName)
  spec.csharp:
  - uid: Godot.Node.Atr(System.String,Godot.StringName)
    name: Atr
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: )
  spec.vb:
  - uid: Godot.Node.Atr(System.String,Godot.StringName)
    name: Atr
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: )
- uid: Godot.Node.AtrN(System.String,Godot.StringName,System.Int32,Godot.StringName)
  commentId: M:Godot.Node.AtrN(System.String,Godot.StringName,System.Int32,Godot.StringName)
  parent: Godot.Node
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: AtrN(string, StringName, int, StringName)
  nameWithType: Node.AtrN(string, StringName, int, StringName)
  fullName: Godot.Node.AtrN(string, Godot.StringName, int, Godot.StringName)
  nameWithType.vb: Node.AtrN(String, StringName, Integer, StringName)
  fullName.vb: Godot.Node.AtrN(String, Godot.StringName, Integer, Godot.StringName)
  name.vb: AtrN(String, StringName, Integer, StringName)
  spec.csharp:
  - uid: Godot.Node.AtrN(System.String,Godot.StringName,System.Int32,Godot.StringName)
    name: AtrN
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: )
  spec.vb:
  - uid: Godot.Node.AtrN(System.String,Godot.StringName,System.Int32,Godot.StringName)
    name: AtrN
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: )
- uid: Godot.Node.Rpc(Godot.StringName,Godot.Variant[])
  commentId: M:Godot.Node.Rpc(Godot.StringName,Godot.Variant[])
  parent: Godot.Node
  isExternal: true
  name: Rpc(StringName, params Variant[])
  nameWithType: Node.Rpc(StringName, params Variant[])
  fullName: Godot.Node.Rpc(Godot.StringName, params Godot.Variant[])
  nameWithType.vb: Node.Rpc(StringName, ParamArray Variant())
  fullName.vb: Godot.Node.Rpc(Godot.StringName, ParamArray Godot.Variant())
  name.vb: Rpc(StringName, ParamArray Variant())
  spec.csharp:
  - uid: Godot.Node.Rpc(Godot.StringName,Godot.Variant[])
    name: Rpc
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: ','
  - name: " "
  - name: params
  - name: " "
  - uid: Godot.Variant
    name: Variant
    isExternal: true
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: Godot.Node.Rpc(Godot.StringName,Godot.Variant[])
    name: Rpc
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: ','
  - name: " "
  - name: ParamArray
  - name: " "
  - uid: Godot.Variant
    name: Variant
    isExternal: true
  - name: (
  - name: )
  - name: )
- uid: Godot.Node.RpcId(System.Int64,Godot.StringName,Godot.Variant[])
  commentId: M:Godot.Node.RpcId(System.Int64,Godot.StringName,Godot.Variant[])
  parent: Godot.Node
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int64
  name: RpcId(long, StringName, params Variant[])
  nameWithType: Node.RpcId(long, StringName, params Variant[])
  fullName: Godot.Node.RpcId(long, Godot.StringName, params Godot.Variant[])
  nameWithType.vb: Node.RpcId(Long, StringName, ParamArray Variant())
  fullName.vb: Godot.Node.RpcId(Long, Godot.StringName, ParamArray Godot.Variant())
  name.vb: RpcId(Long, StringName, ParamArray Variant())
  spec.csharp:
  - uid: Godot.Node.RpcId(System.Int64,Godot.StringName,Godot.Variant[])
    name: RpcId
    isExternal: true
  - name: (
  - uid: System.Int64
    name: long
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int64
  - name: ','
  - name: " "
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: ','
  - name: " "
  - name: params
  - name: " "
  - uid: Godot.Variant
    name: Variant
    isExternal: true
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: Godot.Node.RpcId(System.Int64,Godot.StringName,Godot.Variant[])
    name: RpcId
    isExternal: true
  - name: (
  - uid: System.Int64
    name: Long
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int64
  - name: ','
  - name: " "
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: ','
  - name: " "
  - name: ParamArray
  - name: " "
  - uid: Godot.Variant
    name: Variant
    isExternal: true
  - name: (
  - name: )
  - name: )
- uid: Godot.Node.UpdateConfigurationWarnings
  commentId: M:Godot.Node.UpdateConfigurationWarnings
  parent: Godot.Node
  isExternal: true
  name: UpdateConfigurationWarnings()
  nameWithType: Node.UpdateConfigurationWarnings()
  fullName: Godot.Node.UpdateConfigurationWarnings()
  spec.csharp:
  - uid: Godot.Node.UpdateConfigurationWarnings
    name: UpdateConfigurationWarnings
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Godot.Node.UpdateConfigurationWarnings
    name: UpdateConfigurationWarnings
    isExternal: true
  - name: (
  - name: )
- uid: Godot.Node.CallDeferredThreadGroup(Godot.StringName,Godot.Variant[])
  commentId: M:Godot.Node.CallDeferredThreadGroup(Godot.StringName,Godot.Variant[])
  parent: Godot.Node
  isExternal: true
  name: CallDeferredThreadGroup(StringName, params Variant[])
  nameWithType: Node.CallDeferredThreadGroup(StringName, params Variant[])
  fullName: Godot.Node.CallDeferredThreadGroup(Godot.StringName, params Godot.Variant[])
  nameWithType.vb: Node.CallDeferredThreadGroup(StringName, ParamArray Variant())
  fullName.vb: Godot.Node.CallDeferredThreadGroup(Godot.StringName, ParamArray Godot.Variant())
  name.vb: CallDeferredThreadGroup(StringName, ParamArray Variant())
  spec.csharp:
  - uid: Godot.Node.CallDeferredThreadGroup(Godot.StringName,Godot.Variant[])
    name: CallDeferredThreadGroup
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: ','
  - name: " "
  - name: params
  - name: " "
  - uid: Godot.Variant
    name: Variant
    isExternal: true
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: Godot.Node.CallDeferredThreadGroup(Godot.StringName,Godot.Variant[])
    name: CallDeferredThreadGroup
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: ','
  - name: " "
  - name: ParamArray
  - name: " "
  - uid: Godot.Variant
    name: Variant
    isExternal: true
  - name: (
  - name: )
  - name: )
- uid: Godot.Node.SetDeferredThreadGroup(Godot.StringName,Godot.Variant)
  commentId: M:Godot.Node.SetDeferredThreadGroup(Godot.StringName,Godot.Variant)
  parent: Godot.Node
  isExternal: true
  name: SetDeferredThreadGroup(StringName, Variant)
  nameWithType: Node.SetDeferredThreadGroup(StringName, Variant)
  fullName: Godot.Node.SetDeferredThreadGroup(Godot.StringName, Godot.Variant)
  spec.csharp:
  - uid: Godot.Node.SetDeferredThreadGroup(Godot.StringName,Godot.Variant)
    name: SetDeferredThreadGroup
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.Variant
    name: Variant
    isExternal: true
  - name: )
  spec.vb:
  - uid: Godot.Node.SetDeferredThreadGroup(Godot.StringName,Godot.Variant)
    name: SetDeferredThreadGroup
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.Variant
    name: Variant
    isExternal: true
  - name: )
- uid: Godot.Node.NotifyDeferredThreadGroup(System.Int32)
  commentId: M:Godot.Node.NotifyDeferredThreadGroup(System.Int32)
  parent: Godot.Node
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: NotifyDeferredThreadGroup(int)
  nameWithType: Node.NotifyDeferredThreadGroup(int)
  fullName: Godot.Node.NotifyDeferredThreadGroup(int)
  nameWithType.vb: Node.NotifyDeferredThreadGroup(Integer)
  fullName.vb: Godot.Node.NotifyDeferredThreadGroup(Integer)
  name.vb: NotifyDeferredThreadGroup(Integer)
  spec.csharp:
  - uid: Godot.Node.NotifyDeferredThreadGroup(System.Int32)
    name: NotifyDeferredThreadGroup
    isExternal: true
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: Godot.Node.NotifyDeferredThreadGroup(System.Int32)
    name: NotifyDeferredThreadGroup
    isExternal: true
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: Godot.Node.CallThreadSafe(Godot.StringName,Godot.Variant[])
  commentId: M:Godot.Node.CallThreadSafe(Godot.StringName,Godot.Variant[])
  parent: Godot.Node
  isExternal: true
  name: CallThreadSafe(StringName, params Variant[])
  nameWithType: Node.CallThreadSafe(StringName, params Variant[])
  fullName: Godot.Node.CallThreadSafe(Godot.StringName, params Godot.Variant[])
  nameWithType.vb: Node.CallThreadSafe(StringName, ParamArray Variant())
  fullName.vb: Godot.Node.CallThreadSafe(Godot.StringName, ParamArray Godot.Variant())
  name.vb: CallThreadSafe(StringName, ParamArray Variant())
  spec.csharp:
  - uid: Godot.Node.CallThreadSafe(Godot.StringName,Godot.Variant[])
    name: CallThreadSafe
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: ','
  - name: " "
  - name: params
  - name: " "
  - uid: Godot.Variant
    name: Variant
    isExternal: true
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: Godot.Node.CallThreadSafe(Godot.StringName,Godot.Variant[])
    name: CallThreadSafe
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: ','
  - name: " "
  - name: ParamArray
  - name: " "
  - uid: Godot.Variant
    name: Variant
    isExternal: true
  - name: (
  - name: )
  - name: )
- uid: Godot.Node.SetThreadSafe(Godot.StringName,Godot.Variant)
  commentId: M:Godot.Node.SetThreadSafe(Godot.StringName,Godot.Variant)
  parent: Godot.Node
  isExternal: true
  name: SetThreadSafe(StringName, Variant)
  nameWithType: Node.SetThreadSafe(StringName, Variant)
  fullName: Godot.Node.SetThreadSafe(Godot.StringName, Godot.Variant)
  spec.csharp:
  - uid: Godot.Node.SetThreadSafe(Godot.StringName,Godot.Variant)
    name: SetThreadSafe
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.Variant
    name: Variant
    isExternal: true
  - name: )
  spec.vb:
  - uid: Godot.Node.SetThreadSafe(Godot.StringName,Godot.Variant)
    name: SetThreadSafe
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.Variant
    name: Variant
    isExternal: true
  - name: )
- uid: Godot.Node.NotifyThreadSafe(System.Int32)
  commentId: M:Godot.Node.NotifyThreadSafe(System.Int32)
  parent: Godot.Node
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: NotifyThreadSafe(int)
  nameWithType: Node.NotifyThreadSafe(int)
  fullName: Godot.Node.NotifyThreadSafe(int)
  nameWithType.vb: Node.NotifyThreadSafe(Integer)
  fullName.vb: Godot.Node.NotifyThreadSafe(Integer)
  name.vb: NotifyThreadSafe(Integer)
  spec.csharp:
  - uid: Godot.Node.NotifyThreadSafe(System.Int32)
    name: NotifyThreadSafe
    isExternal: true
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: Godot.Node.NotifyThreadSafe(System.Int32)
    name: NotifyThreadSafe
    isExternal: true
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: Godot.Node.Name
  commentId: P:Godot.Node.Name
  parent: Godot.Node
  isExternal: true
  name: Name
  nameWithType: Node.Name
  fullName: Godot.Node.Name
- uid: Godot.Node.UniqueNameInOwner
  commentId: P:Godot.Node.UniqueNameInOwner
  parent: Godot.Node
  isExternal: true
  name: UniqueNameInOwner
  nameWithType: Node.UniqueNameInOwner
  fullName: Godot.Node.UniqueNameInOwner
- uid: Godot.Node.SceneFilePath
  commentId: P:Godot.Node.SceneFilePath
  parent: Godot.Node
  isExternal: true
  name: SceneFilePath
  nameWithType: Node.SceneFilePath
  fullName: Godot.Node.SceneFilePath
- uid: Godot.Node.Owner
  commentId: P:Godot.Node.Owner
  parent: Godot.Node
  isExternal: true
  name: Owner
  nameWithType: Node.Owner
  fullName: Godot.Node.Owner
- uid: Godot.Node.Multiplayer
  commentId: P:Godot.Node.Multiplayer
  parent: Godot.Node
  isExternal: true
  name: Multiplayer
  nameWithType: Node.Multiplayer
  fullName: Godot.Node.Multiplayer
- uid: Godot.Node.ProcessMode
  commentId: P:Godot.Node.ProcessMode
  parent: Godot.Node
  isExternal: true
  name: ProcessMode
  nameWithType: Node.ProcessMode
  fullName: Godot.Node.ProcessMode
- uid: Godot.Node.ProcessPriority
  commentId: P:Godot.Node.ProcessPriority
  parent: Godot.Node
  isExternal: true
  name: ProcessPriority
  nameWithType: Node.ProcessPriority
  fullName: Godot.Node.ProcessPriority
- uid: Godot.Node.ProcessPhysicsPriority
  commentId: P:Godot.Node.ProcessPhysicsPriority
  parent: Godot.Node
  isExternal: true
  name: ProcessPhysicsPriority
  nameWithType: Node.ProcessPhysicsPriority
  fullName: Godot.Node.ProcessPhysicsPriority
- uid: Godot.Node.ProcessThreadGroup
  commentId: P:Godot.Node.ProcessThreadGroup
  parent: Godot.Node
  isExternal: true
  name: ProcessThreadGroup
  nameWithType: Node.ProcessThreadGroup
  fullName: Godot.Node.ProcessThreadGroup
- uid: Godot.Node.ProcessThreadGroupOrder
  commentId: P:Godot.Node.ProcessThreadGroupOrder
  parent: Godot.Node
  isExternal: true
  name: ProcessThreadGroupOrder
  nameWithType: Node.ProcessThreadGroupOrder
  fullName: Godot.Node.ProcessThreadGroupOrder
- uid: Godot.Node.ProcessThreadMessages
  commentId: P:Godot.Node.ProcessThreadMessages
  parent: Godot.Node
  isExternal: true
  name: ProcessThreadMessages
  nameWithType: Node.ProcessThreadMessages
  fullName: Godot.Node.ProcessThreadMessages
- uid: Godot.Node.PhysicsInterpolationMode
  commentId: P:Godot.Node.PhysicsInterpolationMode
  parent: Godot.Node
  isExternal: true
  name: PhysicsInterpolationMode
  nameWithType: Node.PhysicsInterpolationMode
  fullName: Godot.Node.PhysicsInterpolationMode
- uid: Godot.Node.AutoTranslateMode
  commentId: P:Godot.Node.AutoTranslateMode
  parent: Godot.Node
  isExternal: true
  name: AutoTranslateMode
  nameWithType: Node.AutoTranslateMode
  fullName: Godot.Node.AutoTranslateMode
- uid: Godot.Node.EditorDescription
  commentId: P:Godot.Node.EditorDescription
  parent: Godot.Node
  isExternal: true
  name: EditorDescription
  nameWithType: Node.EditorDescription
  fullName: Godot.Node.EditorDescription
- uid: Godot.Node.Ready
  commentId: E:Godot.Node.Ready
  parent: Godot.Node
  isExternal: true
  name: Ready
  nameWithType: Node.Ready
  fullName: Godot.Node.Ready
- uid: Godot.Node.Renamed
  commentId: E:Godot.Node.Renamed
  parent: Godot.Node
  isExternal: true
  name: Renamed
  nameWithType: Node.Renamed
  fullName: Godot.Node.Renamed
- uid: Godot.Node.TreeEntered
  commentId: E:Godot.Node.TreeEntered
  parent: Godot.Node
  isExternal: true
  name: TreeEntered
  nameWithType: Node.TreeEntered
  fullName: Godot.Node.TreeEntered
- uid: Godot.Node.TreeExiting
  commentId: E:Godot.Node.TreeExiting
  parent: Godot.Node
  isExternal: true
  name: TreeExiting
  nameWithType: Node.TreeExiting
  fullName: Godot.Node.TreeExiting
- uid: Godot.Node.TreeExited
  commentId: E:Godot.Node.TreeExited
  parent: Godot.Node
  isExternal: true
  name: TreeExited
  nameWithType: Node.TreeExited
  fullName: Godot.Node.TreeExited
- uid: Godot.Node.ChildEnteredTree
  commentId: E:Godot.Node.ChildEnteredTree
  parent: Godot.Node
  isExternal: true
  name: ChildEnteredTree
  nameWithType: Node.ChildEnteredTree
  fullName: Godot.Node.ChildEnteredTree
- uid: Godot.Node.ChildExitingTree
  commentId: E:Godot.Node.ChildExitingTree
  parent: Godot.Node
  isExternal: true
  name: ChildExitingTree
  nameWithType: Node.ChildExitingTree
  fullName: Godot.Node.ChildExitingTree
- uid: Godot.Node.ChildOrderChanged
  commentId: E:Godot.Node.ChildOrderChanged
  parent: Godot.Node
  isExternal: true
  name: ChildOrderChanged
  nameWithType: Node.ChildOrderChanged
  fullName: Godot.Node.ChildOrderChanged
- uid: Godot.Node.ReplacingBy
  commentId: E:Godot.Node.ReplacingBy
  parent: Godot.Node
  isExternal: true
  name: ReplacingBy
  nameWithType: Node.ReplacingBy
  fullName: Godot.Node.ReplacingBy
- uid: Godot.Node.EditorDescriptionChanged
  commentId: E:Godot.Node.EditorDescriptionChanged
  parent: Godot.Node
  isExternal: true
  name: EditorDescriptionChanged
  nameWithType: Node.EditorDescriptionChanged
  fullName: Godot.Node.EditorDescriptionChanged
- uid: Godot.GodotObject.NotificationPostinitialize
  commentId: F:Godot.GodotObject.NotificationPostinitialize
  parent: Godot.GodotObject
  isExternal: true
  name: NotificationPostinitialize
  nameWithType: GodotObject.NotificationPostinitialize
  fullName: Godot.GodotObject.NotificationPostinitialize
- uid: Godot.GodotObject.NotificationPredelete
  commentId: F:Godot.GodotObject.NotificationPredelete
  parent: Godot.GodotObject
  isExternal: true
  name: NotificationPredelete
  nameWithType: GodotObject.NotificationPredelete
  fullName: Godot.GodotObject.NotificationPredelete
- uid: Godot.GodotObject.NotificationExtensionReloaded
  commentId: F:Godot.GodotObject.NotificationExtensionReloaded
  parent: Godot.GodotObject
  isExternal: true
  name: NotificationExtensionReloaded
  nameWithType: GodotObject.NotificationExtensionReloaded
  fullName: Godot.GodotObject.NotificationExtensionReloaded
- uid: Godot.GodotObject.InstanceFromId(System.UInt64)
  commentId: M:Godot.GodotObject.InstanceFromId(System.UInt64)
  parent: Godot.GodotObject
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.uint64
  name: InstanceFromId(ulong)
  nameWithType: GodotObject.InstanceFromId(ulong)
  fullName: Godot.GodotObject.InstanceFromId(ulong)
  nameWithType.vb: GodotObject.InstanceFromId(ULong)
  fullName.vb: Godot.GodotObject.InstanceFromId(ULong)
  name.vb: InstanceFromId(ULong)
  spec.csharp:
  - uid: Godot.GodotObject.InstanceFromId(System.UInt64)
    name: InstanceFromId
    isExternal: true
  - name: (
  - uid: System.UInt64
    name: ulong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: )
  spec.vb:
  - uid: Godot.GodotObject.InstanceFromId(System.UInt64)
    name: InstanceFromId
    isExternal: true
  - name: (
  - uid: System.UInt64
    name: ULong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: )
- uid: Godot.GodotObject.IsInstanceIdValid(System.UInt64)
  commentId: M:Godot.GodotObject.IsInstanceIdValid(System.UInt64)
  parent: Godot.GodotObject
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.uint64
  name: IsInstanceIdValid(ulong)
  nameWithType: GodotObject.IsInstanceIdValid(ulong)
  fullName: Godot.GodotObject.IsInstanceIdValid(ulong)
  nameWithType.vb: GodotObject.IsInstanceIdValid(ULong)
  fullName.vb: Godot.GodotObject.IsInstanceIdValid(ULong)
  name.vb: IsInstanceIdValid(ULong)
  spec.csharp:
  - uid: Godot.GodotObject.IsInstanceIdValid(System.UInt64)
    name: IsInstanceIdValid
    isExternal: true
  - name: (
  - uid: System.UInt64
    name: ulong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: )
  spec.vb:
  - uid: Godot.GodotObject.IsInstanceIdValid(System.UInt64)
    name: IsInstanceIdValid
    isExternal: true
  - name: (
  - uid: System.UInt64
    name: ULong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: )
- uid: Godot.GodotObject.IsInstanceValid(Godot.GodotObject)
  commentId: M:Godot.GodotObject.IsInstanceValid(Godot.GodotObject)
  parent: Godot.GodotObject
  isExternal: true
  name: IsInstanceValid(GodotObject)
  nameWithType: GodotObject.IsInstanceValid(GodotObject)
  fullName: Godot.GodotObject.IsInstanceValid(Godot.GodotObject)
  spec.csharp:
  - uid: Godot.GodotObject.IsInstanceValid(Godot.GodotObject)
    name: IsInstanceValid
    isExternal: true
  - name: (
  - uid: Godot.GodotObject
    name: GodotObject
    isExternal: true
  - name: )
  spec.vb:
  - uid: Godot.GodotObject.IsInstanceValid(Godot.GodotObject)
    name: IsInstanceValid
    isExternal: true
  - name: (
  - uid: Godot.GodotObject
    name: GodotObject
    isExternal: true
  - name: )
- uid: Godot.GodotObject.WeakRef(Godot.GodotObject)
  commentId: M:Godot.GodotObject.WeakRef(Godot.GodotObject)
  parent: Godot.GodotObject
  isExternal: true
  name: WeakRef(GodotObject)
  nameWithType: GodotObject.WeakRef(GodotObject)
  fullName: Godot.GodotObject.WeakRef(Godot.GodotObject)
  spec.csharp:
  - uid: Godot.GodotObject.WeakRef(Godot.GodotObject)
    name: WeakRef
    isExternal: true
  - name: (
  - uid: Godot.GodotObject
    name: GodotObject
    isExternal: true
  - name: )
  spec.vb:
  - uid: Godot.GodotObject.WeakRef(Godot.GodotObject)
    name: WeakRef
    isExternal: true
  - name: (
  - uid: Godot.GodotObject
    name: GodotObject
    isExternal: true
  - name: )
- uid: Godot.GodotObject.Dispose
  commentId: M:Godot.GodotObject.Dispose
  parent: Godot.GodotObject
  isExternal: true
  name: Dispose()
  nameWithType: GodotObject.Dispose()
  fullName: Godot.GodotObject.Dispose()
  spec.csharp:
  - uid: Godot.GodotObject.Dispose
    name: Dispose
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Godot.GodotObject.Dispose
    name: Dispose
    isExternal: true
  - name: (
  - name: )
- uid: Godot.GodotObject.Dispose(System.Boolean)
  commentId: M:Godot.GodotObject.Dispose(System.Boolean)
  parent: Godot.GodotObject
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: Dispose(bool)
  nameWithType: GodotObject.Dispose(bool)
  fullName: Godot.GodotObject.Dispose(bool)
  nameWithType.vb: GodotObject.Dispose(Boolean)
  fullName.vb: Godot.GodotObject.Dispose(Boolean)
  name.vb: Dispose(Boolean)
  spec.csharp:
  - uid: Godot.GodotObject.Dispose(System.Boolean)
    name: Dispose
    isExternal: true
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Godot.GodotObject.Dispose(System.Boolean)
    name: Dispose
    isExternal: true
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Godot.GodotObject.ToString
  commentId: M:Godot.GodotObject.ToString
  parent: Godot.GodotObject
  isExternal: true
  name: ToString()
  nameWithType: GodotObject.ToString()
  fullName: Godot.GodotObject.ToString()
  spec.csharp:
  - uid: Godot.GodotObject.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Godot.GodotObject.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
- uid: Godot.GodotObject.ToSignal(Godot.GodotObject,Godot.StringName)
  commentId: M:Godot.GodotObject.ToSignal(Godot.GodotObject,Godot.StringName)
  parent: Godot.GodotObject
  isExternal: true
  name: ToSignal(GodotObject, StringName)
  nameWithType: GodotObject.ToSignal(GodotObject, StringName)
  fullName: Godot.GodotObject.ToSignal(Godot.GodotObject, Godot.StringName)
  spec.csharp:
  - uid: Godot.GodotObject.ToSignal(Godot.GodotObject,Godot.StringName)
    name: ToSignal
    isExternal: true
  - name: (
  - uid: Godot.GodotObject
    name: GodotObject
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: )
  spec.vb:
  - uid: Godot.GodotObject.ToSignal(Godot.GodotObject,Godot.StringName)
    name: ToSignal
    isExternal: true
  - name: (
  - uid: Godot.GodotObject
    name: GodotObject
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: )
- uid: Godot.GodotObject._Get(Godot.StringName)
  commentId: M:Godot.GodotObject._Get(Godot.StringName)
  parent: Godot.GodotObject
  isExternal: true
  name: _Get(StringName)
  nameWithType: GodotObject._Get(StringName)
  fullName: Godot.GodotObject._Get(Godot.StringName)
  spec.csharp:
  - uid: Godot.GodotObject._Get(Godot.StringName)
    name: _Get
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: )
  spec.vb:
  - uid: Godot.GodotObject._Get(Godot.StringName)
    name: _Get
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: )
- uid: Godot.GodotObject._GetPropertyList
  commentId: M:Godot.GodotObject._GetPropertyList
  parent: Godot.GodotObject
  isExternal: true
  name: _GetPropertyList()
  nameWithType: GodotObject._GetPropertyList()
  fullName: Godot.GodotObject._GetPropertyList()
  spec.csharp:
  - uid: Godot.GodotObject._GetPropertyList
    name: _GetPropertyList
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Godot.GodotObject._GetPropertyList
    name: _GetPropertyList
    isExternal: true
  - name: (
  - name: )
- uid: Godot.GodotObject._Notification(System.Int32)
  commentId: M:Godot.GodotObject._Notification(System.Int32)
  parent: Godot.GodotObject
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: _Notification(int)
  nameWithType: GodotObject._Notification(int)
  fullName: Godot.GodotObject._Notification(int)
  nameWithType.vb: GodotObject._Notification(Integer)
  fullName.vb: Godot.GodotObject._Notification(Integer)
  name.vb: _Notification(Integer)
  spec.csharp:
  - uid: Godot.GodotObject._Notification(System.Int32)
    name: _Notification
    isExternal: true
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: Godot.GodotObject._Notification(System.Int32)
    name: _Notification
    isExternal: true
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: Godot.GodotObject._PropertyCanRevert(Godot.StringName)
  commentId: M:Godot.GodotObject._PropertyCanRevert(Godot.StringName)
  parent: Godot.GodotObject
  isExternal: true
  name: _PropertyCanRevert(StringName)
  nameWithType: GodotObject._PropertyCanRevert(StringName)
  fullName: Godot.GodotObject._PropertyCanRevert(Godot.StringName)
  spec.csharp:
  - uid: Godot.GodotObject._PropertyCanRevert(Godot.StringName)
    name: _PropertyCanRevert
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: )
  spec.vb:
  - uid: Godot.GodotObject._PropertyCanRevert(Godot.StringName)
    name: _PropertyCanRevert
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: )
- uid: Godot.GodotObject._PropertyGetRevert(Godot.StringName)
  commentId: M:Godot.GodotObject._PropertyGetRevert(Godot.StringName)
  parent: Godot.GodotObject
  isExternal: true
  name: _PropertyGetRevert(StringName)
  nameWithType: GodotObject._PropertyGetRevert(StringName)
  fullName: Godot.GodotObject._PropertyGetRevert(Godot.StringName)
  spec.csharp:
  - uid: Godot.GodotObject._PropertyGetRevert(Godot.StringName)
    name: _PropertyGetRevert
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: )
  spec.vb:
  - uid: Godot.GodotObject._PropertyGetRevert(Godot.StringName)
    name: _PropertyGetRevert
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: )
- uid: Godot.GodotObject._Set(Godot.StringName,Godot.Variant)
  commentId: M:Godot.GodotObject._Set(Godot.StringName,Godot.Variant)
  parent: Godot.GodotObject
  isExternal: true
  name: _Set(StringName, Variant)
  nameWithType: GodotObject._Set(StringName, Variant)
  fullName: Godot.GodotObject._Set(Godot.StringName, Godot.Variant)
  spec.csharp:
  - uid: Godot.GodotObject._Set(Godot.StringName,Godot.Variant)
    name: _Set
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.Variant
    name: Variant
    isExternal: true
  - name: )
  spec.vb:
  - uid: Godot.GodotObject._Set(Godot.StringName,Godot.Variant)
    name: _Set
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.Variant
    name: Variant
    isExternal: true
  - name: )
- uid: Godot.GodotObject._ValidateProperty(Godot.Collections.Dictionary)
  commentId: M:Godot.GodotObject._ValidateProperty(Godot.Collections.Dictionary)
  parent: Godot.GodotObject
  isExternal: true
  name: _ValidateProperty(Dictionary)
  nameWithType: GodotObject._ValidateProperty(Dictionary)
  fullName: Godot.GodotObject._ValidateProperty(Godot.Collections.Dictionary)
  spec.csharp:
  - uid: Godot.GodotObject._ValidateProperty(Godot.Collections.Dictionary)
    name: _ValidateProperty
    isExternal: true
  - name: (
  - uid: Godot.Collections.Dictionary
    name: Dictionary
    isExternal: true
  - name: )
  spec.vb:
  - uid: Godot.GodotObject._ValidateProperty(Godot.Collections.Dictionary)
    name: _ValidateProperty
    isExternal: true
  - name: (
  - uid: Godot.Collections.Dictionary
    name: Dictionary
    isExternal: true
  - name: )
- uid: Godot.GodotObject.Free
  commentId: M:Godot.GodotObject.Free
  parent: Godot.GodotObject
  isExternal: true
  name: Free()
  nameWithType: GodotObject.Free()
  fullName: Godot.GodotObject.Free()
  spec.csharp:
  - uid: Godot.GodotObject.Free
    name: Free
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Godot.GodotObject.Free
    name: Free
    isExternal: true
  - name: (
  - name: )
- uid: Godot.GodotObject.GetClass
  commentId: M:Godot.GodotObject.GetClass
  parent: Godot.GodotObject
  isExternal: true
  name: GetClass()
  nameWithType: GodotObject.GetClass()
  fullName: Godot.GodotObject.GetClass()
  spec.csharp:
  - uid: Godot.GodotObject.GetClass
    name: GetClass
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Godot.GodotObject.GetClass
    name: GetClass
    isExternal: true
  - name: (
  - name: )
- uid: Godot.GodotObject.IsClass(System.String)
  commentId: M:Godot.GodotObject.IsClass(System.String)
  parent: Godot.GodotObject
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: IsClass(string)
  nameWithType: GodotObject.IsClass(string)
  fullName: Godot.GodotObject.IsClass(string)
  nameWithType.vb: GodotObject.IsClass(String)
  fullName.vb: Godot.GodotObject.IsClass(String)
  name.vb: IsClass(String)
  spec.csharp:
  - uid: Godot.GodotObject.IsClass(System.String)
    name: IsClass
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Godot.GodotObject.IsClass(System.String)
    name: IsClass
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Godot.GodotObject.Set(Godot.StringName,Godot.Variant)
  commentId: M:Godot.GodotObject.Set(Godot.StringName,Godot.Variant)
  parent: Godot.GodotObject
  isExternal: true
  name: Set(StringName, Variant)
  nameWithType: GodotObject.Set(StringName, Variant)
  fullName: Godot.GodotObject.Set(Godot.StringName, Godot.Variant)
  spec.csharp:
  - uid: Godot.GodotObject.Set(Godot.StringName,Godot.Variant)
    name: Set
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.Variant
    name: Variant
    isExternal: true
  - name: )
  spec.vb:
  - uid: Godot.GodotObject.Set(Godot.StringName,Godot.Variant)
    name: Set
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.Variant
    name: Variant
    isExternal: true
  - name: )
- uid: Godot.GodotObject.Get(Godot.StringName)
  commentId: M:Godot.GodotObject.Get(Godot.StringName)
  parent: Godot.GodotObject
  isExternal: true
  name: Get(StringName)
  nameWithType: GodotObject.Get(StringName)
  fullName: Godot.GodotObject.Get(Godot.StringName)
  spec.csharp:
  - uid: Godot.GodotObject.Get(Godot.StringName)
    name: Get
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: )
  spec.vb:
  - uid: Godot.GodotObject.Get(Godot.StringName)
    name: Get
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: )
- uid: Godot.GodotObject.SetIndexed(Godot.NodePath,Godot.Variant)
  commentId: M:Godot.GodotObject.SetIndexed(Godot.NodePath,Godot.Variant)
  parent: Godot.GodotObject
  isExternal: true
  name: SetIndexed(NodePath, Variant)
  nameWithType: GodotObject.SetIndexed(NodePath, Variant)
  fullName: Godot.GodotObject.SetIndexed(Godot.NodePath, Godot.Variant)
  spec.csharp:
  - uid: Godot.GodotObject.SetIndexed(Godot.NodePath,Godot.Variant)
    name: SetIndexed
    isExternal: true
  - name: (
  - uid: Godot.NodePath
    name: NodePath
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.Variant
    name: Variant
    isExternal: true
  - name: )
  spec.vb:
  - uid: Godot.GodotObject.SetIndexed(Godot.NodePath,Godot.Variant)
    name: SetIndexed
    isExternal: true
  - name: (
  - uid: Godot.NodePath
    name: NodePath
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.Variant
    name: Variant
    isExternal: true
  - name: )
- uid: Godot.GodotObject.GetIndexed(Godot.NodePath)
  commentId: M:Godot.GodotObject.GetIndexed(Godot.NodePath)
  parent: Godot.GodotObject
  isExternal: true
  name: GetIndexed(NodePath)
  nameWithType: GodotObject.GetIndexed(NodePath)
  fullName: Godot.GodotObject.GetIndexed(Godot.NodePath)
  spec.csharp:
  - uid: Godot.GodotObject.GetIndexed(Godot.NodePath)
    name: GetIndexed
    isExternal: true
  - name: (
  - uid: Godot.NodePath
    name: NodePath
    isExternal: true
  - name: )
  spec.vb:
  - uid: Godot.GodotObject.GetIndexed(Godot.NodePath)
    name: GetIndexed
    isExternal: true
  - name: (
  - uid: Godot.NodePath
    name: NodePath
    isExternal: true
  - name: )
- uid: Godot.GodotObject.GetPropertyList
  commentId: M:Godot.GodotObject.GetPropertyList
  parent: Godot.GodotObject
  isExternal: true
  name: GetPropertyList()
  nameWithType: GodotObject.GetPropertyList()
  fullName: Godot.GodotObject.GetPropertyList()
  spec.csharp:
  - uid: Godot.GodotObject.GetPropertyList
    name: GetPropertyList
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Godot.GodotObject.GetPropertyList
    name: GetPropertyList
    isExternal: true
  - name: (
  - name: )
- uid: Godot.GodotObject.GetMethodList
  commentId: M:Godot.GodotObject.GetMethodList
  parent: Godot.GodotObject
  isExternal: true
  name: GetMethodList()
  nameWithType: GodotObject.GetMethodList()
  fullName: Godot.GodotObject.GetMethodList()
  spec.csharp:
  - uid: Godot.GodotObject.GetMethodList
    name: GetMethodList
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Godot.GodotObject.GetMethodList
    name: GetMethodList
    isExternal: true
  - name: (
  - name: )
- uid: Godot.GodotObject.PropertyCanRevert(Godot.StringName)
  commentId: M:Godot.GodotObject.PropertyCanRevert(Godot.StringName)
  parent: Godot.GodotObject
  isExternal: true
  name: PropertyCanRevert(StringName)
  nameWithType: GodotObject.PropertyCanRevert(StringName)
  fullName: Godot.GodotObject.PropertyCanRevert(Godot.StringName)
  spec.csharp:
  - uid: Godot.GodotObject.PropertyCanRevert(Godot.StringName)
    name: PropertyCanRevert
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: )
  spec.vb:
  - uid: Godot.GodotObject.PropertyCanRevert(Godot.StringName)
    name: PropertyCanRevert
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: )
- uid: Godot.GodotObject.PropertyGetRevert(Godot.StringName)
  commentId: M:Godot.GodotObject.PropertyGetRevert(Godot.StringName)
  parent: Godot.GodotObject
  isExternal: true
  name: PropertyGetRevert(StringName)
  nameWithType: GodotObject.PropertyGetRevert(StringName)
  fullName: Godot.GodotObject.PropertyGetRevert(Godot.StringName)
  spec.csharp:
  - uid: Godot.GodotObject.PropertyGetRevert(Godot.StringName)
    name: PropertyGetRevert
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: )
  spec.vb:
  - uid: Godot.GodotObject.PropertyGetRevert(Godot.StringName)
    name: PropertyGetRevert
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: )
- uid: Godot.GodotObject.Notification(System.Int32,System.Boolean)
  commentId: M:Godot.GodotObject.Notification(System.Int32,System.Boolean)
  parent: Godot.GodotObject
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: Notification(int, bool)
  nameWithType: GodotObject.Notification(int, bool)
  fullName: Godot.GodotObject.Notification(int, bool)
  nameWithType.vb: GodotObject.Notification(Integer, Boolean)
  fullName.vb: Godot.GodotObject.Notification(Integer, Boolean)
  name.vb: Notification(Integer, Boolean)
  spec.csharp:
  - uid: Godot.GodotObject.Notification(System.Int32,System.Boolean)
    name: Notification
    isExternal: true
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Godot.GodotObject.Notification(System.Int32,System.Boolean)
    name: Notification
    isExternal: true
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Godot.GodotObject.GetInstanceId
  commentId: M:Godot.GodotObject.GetInstanceId
  parent: Godot.GodotObject
  isExternal: true
  name: GetInstanceId()
  nameWithType: GodotObject.GetInstanceId()
  fullName: Godot.GodotObject.GetInstanceId()
  spec.csharp:
  - uid: Godot.GodotObject.GetInstanceId
    name: GetInstanceId
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Godot.GodotObject.GetInstanceId
    name: GetInstanceId
    isExternal: true
  - name: (
  - name: )
- uid: Godot.GodotObject.SetScript(Godot.Variant)
  commentId: M:Godot.GodotObject.SetScript(Godot.Variant)
  parent: Godot.GodotObject
  isExternal: true
  name: SetScript(Variant)
  nameWithType: GodotObject.SetScript(Variant)
  fullName: Godot.GodotObject.SetScript(Godot.Variant)
  spec.csharp:
  - uid: Godot.GodotObject.SetScript(Godot.Variant)
    name: SetScript
    isExternal: true
  - name: (
  - uid: Godot.Variant
    name: Variant
    isExternal: true
  - name: )
  spec.vb:
  - uid: Godot.GodotObject.SetScript(Godot.Variant)
    name: SetScript
    isExternal: true
  - name: (
  - uid: Godot.Variant
    name: Variant
    isExternal: true
  - name: )
- uid: Godot.GodotObject.GetScript
  commentId: M:Godot.GodotObject.GetScript
  parent: Godot.GodotObject
  isExternal: true
  name: GetScript()
  nameWithType: GodotObject.GetScript()
  fullName: Godot.GodotObject.GetScript()
  spec.csharp:
  - uid: Godot.GodotObject.GetScript
    name: GetScript
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Godot.GodotObject.GetScript
    name: GetScript
    isExternal: true
  - name: (
  - name: )
- uid: Godot.GodotObject.SetMeta(Godot.StringName,Godot.Variant)
  commentId: M:Godot.GodotObject.SetMeta(Godot.StringName,Godot.Variant)
  parent: Godot.GodotObject
  isExternal: true
  name: SetMeta(StringName, Variant)
  nameWithType: GodotObject.SetMeta(StringName, Variant)
  fullName: Godot.GodotObject.SetMeta(Godot.StringName, Godot.Variant)
  spec.csharp:
  - uid: Godot.GodotObject.SetMeta(Godot.StringName,Godot.Variant)
    name: SetMeta
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.Variant
    name: Variant
    isExternal: true
  - name: )
  spec.vb:
  - uid: Godot.GodotObject.SetMeta(Godot.StringName,Godot.Variant)
    name: SetMeta
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.Variant
    name: Variant
    isExternal: true
  - name: )
- uid: Godot.GodotObject.RemoveMeta(Godot.StringName)
  commentId: M:Godot.GodotObject.RemoveMeta(Godot.StringName)
  parent: Godot.GodotObject
  isExternal: true
  name: RemoveMeta(StringName)
  nameWithType: GodotObject.RemoveMeta(StringName)
  fullName: Godot.GodotObject.RemoveMeta(Godot.StringName)
  spec.csharp:
  - uid: Godot.GodotObject.RemoveMeta(Godot.StringName)
    name: RemoveMeta
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: )
  spec.vb:
  - uid: Godot.GodotObject.RemoveMeta(Godot.StringName)
    name: RemoveMeta
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: )
- uid: Godot.GodotObject.GetMeta(Godot.StringName,Godot.Variant)
  commentId: M:Godot.GodotObject.GetMeta(Godot.StringName,Godot.Variant)
  parent: Godot.GodotObject
  isExternal: true
  name: GetMeta(StringName, Variant)
  nameWithType: GodotObject.GetMeta(StringName, Variant)
  fullName: Godot.GodotObject.GetMeta(Godot.StringName, Godot.Variant)
  spec.csharp:
  - uid: Godot.GodotObject.GetMeta(Godot.StringName,Godot.Variant)
    name: GetMeta
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.Variant
    name: Variant
    isExternal: true
  - name: )
  spec.vb:
  - uid: Godot.GodotObject.GetMeta(Godot.StringName,Godot.Variant)
    name: GetMeta
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.Variant
    name: Variant
    isExternal: true
  - name: )
- uid: Godot.GodotObject.HasMeta(Godot.StringName)
  commentId: M:Godot.GodotObject.HasMeta(Godot.StringName)
  parent: Godot.GodotObject
  isExternal: true
  name: HasMeta(StringName)
  nameWithType: GodotObject.HasMeta(StringName)
  fullName: Godot.GodotObject.HasMeta(Godot.StringName)
  spec.csharp:
  - uid: Godot.GodotObject.HasMeta(Godot.StringName)
    name: HasMeta
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: )
  spec.vb:
  - uid: Godot.GodotObject.HasMeta(Godot.StringName)
    name: HasMeta
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: )
- uid: Godot.GodotObject.GetMetaList
  commentId: M:Godot.GodotObject.GetMetaList
  parent: Godot.GodotObject
  isExternal: true
  name: GetMetaList()
  nameWithType: GodotObject.GetMetaList()
  fullName: Godot.GodotObject.GetMetaList()
  spec.csharp:
  - uid: Godot.GodotObject.GetMetaList
    name: GetMetaList
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Godot.GodotObject.GetMetaList
    name: GetMetaList
    isExternal: true
  - name: (
  - name: )
- uid: Godot.GodotObject.AddUserSignal(System.String,Godot.Collections.Array)
  commentId: M:Godot.GodotObject.AddUserSignal(System.String,Godot.Collections.Array)
  parent: Godot.GodotObject
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: AddUserSignal(string, Array)
  nameWithType: GodotObject.AddUserSignal(string, Array)
  fullName: Godot.GodotObject.AddUserSignal(string, Godot.Collections.Array)
  nameWithType.vb: GodotObject.AddUserSignal(String, Array)
  fullName.vb: Godot.GodotObject.AddUserSignal(String, Godot.Collections.Array)
  name.vb: AddUserSignal(String, Array)
  spec.csharp:
  - uid: Godot.GodotObject.AddUserSignal(System.String,Godot.Collections.Array)
    name: AddUserSignal
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Godot.Collections.Array
    name: Array
    isExternal: true
  - name: )
  spec.vb:
  - uid: Godot.GodotObject.AddUserSignal(System.String,Godot.Collections.Array)
    name: AddUserSignal
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Godot.Collections.Array
    name: Array
    isExternal: true
  - name: )
- uid: Godot.GodotObject.HasUserSignal(Godot.StringName)
  commentId: M:Godot.GodotObject.HasUserSignal(Godot.StringName)
  parent: Godot.GodotObject
  isExternal: true
  name: HasUserSignal(StringName)
  nameWithType: GodotObject.HasUserSignal(StringName)
  fullName: Godot.GodotObject.HasUserSignal(Godot.StringName)
  spec.csharp:
  - uid: Godot.GodotObject.HasUserSignal(Godot.StringName)
    name: HasUserSignal
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: )
  spec.vb:
  - uid: Godot.GodotObject.HasUserSignal(Godot.StringName)
    name: HasUserSignal
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: )
- uid: Godot.GodotObject.RemoveUserSignal(Godot.StringName)
  commentId: M:Godot.GodotObject.RemoveUserSignal(Godot.StringName)
  parent: Godot.GodotObject
  isExternal: true
  name: RemoveUserSignal(StringName)
  nameWithType: GodotObject.RemoveUserSignal(StringName)
  fullName: Godot.GodotObject.RemoveUserSignal(Godot.StringName)
  spec.csharp:
  - uid: Godot.GodotObject.RemoveUserSignal(Godot.StringName)
    name: RemoveUserSignal
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: )
  spec.vb:
  - uid: Godot.GodotObject.RemoveUserSignal(Godot.StringName)
    name: RemoveUserSignal
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: )
- uid: Godot.GodotObject.EmitSignal(Godot.StringName,Godot.Variant[])
  commentId: M:Godot.GodotObject.EmitSignal(Godot.StringName,Godot.Variant[])
  parent: Godot.GodotObject
  isExternal: true
  name: EmitSignal(StringName, params Variant[])
  nameWithType: GodotObject.EmitSignal(StringName, params Variant[])
  fullName: Godot.GodotObject.EmitSignal(Godot.StringName, params Godot.Variant[])
  nameWithType.vb: GodotObject.EmitSignal(StringName, ParamArray Variant())
  fullName.vb: Godot.GodotObject.EmitSignal(Godot.StringName, ParamArray Godot.Variant())
  name.vb: EmitSignal(StringName, ParamArray Variant())
  spec.csharp:
  - uid: Godot.GodotObject.EmitSignal(Godot.StringName,Godot.Variant[])
    name: EmitSignal
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: ','
  - name: " "
  - name: params
  - name: " "
  - uid: Godot.Variant
    name: Variant
    isExternal: true
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: Godot.GodotObject.EmitSignal(Godot.StringName,Godot.Variant[])
    name: EmitSignal
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: ','
  - name: " "
  - name: ParamArray
  - name: " "
  - uid: Godot.Variant
    name: Variant
    isExternal: true
  - name: (
  - name: )
  - name: )
- uid: Godot.GodotObject.Call(Godot.StringName,Godot.Variant[])
  commentId: M:Godot.GodotObject.Call(Godot.StringName,Godot.Variant[])
  parent: Godot.GodotObject
  isExternal: true
  name: Call(StringName, params Variant[])
  nameWithType: GodotObject.Call(StringName, params Variant[])
  fullName: Godot.GodotObject.Call(Godot.StringName, params Godot.Variant[])
  nameWithType.vb: GodotObject.Call(StringName, ParamArray Variant())
  fullName.vb: Godot.GodotObject.Call(Godot.StringName, ParamArray Godot.Variant())
  name.vb: Call(StringName, ParamArray Variant())
  spec.csharp:
  - uid: Godot.GodotObject.Call(Godot.StringName,Godot.Variant[])
    name: Call
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: ','
  - name: " "
  - name: params
  - name: " "
  - uid: Godot.Variant
    name: Variant
    isExternal: true
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: Godot.GodotObject.Call(Godot.StringName,Godot.Variant[])
    name: Call
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: ','
  - name: " "
  - name: ParamArray
  - name: " "
  - uid: Godot.Variant
    name: Variant
    isExternal: true
  - name: (
  - name: )
  - name: )
- uid: Godot.GodotObject.CallDeferred(Godot.StringName,Godot.Variant[])
  commentId: M:Godot.GodotObject.CallDeferred(Godot.StringName,Godot.Variant[])
  parent: Godot.GodotObject
  isExternal: true
  name: CallDeferred(StringName, params Variant[])
  nameWithType: GodotObject.CallDeferred(StringName, params Variant[])
  fullName: Godot.GodotObject.CallDeferred(Godot.StringName, params Godot.Variant[])
  nameWithType.vb: GodotObject.CallDeferred(StringName, ParamArray Variant())
  fullName.vb: Godot.GodotObject.CallDeferred(Godot.StringName, ParamArray Godot.Variant())
  name.vb: CallDeferred(StringName, ParamArray Variant())
  spec.csharp:
  - uid: Godot.GodotObject.CallDeferred(Godot.StringName,Godot.Variant[])
    name: CallDeferred
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: ','
  - name: " "
  - name: params
  - name: " "
  - uid: Godot.Variant
    name: Variant
    isExternal: true
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: Godot.GodotObject.CallDeferred(Godot.StringName,Godot.Variant[])
    name: CallDeferred
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: ','
  - name: " "
  - name: ParamArray
  - name: " "
  - uid: Godot.Variant
    name: Variant
    isExternal: true
  - name: (
  - name: )
  - name: )
- uid: Godot.GodotObject.SetDeferred(Godot.StringName,Godot.Variant)
  commentId: M:Godot.GodotObject.SetDeferred(Godot.StringName,Godot.Variant)
  parent: Godot.GodotObject
  isExternal: true
  name: SetDeferred(StringName, Variant)
  nameWithType: GodotObject.SetDeferred(StringName, Variant)
  fullName: Godot.GodotObject.SetDeferred(Godot.StringName, Godot.Variant)
  spec.csharp:
  - uid: Godot.GodotObject.SetDeferred(Godot.StringName,Godot.Variant)
    name: SetDeferred
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.Variant
    name: Variant
    isExternal: true
  - name: )
  spec.vb:
  - uid: Godot.GodotObject.SetDeferred(Godot.StringName,Godot.Variant)
    name: SetDeferred
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.Variant
    name: Variant
    isExternal: true
  - name: )
- uid: Godot.GodotObject.Callv(Godot.StringName,Godot.Collections.Array)
  commentId: M:Godot.GodotObject.Callv(Godot.StringName,Godot.Collections.Array)
  parent: Godot.GodotObject
  isExternal: true
  name: Callv(StringName, Array)
  nameWithType: GodotObject.Callv(StringName, Array)
  fullName: Godot.GodotObject.Callv(Godot.StringName, Godot.Collections.Array)
  spec.csharp:
  - uid: Godot.GodotObject.Callv(Godot.StringName,Godot.Collections.Array)
    name: Callv
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.Collections.Array
    name: Array
    isExternal: true
  - name: )
  spec.vb:
  - uid: Godot.GodotObject.Callv(Godot.StringName,Godot.Collections.Array)
    name: Callv
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.Collections.Array
    name: Array
    isExternal: true
  - name: )
- uid: Godot.GodotObject.HasMethod(Godot.StringName)
  commentId: M:Godot.GodotObject.HasMethod(Godot.StringName)
  parent: Godot.GodotObject
  isExternal: true
  name: HasMethod(StringName)
  nameWithType: GodotObject.HasMethod(StringName)
  fullName: Godot.GodotObject.HasMethod(Godot.StringName)
  spec.csharp:
  - uid: Godot.GodotObject.HasMethod(Godot.StringName)
    name: HasMethod
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: )
  spec.vb:
  - uid: Godot.GodotObject.HasMethod(Godot.StringName)
    name: HasMethod
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: )
- uid: Godot.GodotObject.GetMethodArgumentCount(Godot.StringName)
  commentId: M:Godot.GodotObject.GetMethodArgumentCount(Godot.StringName)
  parent: Godot.GodotObject
  isExternal: true
  name: GetMethodArgumentCount(StringName)
  nameWithType: GodotObject.GetMethodArgumentCount(StringName)
  fullName: Godot.GodotObject.GetMethodArgumentCount(Godot.StringName)
  spec.csharp:
  - uid: Godot.GodotObject.GetMethodArgumentCount(Godot.StringName)
    name: GetMethodArgumentCount
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: )
  spec.vb:
  - uid: Godot.GodotObject.GetMethodArgumentCount(Godot.StringName)
    name: GetMethodArgumentCount
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: )
- uid: Godot.GodotObject.HasSignal(Godot.StringName)
  commentId: M:Godot.GodotObject.HasSignal(Godot.StringName)
  parent: Godot.GodotObject
  isExternal: true
  name: HasSignal(StringName)
  nameWithType: GodotObject.HasSignal(StringName)
  fullName: Godot.GodotObject.HasSignal(Godot.StringName)
  spec.csharp:
  - uid: Godot.GodotObject.HasSignal(Godot.StringName)
    name: HasSignal
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: )
  spec.vb:
  - uid: Godot.GodotObject.HasSignal(Godot.StringName)
    name: HasSignal
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: )
- uid: Godot.GodotObject.GetSignalList
  commentId: M:Godot.GodotObject.GetSignalList
  parent: Godot.GodotObject
  isExternal: true
  name: GetSignalList()
  nameWithType: GodotObject.GetSignalList()
  fullName: Godot.GodotObject.GetSignalList()
  spec.csharp:
  - uid: Godot.GodotObject.GetSignalList
    name: GetSignalList
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Godot.GodotObject.GetSignalList
    name: GetSignalList
    isExternal: true
  - name: (
  - name: )
- uid: Godot.GodotObject.GetSignalConnectionList(Godot.StringName)
  commentId: M:Godot.GodotObject.GetSignalConnectionList(Godot.StringName)
  parent: Godot.GodotObject
  isExternal: true
  name: GetSignalConnectionList(StringName)
  nameWithType: GodotObject.GetSignalConnectionList(StringName)
  fullName: Godot.GodotObject.GetSignalConnectionList(Godot.StringName)
  spec.csharp:
  - uid: Godot.GodotObject.GetSignalConnectionList(Godot.StringName)
    name: GetSignalConnectionList
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: )
  spec.vb:
  - uid: Godot.GodotObject.GetSignalConnectionList(Godot.StringName)
    name: GetSignalConnectionList
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: )
- uid: Godot.GodotObject.GetIncomingConnections
  commentId: M:Godot.GodotObject.GetIncomingConnections
  parent: Godot.GodotObject
  isExternal: true
  name: GetIncomingConnections()
  nameWithType: GodotObject.GetIncomingConnections()
  fullName: Godot.GodotObject.GetIncomingConnections()
  spec.csharp:
  - uid: Godot.GodotObject.GetIncomingConnections
    name: GetIncomingConnections
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Godot.GodotObject.GetIncomingConnections
    name: GetIncomingConnections
    isExternal: true
  - name: (
  - name: )
- uid: Godot.GodotObject.Connect(Godot.StringName,Godot.Callable,System.UInt32)
  commentId: M:Godot.GodotObject.Connect(Godot.StringName,Godot.Callable,System.UInt32)
  parent: Godot.GodotObject
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.uint32
  name: Connect(StringName, Callable, uint)
  nameWithType: GodotObject.Connect(StringName, Callable, uint)
  fullName: Godot.GodotObject.Connect(Godot.StringName, Godot.Callable, uint)
  nameWithType.vb: GodotObject.Connect(StringName, Callable, UInteger)
  fullName.vb: Godot.GodotObject.Connect(Godot.StringName, Godot.Callable, UInteger)
  name.vb: Connect(StringName, Callable, UInteger)
  spec.csharp:
  - uid: Godot.GodotObject.Connect(Godot.StringName,Godot.Callable,System.UInt32)
    name: Connect
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.Callable
    name: Callable
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.UInt32
    name: uint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: )
  spec.vb:
  - uid: Godot.GodotObject.Connect(Godot.StringName,Godot.Callable,System.UInt32)
    name: Connect
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.Callable
    name: Callable
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.UInt32
    name: UInteger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: )
- uid: Godot.GodotObject.Disconnect(Godot.StringName,Godot.Callable)
  commentId: M:Godot.GodotObject.Disconnect(Godot.StringName,Godot.Callable)
  parent: Godot.GodotObject
  isExternal: true
  name: Disconnect(StringName, Callable)
  nameWithType: GodotObject.Disconnect(StringName, Callable)
  fullName: Godot.GodotObject.Disconnect(Godot.StringName, Godot.Callable)
  spec.csharp:
  - uid: Godot.GodotObject.Disconnect(Godot.StringName,Godot.Callable)
    name: Disconnect
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.Callable
    name: Callable
    isExternal: true
  - name: )
  spec.vb:
  - uid: Godot.GodotObject.Disconnect(Godot.StringName,Godot.Callable)
    name: Disconnect
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.Callable
    name: Callable
    isExternal: true
  - name: )
- uid: Godot.GodotObject.IsConnected(Godot.StringName,Godot.Callable)
  commentId: M:Godot.GodotObject.IsConnected(Godot.StringName,Godot.Callable)
  parent: Godot.GodotObject
  isExternal: true
  name: IsConnected(StringName, Callable)
  nameWithType: GodotObject.IsConnected(StringName, Callable)
  fullName: Godot.GodotObject.IsConnected(Godot.StringName, Godot.Callable)
  spec.csharp:
  - uid: Godot.GodotObject.IsConnected(Godot.StringName,Godot.Callable)
    name: IsConnected
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.Callable
    name: Callable
    isExternal: true
  - name: )
  spec.vb:
  - uid: Godot.GodotObject.IsConnected(Godot.StringName,Godot.Callable)
    name: IsConnected
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.Callable
    name: Callable
    isExternal: true
  - name: )
- uid: Godot.GodotObject.SetBlockSignals(System.Boolean)
  commentId: M:Godot.GodotObject.SetBlockSignals(System.Boolean)
  parent: Godot.GodotObject
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: SetBlockSignals(bool)
  nameWithType: GodotObject.SetBlockSignals(bool)
  fullName: Godot.GodotObject.SetBlockSignals(bool)
  nameWithType.vb: GodotObject.SetBlockSignals(Boolean)
  fullName.vb: Godot.GodotObject.SetBlockSignals(Boolean)
  name.vb: SetBlockSignals(Boolean)
  spec.csharp:
  - uid: Godot.GodotObject.SetBlockSignals(System.Boolean)
    name: SetBlockSignals
    isExternal: true
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Godot.GodotObject.SetBlockSignals(System.Boolean)
    name: SetBlockSignals
    isExternal: true
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Godot.GodotObject.IsBlockingSignals
  commentId: M:Godot.GodotObject.IsBlockingSignals
  parent: Godot.GodotObject
  isExternal: true
  name: IsBlockingSignals()
  nameWithType: GodotObject.IsBlockingSignals()
  fullName: Godot.GodotObject.IsBlockingSignals()
  spec.csharp:
  - uid: Godot.GodotObject.IsBlockingSignals
    name: IsBlockingSignals
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Godot.GodotObject.IsBlockingSignals
    name: IsBlockingSignals
    isExternal: true
  - name: (
  - name: )
- uid: Godot.GodotObject.NotifyPropertyListChanged
  commentId: M:Godot.GodotObject.NotifyPropertyListChanged
  parent: Godot.GodotObject
  isExternal: true
  name: NotifyPropertyListChanged()
  nameWithType: GodotObject.NotifyPropertyListChanged()
  fullName: Godot.GodotObject.NotifyPropertyListChanged()
  spec.csharp:
  - uid: Godot.GodotObject.NotifyPropertyListChanged
    name: NotifyPropertyListChanged
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Godot.GodotObject.NotifyPropertyListChanged
    name: NotifyPropertyListChanged
    isExternal: true
  - name: (
  - name: )
- uid: Godot.GodotObject.SetMessageTranslation(System.Boolean)
  commentId: M:Godot.GodotObject.SetMessageTranslation(System.Boolean)
  parent: Godot.GodotObject
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: SetMessageTranslation(bool)
  nameWithType: GodotObject.SetMessageTranslation(bool)
  fullName: Godot.GodotObject.SetMessageTranslation(bool)
  nameWithType.vb: GodotObject.SetMessageTranslation(Boolean)
  fullName.vb: Godot.GodotObject.SetMessageTranslation(Boolean)
  name.vb: SetMessageTranslation(Boolean)
  spec.csharp:
  - uid: Godot.GodotObject.SetMessageTranslation(System.Boolean)
    name: SetMessageTranslation
    isExternal: true
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Godot.GodotObject.SetMessageTranslation(System.Boolean)
    name: SetMessageTranslation
    isExternal: true
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Godot.GodotObject.CanTranslateMessages
  commentId: M:Godot.GodotObject.CanTranslateMessages
  parent: Godot.GodotObject
  isExternal: true
  name: CanTranslateMessages()
  nameWithType: GodotObject.CanTranslateMessages()
  fullName: Godot.GodotObject.CanTranslateMessages()
  spec.csharp:
  - uid: Godot.GodotObject.CanTranslateMessages
    name: CanTranslateMessages
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Godot.GodotObject.CanTranslateMessages
    name: CanTranslateMessages
    isExternal: true
  - name: (
  - name: )
- uid: Godot.GodotObject.Tr(Godot.StringName,Godot.StringName)
  commentId: M:Godot.GodotObject.Tr(Godot.StringName,Godot.StringName)
  parent: Godot.GodotObject
  isExternal: true
  name: Tr(StringName, StringName)
  nameWithType: GodotObject.Tr(StringName, StringName)
  fullName: Godot.GodotObject.Tr(Godot.StringName, Godot.StringName)
  spec.csharp:
  - uid: Godot.GodotObject.Tr(Godot.StringName,Godot.StringName)
    name: Tr
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: )
  spec.vb:
  - uid: Godot.GodotObject.Tr(Godot.StringName,Godot.StringName)
    name: Tr
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: )
- uid: Godot.GodotObject.TrN(Godot.StringName,Godot.StringName,System.Int32,Godot.StringName)
  commentId: M:Godot.GodotObject.TrN(Godot.StringName,Godot.StringName,System.Int32,Godot.StringName)
  parent: Godot.GodotObject
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: TrN(StringName, StringName, int, StringName)
  nameWithType: GodotObject.TrN(StringName, StringName, int, StringName)
  fullName: Godot.GodotObject.TrN(Godot.StringName, Godot.StringName, int, Godot.StringName)
  nameWithType.vb: GodotObject.TrN(StringName, StringName, Integer, StringName)
  fullName.vb: Godot.GodotObject.TrN(Godot.StringName, Godot.StringName, Integer, Godot.StringName)
  name.vb: TrN(StringName, StringName, Integer, StringName)
  spec.csharp:
  - uid: Godot.GodotObject.TrN(Godot.StringName,Godot.StringName,System.Int32,Godot.StringName)
    name: TrN
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: )
  spec.vb:
  - uid: Godot.GodotObject.TrN(Godot.StringName,Godot.StringName,System.Int32,Godot.StringName)
    name: TrN
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: )
- uid: Godot.GodotObject.IsQueuedForDeletion
  commentId: M:Godot.GodotObject.IsQueuedForDeletion
  parent: Godot.GodotObject
  isExternal: true
  name: IsQueuedForDeletion()
  nameWithType: GodotObject.IsQueuedForDeletion()
  fullName: Godot.GodotObject.IsQueuedForDeletion()
  spec.csharp:
  - uid: Godot.GodotObject.IsQueuedForDeletion
    name: IsQueuedForDeletion
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Godot.GodotObject.IsQueuedForDeletion
    name: IsQueuedForDeletion
    isExternal: true
  - name: (
  - name: )
- uid: Godot.GodotObject.CancelFree
  commentId: M:Godot.GodotObject.CancelFree
  parent: Godot.GodotObject
  isExternal: true
  name: CancelFree()
  nameWithType: GodotObject.CancelFree()
  fullName: Godot.GodotObject.CancelFree()
  spec.csharp:
  - uid: Godot.GodotObject.CancelFree
    name: CancelFree
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Godot.GodotObject.CancelFree
    name: CancelFree
    isExternal: true
  - name: (
  - name: )
- uid: Godot.GodotObject.NativeInstance
  commentId: P:Godot.GodotObject.NativeInstance
  parent: Godot.GodotObject
  isExternal: true
  name: NativeInstance
  nameWithType: GodotObject.NativeInstance
  fullName: Godot.GodotObject.NativeInstance
- uid: Godot.GodotObject.ScriptChanged
  commentId: E:Godot.GodotObject.ScriptChanged
  parent: Godot.GodotObject
  isExternal: true
  name: ScriptChanged
  nameWithType: GodotObject.ScriptChanged
  fullName: Godot.GodotObject.ScriptChanged
- uid: Godot.GodotObject.PropertyListChanged
  commentId: E:Godot.GodotObject.PropertyListChanged
  parent: Godot.GodotObject
  isExternal: true
  name: PropertyListChanged
  nameWithType: GodotObject.PropertyListChanged
  fullName: Godot.GodotObject.PropertyListChanged
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Godot
  commentId: N:Godot
  isExternal: true
  name: Godot
  nameWithType: Godot
  fullName: Godot
- uid: Godot.TextureRect
  commentId: T:Godot.TextureRect
  parent: Godot
  isExternal: true
  name: TextureRect
  nameWithType: TextureRect
  fullName: Godot.TextureRect
- uid: Godot.Label
  commentId: T:Godot.Label
  parent: Godot
  isExternal: true
  name: Label
  nameWithType: Label
  fullName: Godot.Label
- uid: EmergentEchoes.Entities.UI.Indicators.FloatingText.ShowValue*
  commentId: Overload:EmergentEchoes.Entities.UI.Indicators.FloatingText.ShowValue
  href: EmergentEchoes.Entities.UI.Indicators.FloatingText.html#EmergentEchoes_Entities_UI_Indicators_FloatingText_ShowValue_System_String_Godot_Vector2_System_Single_System_Single_
  name: ShowValue
  nameWithType: FloatingText.ShowValue
  fullName: EmergentEchoes.Entities.UI.Indicators.FloatingText.ShowValue
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Godot.Vector2
  commentId: T:Godot.Vector2
  parent: Godot
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: Godot.Vector2
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
