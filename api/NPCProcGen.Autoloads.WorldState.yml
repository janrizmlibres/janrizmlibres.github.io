### YamlMime:ManagedReference
items:
- uid: NPCProcGen.Autoloads.WorldState
  commentId: T:NPCProcGen.Autoloads.WorldState
  id: WorldState
  parent: NPCProcGen.Autoloads
  children:
  - NPCProcGen.Autoloads.WorldState.#ctor
  - NPCProcGen.Autoloads.WorldState.Actors
  - NPCProcGen.Autoloads.WorldState.Initialize(System.Collections.Generic.List{NPCProcGen.ActorTag2D})
  - NPCProcGen.Autoloads.WorldState.Instance
  - NPCProcGen.Autoloads.WorldState._globalEvents
  - NPCProcGen.Autoloads.WorldState._instance
  - NPCProcGen.Autoloads.WorldState._solvedCrimes
  - NPCProcGen.Autoloads.WorldState._structures
  - NPCProcGen.Autoloads.WorldState._taskRecords
  - NPCProcGen.Autoloads.WorldState._unsolvedCrimes
  langs:
  - csharp
  - vb
  name: WorldState
  nameWithType: WorldState
  fullName: NPCProcGen.Autoloads.WorldState
  type: Class
  source:
    id: WorldState
    path: Godot.SourceGenerators\Godot.SourceGenerators.ScriptMethodsGenerator\NPCProcGen.Autoloads.WorldState_ScriptMethods.generated.cs
    startLine: 5
  assemblies:
  - EmergentEchoes
  namespace: NPCProcGen.Autoloads
  summary: Represents the global state of the world, including actors, structures, events, and crimes.
  example: []
  syntax:
    content: >-
      [ScriptPath("res://addons/NPCProcGen/Autoloads/WorldState.cs")]

      public class WorldState : Node, IDisposable
    content.vb: >-
      <ScriptPath("res://addons/NPCProcGen/Autoloads/WorldState.cs")>

      Public Class WorldState Inherits Node Implements IDisposable
  inheritance:
  - System.Object
  - Godot.GodotObject
  - Godot.Node
  implements:
  - System.IDisposable
  inheritedMembers:
  - Godot.Node.NotificationEnterTree
  - Godot.Node.NotificationExitTree
  - Godot.Node.NotificationMovedInParent
  - Godot.Node.NotificationReady
  - Godot.Node.NotificationPaused
  - Godot.Node.NotificationUnpaused
  - Godot.Node.NotificationPhysicsProcess
  - Godot.Node.NotificationProcess
  - Godot.Node.NotificationParented
  - Godot.Node.NotificationUnparented
  - Godot.Node.NotificationSceneInstantiated
  - Godot.Node.NotificationDragBegin
  - Godot.Node.NotificationDragEnd
  - Godot.Node.NotificationPathRenamed
  - Godot.Node.NotificationChildOrderChanged
  - Godot.Node.NotificationInternalProcess
  - Godot.Node.NotificationInternalPhysicsProcess
  - Godot.Node.NotificationPostEnterTree
  - Godot.Node.NotificationDisabled
  - Godot.Node.NotificationEnabled
  - Godot.Node.NotificationResetPhysicsInterpolation
  - Godot.Node.NotificationEditorPreSave
  - Godot.Node.NotificationEditorPostSave
  - Godot.Node.NotificationWMMouseEnter
  - Godot.Node.NotificationWMMouseExit
  - Godot.Node.NotificationWMWindowFocusIn
  - Godot.Node.NotificationWMWindowFocusOut
  - Godot.Node.NotificationWMCloseRequest
  - Godot.Node.NotificationWMGoBackRequest
  - Godot.Node.NotificationWMSizeChanged
  - Godot.Node.NotificationWMDpiChange
  - Godot.Node.NotificationVpMouseEnter
  - Godot.Node.NotificationVpMouseExit
  - Godot.Node.NotificationOsMemoryWarning
  - Godot.Node.NotificationTranslationChanged
  - Godot.Node.NotificationWMAbout
  - Godot.Node.NotificationCrash
  - Godot.Node.NotificationOsImeUpdate
  - Godot.Node.NotificationApplicationResumed
  - Godot.Node.NotificationApplicationPaused
  - Godot.Node.NotificationApplicationFocusIn
  - Godot.Node.NotificationApplicationFocusOut
  - Godot.Node.NotificationTextServerChanged
  - Godot.Node.GetNode``1(Godot.NodePath)
  - Godot.Node.GetNodeOrNull``1(Godot.NodePath)
  - Godot.Node.GetChild``1(System.Int32,System.Boolean)
  - Godot.Node.GetChildOrNull``1(System.Int32,System.Boolean)
  - Godot.Node.GetOwner``1
  - Godot.Node.GetOwnerOrNull``1
  - Godot.Node.GetParent``1
  - Godot.Node.GetParentOrNull``1
  - Godot.Node._ExitTree
  - Godot.Node._Input(Godot.InputEvent)
  - Godot.Node._PhysicsProcess(System.Double)
  - Godot.Node._ShortcutInput(Godot.InputEvent)
  - Godot.Node._UnhandledInput(Godot.InputEvent)
  - Godot.Node._UnhandledKeyInput(Godot.InputEvent)
  - Godot.Node.PrintOrphanNodes
  - Godot.Node.AddSibling(Godot.Node,System.Boolean)
  - Godot.Node.AddChild(Godot.Node,System.Boolean,Godot.Node.InternalMode)
  - Godot.Node.RemoveChild(Godot.Node)
  - Godot.Node.Reparent(Godot.Node,System.Boolean)
  - Godot.Node.GetChildCount(System.Boolean)
  - Godot.Node.GetChildren(System.Boolean)
  - Godot.Node.GetChild(System.Int32,System.Boolean)
  - Godot.Node.HasNode(Godot.NodePath)
  - Godot.Node.GetNode(Godot.NodePath)
  - Godot.Node.GetNodeOrNull(Godot.NodePath)
  - Godot.Node.GetParent
  - Godot.Node.FindChild(System.String,System.Boolean,System.Boolean)
  - Godot.Node.FindChildren(System.String,System.String,System.Boolean,System.Boolean)
  - Godot.Node.FindParent(System.String)
  - Godot.Node.HasNodeAndResource(Godot.NodePath)
  - Godot.Node.GetNodeAndResource(Godot.NodePath)
  - Godot.Node.IsInsideTree
  - Godot.Node.IsPartOfEditedScene
  - Godot.Node.IsAncestorOf(Godot.Node)
  - Godot.Node.IsGreaterThan(Godot.Node)
  - Godot.Node.GetPath
  - Godot.Node.GetPathTo(Godot.Node,System.Boolean)
  - Godot.Node.AddToGroup(Godot.StringName,System.Boolean)
  - Godot.Node.RemoveFromGroup(Godot.StringName)
  - Godot.Node.IsInGroup(Godot.StringName)
  - Godot.Node.MoveChild(Godot.Node,System.Int32)
  - Godot.Node.GetGroups
  - Godot.Node.GetIndex(System.Boolean)
  - Godot.Node.PrintTree
  - Godot.Node.PrintTreePretty
  - Godot.Node.GetTreeString
  - Godot.Node.GetTreeStringPretty
  - Godot.Node.PropagateNotification(System.Int32)
  - Godot.Node.PropagateCall(Godot.StringName,Godot.Collections.Array,System.Boolean)
  - Godot.Node.SetPhysicsProcess(System.Boolean)
  - Godot.Node.GetPhysicsProcessDeltaTime
  - Godot.Node.IsPhysicsProcessing
  - Godot.Node.GetProcessDeltaTime
  - Godot.Node.SetProcess(System.Boolean)
  - Godot.Node.IsProcessing
  - Godot.Node.SetProcessInput(System.Boolean)
  - Godot.Node.IsProcessingInput
  - Godot.Node.SetProcessShortcutInput(System.Boolean)
  - Godot.Node.IsProcessingShortcutInput
  - Godot.Node.SetProcessUnhandledInput(System.Boolean)
  - Godot.Node.IsProcessingUnhandledInput
  - Godot.Node.SetProcessUnhandledKeyInput(System.Boolean)
  - Godot.Node.IsProcessingUnhandledKeyInput
  - Godot.Node.CanProcess
  - Godot.Node.SetDisplayFolded(System.Boolean)
  - Godot.Node.IsDisplayedFolded
  - Godot.Node.SetProcessInternal(System.Boolean)
  - Godot.Node.IsProcessingInternal
  - Godot.Node.SetPhysicsProcessInternal(System.Boolean)
  - Godot.Node.IsPhysicsProcessingInternal
  - Godot.Node.IsPhysicsInterpolated
  - Godot.Node.IsPhysicsInterpolatedAndEnabled
  - Godot.Node.ResetPhysicsInterpolation
  - Godot.Node.GetWindow
  - Godot.Node.GetLastExclusiveWindow
  - Godot.Node.GetTree
  - Godot.Node.CreateTween
  - Godot.Node.Duplicate(System.Int32)
  - Godot.Node.ReplaceBy(Godot.Node,System.Boolean)
  - Godot.Node.SetSceneInstanceLoadPlaceholder(System.Boolean)
  - Godot.Node.GetSceneInstanceLoadPlaceholder
  - Godot.Node.SetEditableInstance(Godot.Node,System.Boolean)
  - Godot.Node.IsEditableInstance(Godot.Node)
  - Godot.Node.GetViewport
  - Godot.Node.QueueFree
  - Godot.Node.RequestReady
  - Godot.Node.IsNodeReady
  - Godot.Node.SetMultiplayerAuthority(System.Int32,System.Boolean)
  - Godot.Node.GetMultiplayerAuthority
  - Godot.Node.IsMultiplayerAuthority
  - Godot.Node.RpcConfig(Godot.StringName,Godot.Variant)
  - Godot.Node.Atr(System.String,Godot.StringName)
  - Godot.Node.AtrN(System.String,Godot.StringName,System.Int32,Godot.StringName)
  - Godot.Node.Rpc(Godot.StringName,Godot.Variant[])
  - Godot.Node.RpcId(System.Int64,Godot.StringName,Godot.Variant[])
  - Godot.Node.UpdateConfigurationWarnings
  - Godot.Node.CallDeferredThreadGroup(Godot.StringName,Godot.Variant[])
  - Godot.Node.SetDeferredThreadGroup(Godot.StringName,Godot.Variant)
  - Godot.Node.NotifyDeferredThreadGroup(System.Int32)
  - Godot.Node.CallThreadSafe(Godot.StringName,Godot.Variant[])
  - Godot.Node.SetThreadSafe(Godot.StringName,Godot.Variant)
  - Godot.Node.NotifyThreadSafe(System.Int32)
  - Godot.Node.InvokeGodotClassMethod(Godot.NativeInterop.godot_string_name@,Godot.NativeInterop.NativeVariantPtrArgs,Godot.NativeInterop.godot_variant@)
  - Godot.Node.HasGodotClassMethod(Godot.NativeInterop.godot_string_name@)
  - Godot.Node.HasGodotClassSignal(Godot.NativeInterop.godot_string_name@)
  - Godot.Node.Name
  - Godot.Node.UniqueNameInOwner
  - Godot.Node.SceneFilePath
  - Godot.Node.Owner
  - Godot.Node.Multiplayer
  - Godot.Node.ProcessMode
  - Godot.Node.ProcessPriority
  - Godot.Node.ProcessPhysicsPriority
  - Godot.Node.ProcessThreadGroup
  - Godot.Node.ProcessThreadGroupOrder
  - Godot.Node.ProcessThreadMessages
  - Godot.Node.PhysicsInterpolationMode
  - Godot.Node.AutoTranslateMode
  - Godot.Node.EditorDescription
  - Godot.Node.Ready
  - Godot.Node.Renamed
  - Godot.Node.TreeEntered
  - Godot.Node.TreeExiting
  - Godot.Node.TreeExited
  - Godot.Node.ChildEnteredTree
  - Godot.Node.ChildExitingTree
  - Godot.Node.ChildOrderChanged
  - Godot.Node.ReplacingBy
  - Godot.Node.EditorDescriptionChanged
  - Godot.GodotObject.NotificationPostinitialize
  - Godot.GodotObject.NotificationPredelete
  - Godot.GodotObject.NotificationExtensionReloaded
  - Godot.GodotObject.InstanceFromId(System.UInt64)
  - Godot.GodotObject.IsInstanceIdValid(System.UInt64)
  - Godot.GodotObject.IsInstanceValid(Godot.GodotObject)
  - Godot.GodotObject.WeakRef(Godot.GodotObject)
  - Godot.GodotObject.Dispose
  - Godot.GodotObject.Dispose(System.Boolean)
  - Godot.GodotObject.ToString
  - Godot.GodotObject.ToSignal(Godot.GodotObject,Godot.StringName)
  - Godot.GodotObject._Get(Godot.StringName)
  - Godot.GodotObject._GetPropertyList
  - Godot.GodotObject._Notification(System.Int32)
  - Godot.GodotObject._PropertyCanRevert(Godot.StringName)
  - Godot.GodotObject._PropertyGetRevert(Godot.StringName)
  - Godot.GodotObject._Set(Godot.StringName,Godot.Variant)
  - Godot.GodotObject._ValidateProperty(Godot.Collections.Dictionary)
  - Godot.GodotObject.Free
  - Godot.GodotObject.GetClass
  - Godot.GodotObject.IsClass(System.String)
  - Godot.GodotObject.Set(Godot.StringName,Godot.Variant)
  - Godot.GodotObject.Get(Godot.StringName)
  - Godot.GodotObject.SetIndexed(Godot.NodePath,Godot.Variant)
  - Godot.GodotObject.GetIndexed(Godot.NodePath)
  - Godot.GodotObject.GetPropertyList
  - Godot.GodotObject.GetMethodList
  - Godot.GodotObject.PropertyCanRevert(Godot.StringName)
  - Godot.GodotObject.PropertyGetRevert(Godot.StringName)
  - Godot.GodotObject.Notification(System.Int32,System.Boolean)
  - Godot.GodotObject.GetInstanceId
  - Godot.GodotObject.SetScript(Godot.Variant)
  - Godot.GodotObject.GetScript
  - Godot.GodotObject.SetMeta(Godot.StringName,Godot.Variant)
  - Godot.GodotObject.RemoveMeta(Godot.StringName)
  - Godot.GodotObject.GetMeta(Godot.StringName,Godot.Variant)
  - Godot.GodotObject.HasMeta(Godot.StringName)
  - Godot.GodotObject.GetMetaList
  - Godot.GodotObject.AddUserSignal(System.String,Godot.Collections.Array)
  - Godot.GodotObject.HasUserSignal(Godot.StringName)
  - Godot.GodotObject.RemoveUserSignal(Godot.StringName)
  - Godot.GodotObject.EmitSignal(Godot.StringName,Godot.Variant[])
  - Godot.GodotObject.Call(Godot.StringName,Godot.Variant[])
  - Godot.GodotObject.CallDeferred(Godot.StringName,Godot.Variant[])
  - Godot.GodotObject.SetDeferred(Godot.StringName,Godot.Variant)
  - Godot.GodotObject.Callv(Godot.StringName,Godot.Collections.Array)
  - Godot.GodotObject.HasMethod(Godot.StringName)
  - Godot.GodotObject.GetMethodArgumentCount(Godot.StringName)
  - Godot.GodotObject.HasSignal(Godot.StringName)
  - Godot.GodotObject.GetSignalList
  - Godot.GodotObject.GetSignalConnectionList(Godot.StringName)
  - Godot.GodotObject.GetIncomingConnections
  - Godot.GodotObject.Connect(Godot.StringName,Godot.Callable,System.UInt32)
  - Godot.GodotObject.Disconnect(Godot.StringName,Godot.Callable)
  - Godot.GodotObject.IsConnected(Godot.StringName,Godot.Callable)
  - Godot.GodotObject.SetBlockSignals(System.Boolean)
  - Godot.GodotObject.IsBlockingSignals
  - Godot.GodotObject.NotifyPropertyListChanged
  - Godot.GodotObject.SetMessageTranslation(System.Boolean)
  - Godot.GodotObject.CanTranslateMessages
  - Godot.GodotObject.Tr(Godot.StringName,Godot.StringName)
  - Godot.GodotObject.TrN(Godot.StringName,Godot.StringName,System.Int32,Godot.StringName)
  - Godot.GodotObject.IsQueuedForDeletion
  - Godot.GodotObject.CancelFree
  - Godot.GodotObject.NativeInstance
  - Godot.GodotObject.ScriptChanged
  - Godot.GodotObject.PropertyListChanged
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  attributes:
  - type: Godot.ScriptPathAttribute
    ctor: Godot.ScriptPathAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: res://addons/NPCProcGen/Autoloads/WorldState.cs
- uid: NPCProcGen.Autoloads.WorldState._instance
  commentId: F:NPCProcGen.Autoloads.WorldState._instance
  id: _instance
  parent: NPCProcGen.Autoloads.WorldState
  langs:
  - csharp
  - vb
  name: _instance
  nameWithType: WorldState._instance
  fullName: NPCProcGen.Autoloads.WorldState._instance
  type: Field
  source:
    remote:
      path: addons/NPCProcGen/Autoloads/WorldState.cs
      branch: feat/emote-bubbles
      repo: https://github.com/janrizmlibres/emergent-echoes.git
    id: _instance
    path: ../addons/NPCProcGen/Autoloads/WorldState.cs
    startLine: 14
  assemblies:
  - EmergentEchoes
  namespace: NPCProcGen.Autoloads
  syntax:
    content: private static readonly Lazy<WorldState> _instance
    return:
      type: System.Lazy{NPCProcGen.Autoloads.WorldState}
    content.vb: Private Shared ReadOnly _instance As Lazy(Of WorldState)
- uid: NPCProcGen.Autoloads.WorldState.Instance
  commentId: P:NPCProcGen.Autoloads.WorldState.Instance
  id: Instance
  parent: NPCProcGen.Autoloads.WorldState
  langs:
  - csharp
  - vb
  name: Instance
  nameWithType: WorldState.Instance
  fullName: NPCProcGen.Autoloads.WorldState.Instance
  type: Property
  source:
    remote:
      path: addons/NPCProcGen/Autoloads/WorldState.cs
      branch: feat/emote-bubbles
      repo: https://github.com/janrizmlibres/emergent-echoes.git
    id: Instance
    path: ../addons/NPCProcGen/Autoloads/WorldState.cs
    startLine: 19
  assemblies:
  - EmergentEchoes
  namespace: NPCProcGen.Autoloads
  summary: Gets the singleton instance of the WorldState.
  example: []
  syntax:
    content: public static WorldState Instance { get; }
    parameters: []
    return:
      type: NPCProcGen.Autoloads.WorldState
    content.vb: Public Shared ReadOnly Property Instance As WorldState
  overload: NPCProcGen.Autoloads.WorldState.Instance*
- uid: NPCProcGen.Autoloads.WorldState.#ctor
  commentId: M:NPCProcGen.Autoloads.WorldState.#ctor
  id: '#ctor'
  parent: NPCProcGen.Autoloads.WorldState
  langs:
  - csharp
  - vb
  name: WorldState()
  nameWithType: WorldState.WorldState()
  fullName: NPCProcGen.Autoloads.WorldState.WorldState()
  type: Constructor
  source:
    remote:
      path: addons/NPCProcGen/Autoloads/WorldState.cs
      branch: feat/emote-bubbles
      repo: https://github.com/janrizmlibres/emergent-echoes.git
    id: .ctor
    path: ../addons/NPCProcGen/Autoloads/WorldState.cs
    startLine: 21
  assemblies:
  - EmergentEchoes
  namespace: NPCProcGen.Autoloads
  syntax:
    content: private WorldState()
    content.vb: Private Sub New()
  overload: NPCProcGen.Autoloads.WorldState.#ctor*
  nameWithType.vb: WorldState.New()
  fullName.vb: NPCProcGen.Autoloads.WorldState.New()
  name.vb: New()
- uid: NPCProcGen.Autoloads.WorldState.Actors
  commentId: P:NPCProcGen.Autoloads.WorldState.Actors
  id: Actors
  parent: NPCProcGen.Autoloads.WorldState
  langs:
  - csharp
  - vb
  name: Actors
  nameWithType: WorldState.Actors
  fullName: NPCProcGen.Autoloads.WorldState.Actors
  type: Property
  source:
    remote:
      path: addons/NPCProcGen/Autoloads/WorldState.cs
      branch: feat/emote-bubbles
      repo: https://github.com/janrizmlibres/emergent-echoes.git
    id: Actors
    path: ../addons/NPCProcGen/Autoloads/WorldState.cs
    startLine: 26
  assemblies:
  - EmergentEchoes
  namespace: NPCProcGen.Autoloads
  summary: Gets the list of actors in the world.
  example: []
  syntax:
    content: public IReadOnlyList<ActorTag2D> Actors { get; private set; }
    parameters: []
    return:
      type: System.Collections.Generic.IReadOnlyList{NPCProcGen.ActorTag2D}
    content.vb: Public Property Actors As IReadOnlyList(Of ActorTag2D)
  overload: NPCProcGen.Autoloads.WorldState.Actors*
- uid: NPCProcGen.Autoloads.WorldState._structures
  commentId: F:NPCProcGen.Autoloads.WorldState._structures
  id: _structures
  parent: NPCProcGen.Autoloads.WorldState
  langs:
  - csharp
  - vb
  name: _structures
  nameWithType: WorldState._structures
  fullName: NPCProcGen.Autoloads.WorldState._structures
  type: Field
  source:
    remote:
      path: addons/NPCProcGen/Autoloads/WorldState.cs
      branch: feat/emote-bubbles
      repo: https://github.com/janrizmlibres/emergent-echoes.git
    id: _structures
    path: ../addons/NPCProcGen/Autoloads/WorldState.cs
    startLine: 31
  assemblies:
  - EmergentEchoes
  namespace: NPCProcGen.Autoloads
  summary: List of structures in the world.
  example: []
  syntax:
    content: private readonly List<Node2D> _structures
    return:
      type: System.Collections.Generic.List{Godot.Node2D}
    content.vb: Private ReadOnly _structures As List(Of Node2D)
- uid: NPCProcGen.Autoloads.WorldState._globalEvents
  commentId: F:NPCProcGen.Autoloads.WorldState._globalEvents
  id: _globalEvents
  parent: NPCProcGen.Autoloads.WorldState
  langs:
  - csharp
  - vb
  name: _globalEvents
  nameWithType: WorldState._globalEvents
  fullName: NPCProcGen.Autoloads.WorldState._globalEvents
  type: Field
  source:
    remote:
      path: addons/NPCProcGen/Autoloads/WorldState.cs
      branch: feat/emote-bubbles
      repo: https://github.com/janrizmlibres/emergent-echoes.git
    id: _globalEvents
    path: ../addons/NPCProcGen/Autoloads/WorldState.cs
    startLine: 36
  assemblies:
  - EmergentEchoes
  namespace: NPCProcGen.Autoloads
  summary: Actions and interactions that have taken place and what actors performed them.
  example: []
  syntax:
    content: private readonly List<Event> _globalEvents
    return:
      type: System.Collections.Generic.List{NPCProcGen.Core.Events.Event}
    content.vb: Private ReadOnly _globalEvents As List(Of [Event])
- uid: NPCProcGen.Autoloads.WorldState._unsolvedCrimes
  commentId: F:NPCProcGen.Autoloads.WorldState._unsolvedCrimes
  id: _unsolvedCrimes
  parent: NPCProcGen.Autoloads.WorldState
  langs:
  - csharp
  - vb
  name: _unsolvedCrimes
  nameWithType: WorldState._unsolvedCrimes
  fullName: NPCProcGen.Autoloads.WorldState._unsolvedCrimes
  type: Field
  source:
    remote:
      path: addons/NPCProcGen/Autoloads/WorldState.cs
      branch: feat/emote-bubbles
      repo: https://github.com/janrizmlibres/emergent-echoes.git
    id: _unsolvedCrimes
    path: ../addons/NPCProcGen/Autoloads/WorldState.cs
    startLine: 41
  assemblies:
  - EmergentEchoes
  namespace: NPCProcGen.Autoloads
  summary: Crimes that are publicly known and not yet solved.
  example: []
  syntax:
    content: private readonly List<Crime> _unsolvedCrimes
    return:
      type: System.Collections.Generic.List{NPCProcGen.Core.Components.Records.Crime}
    content.vb: Private ReadOnly _unsolvedCrimes As List(Of Crime)
- uid: NPCProcGen.Autoloads.WorldState._solvedCrimes
  commentId: F:NPCProcGen.Autoloads.WorldState._solvedCrimes
  id: _solvedCrimes
  parent: NPCProcGen.Autoloads.WorldState
  langs:
  - csharp
  - vb
  name: _solvedCrimes
  nameWithType: WorldState._solvedCrimes
  fullName: NPCProcGen.Autoloads.WorldState._solvedCrimes
  type: Field
  source:
    remote:
      path: addons/NPCProcGen/Autoloads/WorldState.cs
      branch: feat/emote-bubbles
      repo: https://github.com/janrizmlibres/emergent-echoes.git
    id: _solvedCrimes
    path: ../addons/NPCProcGen/Autoloads/WorldState.cs
    startLine: 46
  assemblies:
  - EmergentEchoes
  namespace: NPCProcGen.Autoloads
  summary: Solved crimes and who apprehended the criminal.
  example: []
  syntax:
    content: private readonly List<Crime> _solvedCrimes
    return:
      type: System.Collections.Generic.List{NPCProcGen.Core.Components.Records.Crime}
    content.vb: Private ReadOnly _solvedCrimes As List(Of Crime)
- uid: NPCProcGen.Autoloads.WorldState._taskRecords
  commentId: F:NPCProcGen.Autoloads.WorldState._taskRecords
  id: _taskRecords
  parent: NPCProcGen.Autoloads.WorldState
  langs:
  - csharp
  - vb
  name: _taskRecords
  nameWithType: WorldState._taskRecords
  fullName: NPCProcGen.Autoloads.WorldState._taskRecords
  type: Field
  source:
    remote:
      path: addons/NPCProcGen/Autoloads/WorldState.cs
      branch: feat/emote-bubbles
      repo: https://github.com/janrizmlibres/emergent-echoes.git
    id: _taskRecords
    path: ../addons/NPCProcGen/Autoloads/WorldState.cs
    startLine: 51
  assemblies:
  - EmergentEchoes
  namespace: NPCProcGen.Autoloads
  summary: Tasks that are delegated to which individuals.
  example: []
  syntax:
    content: private readonly List<Event> _taskRecords
    return:
      type: System.Collections.Generic.List{NPCProcGen.Core.Events.Event}
    content.vb: Private ReadOnly _taskRecords As List(Of [Event])
- uid: NPCProcGen.Autoloads.WorldState.Initialize(System.Collections.Generic.List{NPCProcGen.ActorTag2D})
  commentId: M:NPCProcGen.Autoloads.WorldState.Initialize(System.Collections.Generic.List{NPCProcGen.ActorTag2D})
  id: Initialize(System.Collections.Generic.List{NPCProcGen.ActorTag2D})
  parent: NPCProcGen.Autoloads.WorldState
  langs:
  - csharp
  - vb
  name: Initialize(List<ActorTag2D>)
  nameWithType: WorldState.Initialize(List<ActorTag2D>)
  fullName: NPCProcGen.Autoloads.WorldState.Initialize(System.Collections.Generic.List<NPCProcGen.ActorTag2D>)
  type: Method
  source:
    remote:
      path: addons/NPCProcGen/Autoloads/WorldState.cs
      branch: feat/emote-bubbles
      repo: https://github.com/janrizmlibres/emergent-echoes.git
    id: Initialize
    path: ../addons/NPCProcGen/Autoloads/WorldState.cs
    startLine: 62
  assemblies:
  - EmergentEchoes
  namespace: NPCProcGen.Autoloads
  summary: Initializes the world state with the given list of actors.
  example: []
  syntax:
    content: public void Initialize(List<ActorTag2D> actors)
    parameters:
    - id: actors
      type: System.Collections.Generic.List{NPCProcGen.ActorTag2D}
      description: The list of actors to initialize.
    content.vb: Public Sub Initialize(actors As List(Of ActorTag2D))
  overload: NPCProcGen.Autoloads.WorldState.Initialize*
  nameWithType.vb: WorldState.Initialize(List(Of ActorTag2D))
  fullName.vb: NPCProcGen.Autoloads.WorldState.Initialize(System.Collections.Generic.List(Of NPCProcGen.ActorTag2D))
  name.vb: Initialize(List(Of ActorTag2D))
references:
- uid: NPCProcGen.Autoloads
  commentId: N:NPCProcGen.Autoloads
  href: NPCProcGen.html
  name: NPCProcGen.Autoloads
  nameWithType: NPCProcGen.Autoloads
  fullName: NPCProcGen.Autoloads
  spec.csharp:
  - uid: NPCProcGen
    name: NPCProcGen
    href: NPCProcGen.html
  - name: .
  - uid: NPCProcGen.Autoloads
    name: Autoloads
    href: NPCProcGen.Autoloads.html
  spec.vb:
  - uid: NPCProcGen
    name: NPCProcGen
    href: NPCProcGen.html
  - name: .
  - uid: NPCProcGen.Autoloads
    name: Autoloads
    href: NPCProcGen.Autoloads.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Godot.GodotObject
  commentId: T:Godot.GodotObject
  parent: Godot
  isExternal: true
  name: GodotObject
  nameWithType: GodotObject
  fullName: Godot.GodotObject
- uid: Godot.Node
  commentId: T:Godot.Node
  parent: Godot
  isExternal: true
  name: Node
  nameWithType: Node
  fullName: Godot.Node
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.idisposable
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: Godot.Node.NotificationEnterTree
  commentId: F:Godot.Node.NotificationEnterTree
  parent: Godot.Node
  isExternal: true
  name: NotificationEnterTree
  nameWithType: Node.NotificationEnterTree
  fullName: Godot.Node.NotificationEnterTree
- uid: Godot.Node.NotificationExitTree
  commentId: F:Godot.Node.NotificationExitTree
  parent: Godot.Node
  isExternal: true
  name: NotificationExitTree
  nameWithType: Node.NotificationExitTree
  fullName: Godot.Node.NotificationExitTree
- uid: Godot.Node.NotificationMovedInParent
  commentId: F:Godot.Node.NotificationMovedInParent
  parent: Godot.Node
  isExternal: true
  name: NotificationMovedInParent
  nameWithType: Node.NotificationMovedInParent
  fullName: Godot.Node.NotificationMovedInParent
- uid: Godot.Node.NotificationReady
  commentId: F:Godot.Node.NotificationReady
  parent: Godot.Node
  isExternal: true
  name: NotificationReady
  nameWithType: Node.NotificationReady
  fullName: Godot.Node.NotificationReady
- uid: Godot.Node.NotificationPaused
  commentId: F:Godot.Node.NotificationPaused
  parent: Godot.Node
  isExternal: true
  name: NotificationPaused
  nameWithType: Node.NotificationPaused
  fullName: Godot.Node.NotificationPaused
- uid: Godot.Node.NotificationUnpaused
  commentId: F:Godot.Node.NotificationUnpaused
  parent: Godot.Node
  isExternal: true
  name: NotificationUnpaused
  nameWithType: Node.NotificationUnpaused
  fullName: Godot.Node.NotificationUnpaused
- uid: Godot.Node.NotificationPhysicsProcess
  commentId: F:Godot.Node.NotificationPhysicsProcess
  parent: Godot.Node
  isExternal: true
  name: NotificationPhysicsProcess
  nameWithType: Node.NotificationPhysicsProcess
  fullName: Godot.Node.NotificationPhysicsProcess
- uid: Godot.Node.NotificationProcess
  commentId: F:Godot.Node.NotificationProcess
  parent: Godot.Node
  isExternal: true
  name: NotificationProcess
  nameWithType: Node.NotificationProcess
  fullName: Godot.Node.NotificationProcess
- uid: Godot.Node.NotificationParented
  commentId: F:Godot.Node.NotificationParented
  parent: Godot.Node
  isExternal: true
  name: NotificationParented
  nameWithType: Node.NotificationParented
  fullName: Godot.Node.NotificationParented
- uid: Godot.Node.NotificationUnparented
  commentId: F:Godot.Node.NotificationUnparented
  parent: Godot.Node
  isExternal: true
  name: NotificationUnparented
  nameWithType: Node.NotificationUnparented
  fullName: Godot.Node.NotificationUnparented
- uid: Godot.Node.NotificationSceneInstantiated
  commentId: F:Godot.Node.NotificationSceneInstantiated
  parent: Godot.Node
  isExternal: true
  name: NotificationSceneInstantiated
  nameWithType: Node.NotificationSceneInstantiated
  fullName: Godot.Node.NotificationSceneInstantiated
- uid: Godot.Node.NotificationDragBegin
  commentId: F:Godot.Node.NotificationDragBegin
  parent: Godot.Node
  isExternal: true
  name: NotificationDragBegin
  nameWithType: Node.NotificationDragBegin
  fullName: Godot.Node.NotificationDragBegin
- uid: Godot.Node.NotificationDragEnd
  commentId: F:Godot.Node.NotificationDragEnd
  parent: Godot.Node
  isExternal: true
  name: NotificationDragEnd
  nameWithType: Node.NotificationDragEnd
  fullName: Godot.Node.NotificationDragEnd
- uid: Godot.Node.NotificationPathRenamed
  commentId: F:Godot.Node.NotificationPathRenamed
  parent: Godot.Node
  isExternal: true
  name: NotificationPathRenamed
  nameWithType: Node.NotificationPathRenamed
  fullName: Godot.Node.NotificationPathRenamed
- uid: Godot.Node.NotificationChildOrderChanged
  commentId: F:Godot.Node.NotificationChildOrderChanged
  parent: Godot.Node
  isExternal: true
  name: NotificationChildOrderChanged
  nameWithType: Node.NotificationChildOrderChanged
  fullName: Godot.Node.NotificationChildOrderChanged
- uid: Godot.Node.NotificationInternalProcess
  commentId: F:Godot.Node.NotificationInternalProcess
  parent: Godot.Node
  isExternal: true
  name: NotificationInternalProcess
  nameWithType: Node.NotificationInternalProcess
  fullName: Godot.Node.NotificationInternalProcess
- uid: Godot.Node.NotificationInternalPhysicsProcess
  commentId: F:Godot.Node.NotificationInternalPhysicsProcess
  parent: Godot.Node
  isExternal: true
  name: NotificationInternalPhysicsProcess
  nameWithType: Node.NotificationInternalPhysicsProcess
  fullName: Godot.Node.NotificationInternalPhysicsProcess
- uid: Godot.Node.NotificationPostEnterTree
  commentId: F:Godot.Node.NotificationPostEnterTree
  parent: Godot.Node
  isExternal: true
  name: NotificationPostEnterTree
  nameWithType: Node.NotificationPostEnterTree
  fullName: Godot.Node.NotificationPostEnterTree
- uid: Godot.Node.NotificationDisabled
  commentId: F:Godot.Node.NotificationDisabled
  parent: Godot.Node
  isExternal: true
  name: NotificationDisabled
  nameWithType: Node.NotificationDisabled
  fullName: Godot.Node.NotificationDisabled
- uid: Godot.Node.NotificationEnabled
  commentId: F:Godot.Node.NotificationEnabled
  parent: Godot.Node
  isExternal: true
  name: NotificationEnabled
  nameWithType: Node.NotificationEnabled
  fullName: Godot.Node.NotificationEnabled
- uid: Godot.Node.NotificationResetPhysicsInterpolation
  commentId: F:Godot.Node.NotificationResetPhysicsInterpolation
  parent: Godot.Node
  isExternal: true
  name: NotificationResetPhysicsInterpolation
  nameWithType: Node.NotificationResetPhysicsInterpolation
  fullName: Godot.Node.NotificationResetPhysicsInterpolation
- uid: Godot.Node.NotificationEditorPreSave
  commentId: F:Godot.Node.NotificationEditorPreSave
  parent: Godot.Node
  isExternal: true
  name: NotificationEditorPreSave
  nameWithType: Node.NotificationEditorPreSave
  fullName: Godot.Node.NotificationEditorPreSave
- uid: Godot.Node.NotificationEditorPostSave
  commentId: F:Godot.Node.NotificationEditorPostSave
  parent: Godot.Node
  isExternal: true
  name: NotificationEditorPostSave
  nameWithType: Node.NotificationEditorPostSave
  fullName: Godot.Node.NotificationEditorPostSave
- uid: Godot.Node.NotificationWMMouseEnter
  commentId: F:Godot.Node.NotificationWMMouseEnter
  parent: Godot.Node
  isExternal: true
  name: NotificationWMMouseEnter
  nameWithType: Node.NotificationWMMouseEnter
  fullName: Godot.Node.NotificationWMMouseEnter
- uid: Godot.Node.NotificationWMMouseExit
  commentId: F:Godot.Node.NotificationWMMouseExit
  parent: Godot.Node
  isExternal: true
  name: NotificationWMMouseExit
  nameWithType: Node.NotificationWMMouseExit
  fullName: Godot.Node.NotificationWMMouseExit
- uid: Godot.Node.NotificationWMWindowFocusIn
  commentId: F:Godot.Node.NotificationWMWindowFocusIn
  parent: Godot.Node
  isExternal: true
  name: NotificationWMWindowFocusIn
  nameWithType: Node.NotificationWMWindowFocusIn
  fullName: Godot.Node.NotificationWMWindowFocusIn
- uid: Godot.Node.NotificationWMWindowFocusOut
  commentId: F:Godot.Node.NotificationWMWindowFocusOut
  parent: Godot.Node
  isExternal: true
  name: NotificationWMWindowFocusOut
  nameWithType: Node.NotificationWMWindowFocusOut
  fullName: Godot.Node.NotificationWMWindowFocusOut
- uid: Godot.Node.NotificationWMCloseRequest
  commentId: F:Godot.Node.NotificationWMCloseRequest
  parent: Godot.Node
  isExternal: true
  name: NotificationWMCloseRequest
  nameWithType: Node.NotificationWMCloseRequest
  fullName: Godot.Node.NotificationWMCloseRequest
- uid: Godot.Node.NotificationWMGoBackRequest
  commentId: F:Godot.Node.NotificationWMGoBackRequest
  parent: Godot.Node
  isExternal: true
  name: NotificationWMGoBackRequest
  nameWithType: Node.NotificationWMGoBackRequest
  fullName: Godot.Node.NotificationWMGoBackRequest
- uid: Godot.Node.NotificationWMSizeChanged
  commentId: F:Godot.Node.NotificationWMSizeChanged
  parent: Godot.Node
  isExternal: true
  name: NotificationWMSizeChanged
  nameWithType: Node.NotificationWMSizeChanged
  fullName: Godot.Node.NotificationWMSizeChanged
- uid: Godot.Node.NotificationWMDpiChange
  commentId: F:Godot.Node.NotificationWMDpiChange
  parent: Godot.Node
  isExternal: true
  name: NotificationWMDpiChange
  nameWithType: Node.NotificationWMDpiChange
  fullName: Godot.Node.NotificationWMDpiChange
- uid: Godot.Node.NotificationVpMouseEnter
  commentId: F:Godot.Node.NotificationVpMouseEnter
  parent: Godot.Node
  isExternal: true
  name: NotificationVpMouseEnter
  nameWithType: Node.NotificationVpMouseEnter
  fullName: Godot.Node.NotificationVpMouseEnter
- uid: Godot.Node.NotificationVpMouseExit
  commentId: F:Godot.Node.NotificationVpMouseExit
  parent: Godot.Node
  isExternal: true
  name: NotificationVpMouseExit
  nameWithType: Node.NotificationVpMouseExit
  fullName: Godot.Node.NotificationVpMouseExit
- uid: Godot.Node.NotificationOsMemoryWarning
  commentId: F:Godot.Node.NotificationOsMemoryWarning
  parent: Godot.Node
  isExternal: true
  name: NotificationOsMemoryWarning
  nameWithType: Node.NotificationOsMemoryWarning
  fullName: Godot.Node.NotificationOsMemoryWarning
- uid: Godot.Node.NotificationTranslationChanged
  commentId: F:Godot.Node.NotificationTranslationChanged
  parent: Godot.Node
  isExternal: true
  name: NotificationTranslationChanged
  nameWithType: Node.NotificationTranslationChanged
  fullName: Godot.Node.NotificationTranslationChanged
- uid: Godot.Node.NotificationWMAbout
  commentId: F:Godot.Node.NotificationWMAbout
  parent: Godot.Node
  isExternal: true
  name: NotificationWMAbout
  nameWithType: Node.NotificationWMAbout
  fullName: Godot.Node.NotificationWMAbout
- uid: Godot.Node.NotificationCrash
  commentId: F:Godot.Node.NotificationCrash
  parent: Godot.Node
  isExternal: true
  name: NotificationCrash
  nameWithType: Node.NotificationCrash
  fullName: Godot.Node.NotificationCrash
- uid: Godot.Node.NotificationOsImeUpdate
  commentId: F:Godot.Node.NotificationOsImeUpdate
  parent: Godot.Node
  isExternal: true
  name: NotificationOsImeUpdate
  nameWithType: Node.NotificationOsImeUpdate
  fullName: Godot.Node.NotificationOsImeUpdate
- uid: Godot.Node.NotificationApplicationResumed
  commentId: F:Godot.Node.NotificationApplicationResumed
  parent: Godot.Node
  isExternal: true
  name: NotificationApplicationResumed
  nameWithType: Node.NotificationApplicationResumed
  fullName: Godot.Node.NotificationApplicationResumed
- uid: Godot.Node.NotificationApplicationPaused
  commentId: F:Godot.Node.NotificationApplicationPaused
  parent: Godot.Node
  isExternal: true
  name: NotificationApplicationPaused
  nameWithType: Node.NotificationApplicationPaused
  fullName: Godot.Node.NotificationApplicationPaused
- uid: Godot.Node.NotificationApplicationFocusIn
  commentId: F:Godot.Node.NotificationApplicationFocusIn
  parent: Godot.Node
  isExternal: true
  name: NotificationApplicationFocusIn
  nameWithType: Node.NotificationApplicationFocusIn
  fullName: Godot.Node.NotificationApplicationFocusIn
- uid: Godot.Node.NotificationApplicationFocusOut
  commentId: F:Godot.Node.NotificationApplicationFocusOut
  parent: Godot.Node
  isExternal: true
  name: NotificationApplicationFocusOut
  nameWithType: Node.NotificationApplicationFocusOut
  fullName: Godot.Node.NotificationApplicationFocusOut
- uid: Godot.Node.NotificationTextServerChanged
  commentId: F:Godot.Node.NotificationTextServerChanged
  parent: Godot.Node
  isExternal: true
  name: NotificationTextServerChanged
  nameWithType: Node.NotificationTextServerChanged
  fullName: Godot.Node.NotificationTextServerChanged
- uid: Godot.Node.GetNode``1(Godot.NodePath)
  commentId: M:Godot.Node.GetNode``1(Godot.NodePath)
  parent: Godot.Node
  isExternal: true
  name: GetNode<T>(NodePath)
  nameWithType: Node.GetNode<T>(NodePath)
  fullName: Godot.Node.GetNode<T>(Godot.NodePath)
  nameWithType.vb: Node.GetNode(Of T)(NodePath)
  fullName.vb: Godot.Node.GetNode(Of T)(Godot.NodePath)
  name.vb: GetNode(Of T)(NodePath)
  spec.csharp:
  - uid: Godot.Node.GetNode``1(Godot.NodePath)
    name: GetNode
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: Godot.NodePath
    name: NodePath
    isExternal: true
  - name: )
  spec.vb:
  - uid: Godot.Node.GetNode``1(Godot.NodePath)
    name: GetNode
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: Godot.NodePath
    name: NodePath
    isExternal: true
  - name: )
- uid: Godot.Node.GetNodeOrNull``1(Godot.NodePath)
  commentId: M:Godot.Node.GetNodeOrNull``1(Godot.NodePath)
  parent: Godot.Node
  isExternal: true
  name: GetNodeOrNull<T>(NodePath)
  nameWithType: Node.GetNodeOrNull<T>(NodePath)
  fullName: Godot.Node.GetNodeOrNull<T>(Godot.NodePath)
  nameWithType.vb: Node.GetNodeOrNull(Of T)(NodePath)
  fullName.vb: Godot.Node.GetNodeOrNull(Of T)(Godot.NodePath)
  name.vb: GetNodeOrNull(Of T)(NodePath)
  spec.csharp:
  - uid: Godot.Node.GetNodeOrNull``1(Godot.NodePath)
    name: GetNodeOrNull
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: Godot.NodePath
    name: NodePath
    isExternal: true
  - name: )
  spec.vb:
  - uid: Godot.Node.GetNodeOrNull``1(Godot.NodePath)
    name: GetNodeOrNull
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: Godot.NodePath
    name: NodePath
    isExternal: true
  - name: )
- uid: Godot.Node.GetChild``1(System.Int32,System.Boolean)
  commentId: M:Godot.Node.GetChild``1(System.Int32,System.Boolean)
  parent: Godot.Node
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: GetChild<T>(int, bool)
  nameWithType: Node.GetChild<T>(int, bool)
  fullName: Godot.Node.GetChild<T>(int, bool)
  nameWithType.vb: Node.GetChild(Of T)(Integer, Boolean)
  fullName.vb: Godot.Node.GetChild(Of T)(Integer, Boolean)
  name.vb: GetChild(Of T)(Integer, Boolean)
  spec.csharp:
  - uid: Godot.Node.GetChild``1(System.Int32,System.Boolean)
    name: GetChild
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Godot.Node.GetChild``1(System.Int32,System.Boolean)
    name: GetChild
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Godot.Node.GetChildOrNull``1(System.Int32,System.Boolean)
  commentId: M:Godot.Node.GetChildOrNull``1(System.Int32,System.Boolean)
  parent: Godot.Node
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: GetChildOrNull<T>(int, bool)
  nameWithType: Node.GetChildOrNull<T>(int, bool)
  fullName: Godot.Node.GetChildOrNull<T>(int, bool)
  nameWithType.vb: Node.GetChildOrNull(Of T)(Integer, Boolean)
  fullName.vb: Godot.Node.GetChildOrNull(Of T)(Integer, Boolean)
  name.vb: GetChildOrNull(Of T)(Integer, Boolean)
  spec.csharp:
  - uid: Godot.Node.GetChildOrNull``1(System.Int32,System.Boolean)
    name: GetChildOrNull
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Godot.Node.GetChildOrNull``1(System.Int32,System.Boolean)
    name: GetChildOrNull
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Godot.Node.GetOwner``1
  commentId: M:Godot.Node.GetOwner``1
  parent: Godot.Node
  isExternal: true
  name: GetOwner<T>()
  nameWithType: Node.GetOwner<T>()
  fullName: Godot.Node.GetOwner<T>()
  nameWithType.vb: Node.GetOwner(Of T)()
  fullName.vb: Godot.Node.GetOwner(Of T)()
  name.vb: GetOwner(Of T)()
  spec.csharp:
  - uid: Godot.Node.GetOwner``1
    name: GetOwner
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: )
  spec.vb:
  - uid: Godot.Node.GetOwner``1
    name: GetOwner
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: )
- uid: Godot.Node.GetOwnerOrNull``1
  commentId: M:Godot.Node.GetOwnerOrNull``1
  parent: Godot.Node
  isExternal: true
  name: GetOwnerOrNull<T>()
  nameWithType: Node.GetOwnerOrNull<T>()
  fullName: Godot.Node.GetOwnerOrNull<T>()
  nameWithType.vb: Node.GetOwnerOrNull(Of T)()
  fullName.vb: Godot.Node.GetOwnerOrNull(Of T)()
  name.vb: GetOwnerOrNull(Of T)()
  spec.csharp:
  - uid: Godot.Node.GetOwnerOrNull``1
    name: GetOwnerOrNull
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: )
  spec.vb:
  - uid: Godot.Node.GetOwnerOrNull``1
    name: GetOwnerOrNull
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: )
- uid: Godot.Node.GetParent``1
  commentId: M:Godot.Node.GetParent``1
  parent: Godot.Node
  isExternal: true
  name: GetParent<T>()
  nameWithType: Node.GetParent<T>()
  fullName: Godot.Node.GetParent<T>()
  nameWithType.vb: Node.GetParent(Of T)()
  fullName.vb: Godot.Node.GetParent(Of T)()
  name.vb: GetParent(Of T)()
  spec.csharp:
  - uid: Godot.Node.GetParent``1
    name: GetParent
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: )
  spec.vb:
  - uid: Godot.Node.GetParent``1
    name: GetParent
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: )
- uid: Godot.Node.GetParentOrNull``1
  commentId: M:Godot.Node.GetParentOrNull``1
  parent: Godot.Node
  isExternal: true
  name: GetParentOrNull<T>()
  nameWithType: Node.GetParentOrNull<T>()
  fullName: Godot.Node.GetParentOrNull<T>()
  nameWithType.vb: Node.GetParentOrNull(Of T)()
  fullName.vb: Godot.Node.GetParentOrNull(Of T)()
  name.vb: GetParentOrNull(Of T)()
  spec.csharp:
  - uid: Godot.Node.GetParentOrNull``1
    name: GetParentOrNull
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: )
  spec.vb:
  - uid: Godot.Node.GetParentOrNull``1
    name: GetParentOrNull
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: )
- uid: Godot.Node._ExitTree
  commentId: M:Godot.Node._ExitTree
  parent: Godot.Node
  isExternal: true
  name: _ExitTree()
  nameWithType: Node._ExitTree()
  fullName: Godot.Node._ExitTree()
  spec.csharp:
  - uid: Godot.Node._ExitTree
    name: _ExitTree
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Godot.Node._ExitTree
    name: _ExitTree
    isExternal: true
  - name: (
  - name: )
- uid: Godot.Node._Input(Godot.InputEvent)
  commentId: M:Godot.Node._Input(Godot.InputEvent)
  parent: Godot.Node
  isExternal: true
  name: _Input(InputEvent)
  nameWithType: Node._Input(InputEvent)
  fullName: Godot.Node._Input(Godot.InputEvent)
  spec.csharp:
  - uid: Godot.Node._Input(Godot.InputEvent)
    name: _Input
    isExternal: true
  - name: (
  - uid: Godot.InputEvent
    name: InputEvent
    isExternal: true
  - name: )
  spec.vb:
  - uid: Godot.Node._Input(Godot.InputEvent)
    name: _Input
    isExternal: true
  - name: (
  - uid: Godot.InputEvent
    name: InputEvent
    isExternal: true
  - name: )
- uid: Godot.Node._PhysicsProcess(System.Double)
  commentId: M:Godot.Node._PhysicsProcess(System.Double)
  parent: Godot.Node
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.double
  name: _PhysicsProcess(double)
  nameWithType: Node._PhysicsProcess(double)
  fullName: Godot.Node._PhysicsProcess(double)
  nameWithType.vb: Node._PhysicsProcess(Double)
  fullName.vb: Godot.Node._PhysicsProcess(Double)
  name.vb: _PhysicsProcess(Double)
  spec.csharp:
  - uid: Godot.Node._PhysicsProcess(System.Double)
    name: _PhysicsProcess
    isExternal: true
  - name: (
  - uid: System.Double
    name: double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: )
  spec.vb:
  - uid: Godot.Node._PhysicsProcess(System.Double)
    name: _PhysicsProcess
    isExternal: true
  - name: (
  - uid: System.Double
    name: Double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: )
- uid: Godot.Node._ShortcutInput(Godot.InputEvent)
  commentId: M:Godot.Node._ShortcutInput(Godot.InputEvent)
  parent: Godot.Node
  isExternal: true
  name: _ShortcutInput(InputEvent)
  nameWithType: Node._ShortcutInput(InputEvent)
  fullName: Godot.Node._ShortcutInput(Godot.InputEvent)
  spec.csharp:
  - uid: Godot.Node._ShortcutInput(Godot.InputEvent)
    name: _ShortcutInput
    isExternal: true
  - name: (
  - uid: Godot.InputEvent
    name: InputEvent
    isExternal: true
  - name: )
  spec.vb:
  - uid: Godot.Node._ShortcutInput(Godot.InputEvent)
    name: _ShortcutInput
    isExternal: true
  - name: (
  - uid: Godot.InputEvent
    name: InputEvent
    isExternal: true
  - name: )
- uid: Godot.Node._UnhandledInput(Godot.InputEvent)
  commentId: M:Godot.Node._UnhandledInput(Godot.InputEvent)
  parent: Godot.Node
  isExternal: true
  name: _UnhandledInput(InputEvent)
  nameWithType: Node._UnhandledInput(InputEvent)
  fullName: Godot.Node._UnhandledInput(Godot.InputEvent)
  spec.csharp:
  - uid: Godot.Node._UnhandledInput(Godot.InputEvent)
    name: _UnhandledInput
    isExternal: true
  - name: (
  - uid: Godot.InputEvent
    name: InputEvent
    isExternal: true
  - name: )
  spec.vb:
  - uid: Godot.Node._UnhandledInput(Godot.InputEvent)
    name: _UnhandledInput
    isExternal: true
  - name: (
  - uid: Godot.InputEvent
    name: InputEvent
    isExternal: true
  - name: )
- uid: Godot.Node._UnhandledKeyInput(Godot.InputEvent)
  commentId: M:Godot.Node._UnhandledKeyInput(Godot.InputEvent)
  parent: Godot.Node
  isExternal: true
  name: _UnhandledKeyInput(InputEvent)
  nameWithType: Node._UnhandledKeyInput(InputEvent)
  fullName: Godot.Node._UnhandledKeyInput(Godot.InputEvent)
  spec.csharp:
  - uid: Godot.Node._UnhandledKeyInput(Godot.InputEvent)
    name: _UnhandledKeyInput
    isExternal: true
  - name: (
  - uid: Godot.InputEvent
    name: InputEvent
    isExternal: true
  - name: )
  spec.vb:
  - uid: Godot.Node._UnhandledKeyInput(Godot.InputEvent)
    name: _UnhandledKeyInput
    isExternal: true
  - name: (
  - uid: Godot.InputEvent
    name: InputEvent
    isExternal: true
  - name: )
- uid: Godot.Node.PrintOrphanNodes
  commentId: M:Godot.Node.PrintOrphanNodes
  parent: Godot.Node
  isExternal: true
  name: PrintOrphanNodes()
  nameWithType: Node.PrintOrphanNodes()
  fullName: Godot.Node.PrintOrphanNodes()
  spec.csharp:
  - uid: Godot.Node.PrintOrphanNodes
    name: PrintOrphanNodes
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Godot.Node.PrintOrphanNodes
    name: PrintOrphanNodes
    isExternal: true
  - name: (
  - name: )
- uid: Godot.Node.AddSibling(Godot.Node,System.Boolean)
  commentId: M:Godot.Node.AddSibling(Godot.Node,System.Boolean)
  parent: Godot.Node
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: AddSibling(Node, bool)
  nameWithType: Node.AddSibling(Node, bool)
  fullName: Godot.Node.AddSibling(Godot.Node, bool)
  nameWithType.vb: Node.AddSibling(Node, Boolean)
  fullName.vb: Godot.Node.AddSibling(Godot.Node, Boolean)
  name.vb: AddSibling(Node, Boolean)
  spec.csharp:
  - uid: Godot.Node.AddSibling(Godot.Node,System.Boolean)
    name: AddSibling
    isExternal: true
  - name: (
  - uid: Godot.Node
    name: Node
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Godot.Node.AddSibling(Godot.Node,System.Boolean)
    name: AddSibling
    isExternal: true
  - name: (
  - uid: Godot.Node
    name: Node
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Godot.Node.AddChild(Godot.Node,System.Boolean,Godot.Node.InternalMode)
  commentId: M:Godot.Node.AddChild(Godot.Node,System.Boolean,Godot.Node.InternalMode)
  parent: Godot.Node
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: AddChild(Node, bool, InternalMode)
  nameWithType: Node.AddChild(Node, bool, Node.InternalMode)
  fullName: Godot.Node.AddChild(Godot.Node, bool, Godot.Node.InternalMode)
  nameWithType.vb: Node.AddChild(Node, Boolean, Node.InternalMode)
  fullName.vb: Godot.Node.AddChild(Godot.Node, Boolean, Godot.Node.InternalMode)
  name.vb: AddChild(Node, Boolean, InternalMode)
  spec.csharp:
  - uid: Godot.Node.AddChild(Godot.Node,System.Boolean,Godot.Node.InternalMode)
    name: AddChild
    isExternal: true
  - name: (
  - uid: Godot.Node
    name: Node
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Godot.Node.InternalMode
    name: InternalMode
    isExternal: true
  - name: )
  spec.vb:
  - uid: Godot.Node.AddChild(Godot.Node,System.Boolean,Godot.Node.InternalMode)
    name: AddChild
    isExternal: true
  - name: (
  - uid: Godot.Node
    name: Node
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Godot.Node.InternalMode
    name: InternalMode
    isExternal: true
  - name: )
- uid: Godot.Node.RemoveChild(Godot.Node)
  commentId: M:Godot.Node.RemoveChild(Godot.Node)
  parent: Godot.Node
  isExternal: true
  name: RemoveChild(Node)
  nameWithType: Node.RemoveChild(Node)
  fullName: Godot.Node.RemoveChild(Godot.Node)
  spec.csharp:
  - uid: Godot.Node.RemoveChild(Godot.Node)
    name: RemoveChild
    isExternal: true
  - name: (
  - uid: Godot.Node
    name: Node
    isExternal: true
  - name: )
  spec.vb:
  - uid: Godot.Node.RemoveChild(Godot.Node)
    name: RemoveChild
    isExternal: true
  - name: (
  - uid: Godot.Node
    name: Node
    isExternal: true
  - name: )
- uid: Godot.Node.Reparent(Godot.Node,System.Boolean)
  commentId: M:Godot.Node.Reparent(Godot.Node,System.Boolean)
  parent: Godot.Node
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: Reparent(Node, bool)
  nameWithType: Node.Reparent(Node, bool)
  fullName: Godot.Node.Reparent(Godot.Node, bool)
  nameWithType.vb: Node.Reparent(Node, Boolean)
  fullName.vb: Godot.Node.Reparent(Godot.Node, Boolean)
  name.vb: Reparent(Node, Boolean)
  spec.csharp:
  - uid: Godot.Node.Reparent(Godot.Node,System.Boolean)
    name: Reparent
    isExternal: true
  - name: (
  - uid: Godot.Node
    name: Node
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Godot.Node.Reparent(Godot.Node,System.Boolean)
    name: Reparent
    isExternal: true
  - name: (
  - uid: Godot.Node
    name: Node
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Godot.Node.GetChildCount(System.Boolean)
  commentId: M:Godot.Node.GetChildCount(System.Boolean)
  parent: Godot.Node
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: GetChildCount(bool)
  nameWithType: Node.GetChildCount(bool)
  fullName: Godot.Node.GetChildCount(bool)
  nameWithType.vb: Node.GetChildCount(Boolean)
  fullName.vb: Godot.Node.GetChildCount(Boolean)
  name.vb: GetChildCount(Boolean)
  spec.csharp:
  - uid: Godot.Node.GetChildCount(System.Boolean)
    name: GetChildCount
    isExternal: true
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Godot.Node.GetChildCount(System.Boolean)
    name: GetChildCount
    isExternal: true
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Godot.Node.GetChildren(System.Boolean)
  commentId: M:Godot.Node.GetChildren(System.Boolean)
  parent: Godot.Node
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: GetChildren(bool)
  nameWithType: Node.GetChildren(bool)
  fullName: Godot.Node.GetChildren(bool)
  nameWithType.vb: Node.GetChildren(Boolean)
  fullName.vb: Godot.Node.GetChildren(Boolean)
  name.vb: GetChildren(Boolean)
  spec.csharp:
  - uid: Godot.Node.GetChildren(System.Boolean)
    name: GetChildren
    isExternal: true
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Godot.Node.GetChildren(System.Boolean)
    name: GetChildren
    isExternal: true
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Godot.Node.GetChild(System.Int32,System.Boolean)
  commentId: M:Godot.Node.GetChild(System.Int32,System.Boolean)
  parent: Godot.Node
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: GetChild(int, bool)
  nameWithType: Node.GetChild(int, bool)
  fullName: Godot.Node.GetChild(int, bool)
  nameWithType.vb: Node.GetChild(Integer, Boolean)
  fullName.vb: Godot.Node.GetChild(Integer, Boolean)
  name.vb: GetChild(Integer, Boolean)
  spec.csharp:
  - uid: Godot.Node.GetChild(System.Int32,System.Boolean)
    name: GetChild
    isExternal: true
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Godot.Node.GetChild(System.Int32,System.Boolean)
    name: GetChild
    isExternal: true
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Godot.Node.HasNode(Godot.NodePath)
  commentId: M:Godot.Node.HasNode(Godot.NodePath)
  parent: Godot.Node
  isExternal: true
  name: HasNode(NodePath)
  nameWithType: Node.HasNode(NodePath)
  fullName: Godot.Node.HasNode(Godot.NodePath)
  spec.csharp:
  - uid: Godot.Node.HasNode(Godot.NodePath)
    name: HasNode
    isExternal: true
  - name: (
  - uid: Godot.NodePath
    name: NodePath
    isExternal: true
  - name: )
  spec.vb:
  - uid: Godot.Node.HasNode(Godot.NodePath)
    name: HasNode
    isExternal: true
  - name: (
  - uid: Godot.NodePath
    name: NodePath
    isExternal: true
  - name: )
- uid: Godot.Node.GetNode(Godot.NodePath)
  commentId: M:Godot.Node.GetNode(Godot.NodePath)
  parent: Godot.Node
  isExternal: true
  name: GetNode(NodePath)
  nameWithType: Node.GetNode(NodePath)
  fullName: Godot.Node.GetNode(Godot.NodePath)
  spec.csharp:
  - uid: Godot.Node.GetNode(Godot.NodePath)
    name: GetNode
    isExternal: true
  - name: (
  - uid: Godot.NodePath
    name: NodePath
    isExternal: true
  - name: )
  spec.vb:
  - uid: Godot.Node.GetNode(Godot.NodePath)
    name: GetNode
    isExternal: true
  - name: (
  - uid: Godot.NodePath
    name: NodePath
    isExternal: true
  - name: )
- uid: Godot.Node.GetNodeOrNull(Godot.NodePath)
  commentId: M:Godot.Node.GetNodeOrNull(Godot.NodePath)
  parent: Godot.Node
  isExternal: true
  name: GetNodeOrNull(NodePath)
  nameWithType: Node.GetNodeOrNull(NodePath)
  fullName: Godot.Node.GetNodeOrNull(Godot.NodePath)
  spec.csharp:
  - uid: Godot.Node.GetNodeOrNull(Godot.NodePath)
    name: GetNodeOrNull
    isExternal: true
  - name: (
  - uid: Godot.NodePath
    name: NodePath
    isExternal: true
  - name: )
  spec.vb:
  - uid: Godot.Node.GetNodeOrNull(Godot.NodePath)
    name: GetNodeOrNull
    isExternal: true
  - name: (
  - uid: Godot.NodePath
    name: NodePath
    isExternal: true
  - name: )
- uid: Godot.Node.GetParent
  commentId: M:Godot.Node.GetParent
  parent: Godot.Node
  isExternal: true
  name: GetParent()
  nameWithType: Node.GetParent()
  fullName: Godot.Node.GetParent()
  spec.csharp:
  - uid: Godot.Node.GetParent
    name: GetParent
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Godot.Node.GetParent
    name: GetParent
    isExternal: true
  - name: (
  - name: )
- uid: Godot.Node.FindChild(System.String,System.Boolean,System.Boolean)
  commentId: M:Godot.Node.FindChild(System.String,System.Boolean,System.Boolean)
  parent: Godot.Node
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: FindChild(string, bool, bool)
  nameWithType: Node.FindChild(string, bool, bool)
  fullName: Godot.Node.FindChild(string, bool, bool)
  nameWithType.vb: Node.FindChild(String, Boolean, Boolean)
  fullName.vb: Godot.Node.FindChild(String, Boolean, Boolean)
  name.vb: FindChild(String, Boolean, Boolean)
  spec.csharp:
  - uid: Godot.Node.FindChild(System.String,System.Boolean,System.Boolean)
    name: FindChild
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Godot.Node.FindChild(System.String,System.Boolean,System.Boolean)
    name: FindChild
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Godot.Node.FindChildren(System.String,System.String,System.Boolean,System.Boolean)
  commentId: M:Godot.Node.FindChildren(System.String,System.String,System.Boolean,System.Boolean)
  parent: Godot.Node
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: FindChildren(string, string, bool, bool)
  nameWithType: Node.FindChildren(string, string, bool, bool)
  fullName: Godot.Node.FindChildren(string, string, bool, bool)
  nameWithType.vb: Node.FindChildren(String, String, Boolean, Boolean)
  fullName.vb: Godot.Node.FindChildren(String, String, Boolean, Boolean)
  name.vb: FindChildren(String, String, Boolean, Boolean)
  spec.csharp:
  - uid: Godot.Node.FindChildren(System.String,System.String,System.Boolean,System.Boolean)
    name: FindChildren
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Godot.Node.FindChildren(System.String,System.String,System.Boolean,System.Boolean)
    name: FindChildren
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Godot.Node.FindParent(System.String)
  commentId: M:Godot.Node.FindParent(System.String)
  parent: Godot.Node
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: FindParent(string)
  nameWithType: Node.FindParent(string)
  fullName: Godot.Node.FindParent(string)
  nameWithType.vb: Node.FindParent(String)
  fullName.vb: Godot.Node.FindParent(String)
  name.vb: FindParent(String)
  spec.csharp:
  - uid: Godot.Node.FindParent(System.String)
    name: FindParent
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Godot.Node.FindParent(System.String)
    name: FindParent
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Godot.Node.HasNodeAndResource(Godot.NodePath)
  commentId: M:Godot.Node.HasNodeAndResource(Godot.NodePath)
  parent: Godot.Node
  isExternal: true
  name: HasNodeAndResource(NodePath)
  nameWithType: Node.HasNodeAndResource(NodePath)
  fullName: Godot.Node.HasNodeAndResource(Godot.NodePath)
  spec.csharp:
  - uid: Godot.Node.HasNodeAndResource(Godot.NodePath)
    name: HasNodeAndResource
    isExternal: true
  - name: (
  - uid: Godot.NodePath
    name: NodePath
    isExternal: true
  - name: )
  spec.vb:
  - uid: Godot.Node.HasNodeAndResource(Godot.NodePath)
    name: HasNodeAndResource
    isExternal: true
  - name: (
  - uid: Godot.NodePath
    name: NodePath
    isExternal: true
  - name: )
- uid: Godot.Node.GetNodeAndResource(Godot.NodePath)
  commentId: M:Godot.Node.GetNodeAndResource(Godot.NodePath)
  parent: Godot.Node
  isExternal: true
  name: GetNodeAndResource(NodePath)
  nameWithType: Node.GetNodeAndResource(NodePath)
  fullName: Godot.Node.GetNodeAndResource(Godot.NodePath)
  spec.csharp:
  - uid: Godot.Node.GetNodeAndResource(Godot.NodePath)
    name: GetNodeAndResource
    isExternal: true
  - name: (
  - uid: Godot.NodePath
    name: NodePath
    isExternal: true
  - name: )
  spec.vb:
  - uid: Godot.Node.GetNodeAndResource(Godot.NodePath)
    name: GetNodeAndResource
    isExternal: true
  - name: (
  - uid: Godot.NodePath
    name: NodePath
    isExternal: true
  - name: )
- uid: Godot.Node.IsInsideTree
  commentId: M:Godot.Node.IsInsideTree
  parent: Godot.Node
  isExternal: true
  name: IsInsideTree()
  nameWithType: Node.IsInsideTree()
  fullName: Godot.Node.IsInsideTree()
  spec.csharp:
  - uid: Godot.Node.IsInsideTree
    name: IsInsideTree
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Godot.Node.IsInsideTree
    name: IsInsideTree
    isExternal: true
  - name: (
  - name: )
- uid: Godot.Node.IsPartOfEditedScene
  commentId: M:Godot.Node.IsPartOfEditedScene
  parent: Godot.Node
  isExternal: true
  name: IsPartOfEditedScene()
  nameWithType: Node.IsPartOfEditedScene()
  fullName: Godot.Node.IsPartOfEditedScene()
  spec.csharp:
  - uid: Godot.Node.IsPartOfEditedScene
    name: IsPartOfEditedScene
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Godot.Node.IsPartOfEditedScene
    name: IsPartOfEditedScene
    isExternal: true
  - name: (
  - name: )
- uid: Godot.Node.IsAncestorOf(Godot.Node)
  commentId: M:Godot.Node.IsAncestorOf(Godot.Node)
  parent: Godot.Node
  isExternal: true
  name: IsAncestorOf(Node)
  nameWithType: Node.IsAncestorOf(Node)
  fullName: Godot.Node.IsAncestorOf(Godot.Node)
  spec.csharp:
  - uid: Godot.Node.IsAncestorOf(Godot.Node)
    name: IsAncestorOf
    isExternal: true
  - name: (
  - uid: Godot.Node
    name: Node
    isExternal: true
  - name: )
  spec.vb:
  - uid: Godot.Node.IsAncestorOf(Godot.Node)
    name: IsAncestorOf
    isExternal: true
  - name: (
  - uid: Godot.Node
    name: Node
    isExternal: true
  - name: )
- uid: Godot.Node.IsGreaterThan(Godot.Node)
  commentId: M:Godot.Node.IsGreaterThan(Godot.Node)
  parent: Godot.Node
  isExternal: true
  name: IsGreaterThan(Node)
  nameWithType: Node.IsGreaterThan(Node)
  fullName: Godot.Node.IsGreaterThan(Godot.Node)
  spec.csharp:
  - uid: Godot.Node.IsGreaterThan(Godot.Node)
    name: IsGreaterThan
    isExternal: true
  - name: (
  - uid: Godot.Node
    name: Node
    isExternal: true
  - name: )
  spec.vb:
  - uid: Godot.Node.IsGreaterThan(Godot.Node)
    name: IsGreaterThan
    isExternal: true
  - name: (
  - uid: Godot.Node
    name: Node
    isExternal: true
  - name: )
- uid: Godot.Node.GetPath
  commentId: M:Godot.Node.GetPath
  parent: Godot.Node
  isExternal: true
  name: GetPath()
  nameWithType: Node.GetPath()
  fullName: Godot.Node.GetPath()
  spec.csharp:
  - uid: Godot.Node.GetPath
    name: GetPath
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Godot.Node.GetPath
    name: GetPath
    isExternal: true
  - name: (
  - name: )
- uid: Godot.Node.GetPathTo(Godot.Node,System.Boolean)
  commentId: M:Godot.Node.GetPathTo(Godot.Node,System.Boolean)
  parent: Godot.Node
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: GetPathTo(Node, bool)
  nameWithType: Node.GetPathTo(Node, bool)
  fullName: Godot.Node.GetPathTo(Godot.Node, bool)
  nameWithType.vb: Node.GetPathTo(Node, Boolean)
  fullName.vb: Godot.Node.GetPathTo(Godot.Node, Boolean)
  name.vb: GetPathTo(Node, Boolean)
  spec.csharp:
  - uid: Godot.Node.GetPathTo(Godot.Node,System.Boolean)
    name: GetPathTo
    isExternal: true
  - name: (
  - uid: Godot.Node
    name: Node
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Godot.Node.GetPathTo(Godot.Node,System.Boolean)
    name: GetPathTo
    isExternal: true
  - name: (
  - uid: Godot.Node
    name: Node
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Godot.Node.AddToGroup(Godot.StringName,System.Boolean)
  commentId: M:Godot.Node.AddToGroup(Godot.StringName,System.Boolean)
  parent: Godot.Node
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: AddToGroup(StringName, bool)
  nameWithType: Node.AddToGroup(StringName, bool)
  fullName: Godot.Node.AddToGroup(Godot.StringName, bool)
  nameWithType.vb: Node.AddToGroup(StringName, Boolean)
  fullName.vb: Godot.Node.AddToGroup(Godot.StringName, Boolean)
  name.vb: AddToGroup(StringName, Boolean)
  spec.csharp:
  - uid: Godot.Node.AddToGroup(Godot.StringName,System.Boolean)
    name: AddToGroup
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Godot.Node.AddToGroup(Godot.StringName,System.Boolean)
    name: AddToGroup
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Godot.Node.RemoveFromGroup(Godot.StringName)
  commentId: M:Godot.Node.RemoveFromGroup(Godot.StringName)
  parent: Godot.Node
  isExternal: true
  name: RemoveFromGroup(StringName)
  nameWithType: Node.RemoveFromGroup(StringName)
  fullName: Godot.Node.RemoveFromGroup(Godot.StringName)
  spec.csharp:
  - uid: Godot.Node.RemoveFromGroup(Godot.StringName)
    name: RemoveFromGroup
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: )
  spec.vb:
  - uid: Godot.Node.RemoveFromGroup(Godot.StringName)
    name: RemoveFromGroup
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: )
- uid: Godot.Node.IsInGroup(Godot.StringName)
  commentId: M:Godot.Node.IsInGroup(Godot.StringName)
  parent: Godot.Node
  isExternal: true
  name: IsInGroup(StringName)
  nameWithType: Node.IsInGroup(StringName)
  fullName: Godot.Node.IsInGroup(Godot.StringName)
  spec.csharp:
  - uid: Godot.Node.IsInGroup(Godot.StringName)
    name: IsInGroup
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: )
  spec.vb:
  - uid: Godot.Node.IsInGroup(Godot.StringName)
    name: IsInGroup
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: )
- uid: Godot.Node.MoveChild(Godot.Node,System.Int32)
  commentId: M:Godot.Node.MoveChild(Godot.Node,System.Int32)
  parent: Godot.Node
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: MoveChild(Node, int)
  nameWithType: Node.MoveChild(Node, int)
  fullName: Godot.Node.MoveChild(Godot.Node, int)
  nameWithType.vb: Node.MoveChild(Node, Integer)
  fullName.vb: Godot.Node.MoveChild(Godot.Node, Integer)
  name.vb: MoveChild(Node, Integer)
  spec.csharp:
  - uid: Godot.Node.MoveChild(Godot.Node,System.Int32)
    name: MoveChild
    isExternal: true
  - name: (
  - uid: Godot.Node
    name: Node
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: Godot.Node.MoveChild(Godot.Node,System.Int32)
    name: MoveChild
    isExternal: true
  - name: (
  - uid: Godot.Node
    name: Node
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: Godot.Node.GetGroups
  commentId: M:Godot.Node.GetGroups
  parent: Godot.Node
  isExternal: true
  name: GetGroups()
  nameWithType: Node.GetGroups()
  fullName: Godot.Node.GetGroups()
  spec.csharp:
  - uid: Godot.Node.GetGroups
    name: GetGroups
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Godot.Node.GetGroups
    name: GetGroups
    isExternal: true
  - name: (
  - name: )
- uid: Godot.Node.GetIndex(System.Boolean)
  commentId: M:Godot.Node.GetIndex(System.Boolean)
  parent: Godot.Node
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: GetIndex(bool)
  nameWithType: Node.GetIndex(bool)
  fullName: Godot.Node.GetIndex(bool)
  nameWithType.vb: Node.GetIndex(Boolean)
  fullName.vb: Godot.Node.GetIndex(Boolean)
  name.vb: GetIndex(Boolean)
  spec.csharp:
  - uid: Godot.Node.GetIndex(System.Boolean)
    name: GetIndex
    isExternal: true
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Godot.Node.GetIndex(System.Boolean)
    name: GetIndex
    isExternal: true
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Godot.Node.PrintTree
  commentId: M:Godot.Node.PrintTree
  parent: Godot.Node
  isExternal: true
  name: PrintTree()
  nameWithType: Node.PrintTree()
  fullName: Godot.Node.PrintTree()
  spec.csharp:
  - uid: Godot.Node.PrintTree
    name: PrintTree
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Godot.Node.PrintTree
    name: PrintTree
    isExternal: true
  - name: (
  - name: )
- uid: Godot.Node.PrintTreePretty
  commentId: M:Godot.Node.PrintTreePretty
  parent: Godot.Node
  isExternal: true
  name: PrintTreePretty()
  nameWithType: Node.PrintTreePretty()
  fullName: Godot.Node.PrintTreePretty()
  spec.csharp:
  - uid: Godot.Node.PrintTreePretty
    name: PrintTreePretty
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Godot.Node.PrintTreePretty
    name: PrintTreePretty
    isExternal: true
  - name: (
  - name: )
- uid: Godot.Node.GetTreeString
  commentId: M:Godot.Node.GetTreeString
  parent: Godot.Node
  isExternal: true
  name: GetTreeString()
  nameWithType: Node.GetTreeString()
  fullName: Godot.Node.GetTreeString()
  spec.csharp:
  - uid: Godot.Node.GetTreeString
    name: GetTreeString
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Godot.Node.GetTreeString
    name: GetTreeString
    isExternal: true
  - name: (
  - name: )
- uid: Godot.Node.GetTreeStringPretty
  commentId: M:Godot.Node.GetTreeStringPretty
  parent: Godot.Node
  isExternal: true
  name: GetTreeStringPretty()
  nameWithType: Node.GetTreeStringPretty()
  fullName: Godot.Node.GetTreeStringPretty()
  spec.csharp:
  - uid: Godot.Node.GetTreeStringPretty
    name: GetTreeStringPretty
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Godot.Node.GetTreeStringPretty
    name: GetTreeStringPretty
    isExternal: true
  - name: (
  - name: )
- uid: Godot.Node.PropagateNotification(System.Int32)
  commentId: M:Godot.Node.PropagateNotification(System.Int32)
  parent: Godot.Node
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: PropagateNotification(int)
  nameWithType: Node.PropagateNotification(int)
  fullName: Godot.Node.PropagateNotification(int)
  nameWithType.vb: Node.PropagateNotification(Integer)
  fullName.vb: Godot.Node.PropagateNotification(Integer)
  name.vb: PropagateNotification(Integer)
  spec.csharp:
  - uid: Godot.Node.PropagateNotification(System.Int32)
    name: PropagateNotification
    isExternal: true
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: Godot.Node.PropagateNotification(System.Int32)
    name: PropagateNotification
    isExternal: true
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: Godot.Node.PropagateCall(Godot.StringName,Godot.Collections.Array,System.Boolean)
  commentId: M:Godot.Node.PropagateCall(Godot.StringName,Godot.Collections.Array,System.Boolean)
  parent: Godot.Node
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: PropagateCall(StringName, Array, bool)
  nameWithType: Node.PropagateCall(StringName, Array, bool)
  fullName: Godot.Node.PropagateCall(Godot.StringName, Godot.Collections.Array, bool)
  nameWithType.vb: Node.PropagateCall(StringName, Array, Boolean)
  fullName.vb: Godot.Node.PropagateCall(Godot.StringName, Godot.Collections.Array, Boolean)
  name.vb: PropagateCall(StringName, Array, Boolean)
  spec.csharp:
  - uid: Godot.Node.PropagateCall(Godot.StringName,Godot.Collections.Array,System.Boolean)
    name: PropagateCall
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.Collections.Array
    name: Array
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Godot.Node.PropagateCall(Godot.StringName,Godot.Collections.Array,System.Boolean)
    name: PropagateCall
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.Collections.Array
    name: Array
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Godot.Node.SetPhysicsProcess(System.Boolean)
  commentId: M:Godot.Node.SetPhysicsProcess(System.Boolean)
  parent: Godot.Node
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: SetPhysicsProcess(bool)
  nameWithType: Node.SetPhysicsProcess(bool)
  fullName: Godot.Node.SetPhysicsProcess(bool)
  nameWithType.vb: Node.SetPhysicsProcess(Boolean)
  fullName.vb: Godot.Node.SetPhysicsProcess(Boolean)
  name.vb: SetPhysicsProcess(Boolean)
  spec.csharp:
  - uid: Godot.Node.SetPhysicsProcess(System.Boolean)
    name: SetPhysicsProcess
    isExternal: true
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Godot.Node.SetPhysicsProcess(System.Boolean)
    name: SetPhysicsProcess
    isExternal: true
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Godot.Node.GetPhysicsProcessDeltaTime
  commentId: M:Godot.Node.GetPhysicsProcessDeltaTime
  parent: Godot.Node
  isExternal: true
  name: GetPhysicsProcessDeltaTime()
  nameWithType: Node.GetPhysicsProcessDeltaTime()
  fullName: Godot.Node.GetPhysicsProcessDeltaTime()
  spec.csharp:
  - uid: Godot.Node.GetPhysicsProcessDeltaTime
    name: GetPhysicsProcessDeltaTime
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Godot.Node.GetPhysicsProcessDeltaTime
    name: GetPhysicsProcessDeltaTime
    isExternal: true
  - name: (
  - name: )
- uid: Godot.Node.IsPhysicsProcessing
  commentId: M:Godot.Node.IsPhysicsProcessing
  parent: Godot.Node
  isExternal: true
  name: IsPhysicsProcessing()
  nameWithType: Node.IsPhysicsProcessing()
  fullName: Godot.Node.IsPhysicsProcessing()
  spec.csharp:
  - uid: Godot.Node.IsPhysicsProcessing
    name: IsPhysicsProcessing
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Godot.Node.IsPhysicsProcessing
    name: IsPhysicsProcessing
    isExternal: true
  - name: (
  - name: )
- uid: Godot.Node.GetProcessDeltaTime
  commentId: M:Godot.Node.GetProcessDeltaTime
  parent: Godot.Node
  isExternal: true
  name: GetProcessDeltaTime()
  nameWithType: Node.GetProcessDeltaTime()
  fullName: Godot.Node.GetProcessDeltaTime()
  spec.csharp:
  - uid: Godot.Node.GetProcessDeltaTime
    name: GetProcessDeltaTime
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Godot.Node.GetProcessDeltaTime
    name: GetProcessDeltaTime
    isExternal: true
  - name: (
  - name: )
- uid: Godot.Node.SetProcess(System.Boolean)
  commentId: M:Godot.Node.SetProcess(System.Boolean)
  parent: Godot.Node
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: SetProcess(bool)
  nameWithType: Node.SetProcess(bool)
  fullName: Godot.Node.SetProcess(bool)
  nameWithType.vb: Node.SetProcess(Boolean)
  fullName.vb: Godot.Node.SetProcess(Boolean)
  name.vb: SetProcess(Boolean)
  spec.csharp:
  - uid: Godot.Node.SetProcess(System.Boolean)
    name: SetProcess
    isExternal: true
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Godot.Node.SetProcess(System.Boolean)
    name: SetProcess
    isExternal: true
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Godot.Node.IsProcessing
  commentId: M:Godot.Node.IsProcessing
  parent: Godot.Node
  isExternal: true
  name: IsProcessing()
  nameWithType: Node.IsProcessing()
  fullName: Godot.Node.IsProcessing()
  spec.csharp:
  - uid: Godot.Node.IsProcessing
    name: IsProcessing
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Godot.Node.IsProcessing
    name: IsProcessing
    isExternal: true
  - name: (
  - name: )
- uid: Godot.Node.SetProcessInput(System.Boolean)
  commentId: M:Godot.Node.SetProcessInput(System.Boolean)
  parent: Godot.Node
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: SetProcessInput(bool)
  nameWithType: Node.SetProcessInput(bool)
  fullName: Godot.Node.SetProcessInput(bool)
  nameWithType.vb: Node.SetProcessInput(Boolean)
  fullName.vb: Godot.Node.SetProcessInput(Boolean)
  name.vb: SetProcessInput(Boolean)
  spec.csharp:
  - uid: Godot.Node.SetProcessInput(System.Boolean)
    name: SetProcessInput
    isExternal: true
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Godot.Node.SetProcessInput(System.Boolean)
    name: SetProcessInput
    isExternal: true
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Godot.Node.IsProcessingInput
  commentId: M:Godot.Node.IsProcessingInput
  parent: Godot.Node
  isExternal: true
  name: IsProcessingInput()
  nameWithType: Node.IsProcessingInput()
  fullName: Godot.Node.IsProcessingInput()
  spec.csharp:
  - uid: Godot.Node.IsProcessingInput
    name: IsProcessingInput
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Godot.Node.IsProcessingInput
    name: IsProcessingInput
    isExternal: true
  - name: (
  - name: )
- uid: Godot.Node.SetProcessShortcutInput(System.Boolean)
  commentId: M:Godot.Node.SetProcessShortcutInput(System.Boolean)
  parent: Godot.Node
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: SetProcessShortcutInput(bool)
  nameWithType: Node.SetProcessShortcutInput(bool)
  fullName: Godot.Node.SetProcessShortcutInput(bool)
  nameWithType.vb: Node.SetProcessShortcutInput(Boolean)
  fullName.vb: Godot.Node.SetProcessShortcutInput(Boolean)
  name.vb: SetProcessShortcutInput(Boolean)
  spec.csharp:
  - uid: Godot.Node.SetProcessShortcutInput(System.Boolean)
    name: SetProcessShortcutInput
    isExternal: true
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Godot.Node.SetProcessShortcutInput(System.Boolean)
    name: SetProcessShortcutInput
    isExternal: true
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Godot.Node.IsProcessingShortcutInput
  commentId: M:Godot.Node.IsProcessingShortcutInput
  parent: Godot.Node
  isExternal: true
  name: IsProcessingShortcutInput()
  nameWithType: Node.IsProcessingShortcutInput()
  fullName: Godot.Node.IsProcessingShortcutInput()
  spec.csharp:
  - uid: Godot.Node.IsProcessingShortcutInput
    name: IsProcessingShortcutInput
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Godot.Node.IsProcessingShortcutInput
    name: IsProcessingShortcutInput
    isExternal: true
  - name: (
  - name: )
- uid: Godot.Node.SetProcessUnhandledInput(System.Boolean)
  commentId: M:Godot.Node.SetProcessUnhandledInput(System.Boolean)
  parent: Godot.Node
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: SetProcessUnhandledInput(bool)
  nameWithType: Node.SetProcessUnhandledInput(bool)
  fullName: Godot.Node.SetProcessUnhandledInput(bool)
  nameWithType.vb: Node.SetProcessUnhandledInput(Boolean)
  fullName.vb: Godot.Node.SetProcessUnhandledInput(Boolean)
  name.vb: SetProcessUnhandledInput(Boolean)
  spec.csharp:
  - uid: Godot.Node.SetProcessUnhandledInput(System.Boolean)
    name: SetProcessUnhandledInput
    isExternal: true
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Godot.Node.SetProcessUnhandledInput(System.Boolean)
    name: SetProcessUnhandledInput
    isExternal: true
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Godot.Node.IsProcessingUnhandledInput
  commentId: M:Godot.Node.IsProcessingUnhandledInput
  parent: Godot.Node
  isExternal: true
  name: IsProcessingUnhandledInput()
  nameWithType: Node.IsProcessingUnhandledInput()
  fullName: Godot.Node.IsProcessingUnhandledInput()
  spec.csharp:
  - uid: Godot.Node.IsProcessingUnhandledInput
    name: IsProcessingUnhandledInput
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Godot.Node.IsProcessingUnhandledInput
    name: IsProcessingUnhandledInput
    isExternal: true
  - name: (
  - name: )
- uid: Godot.Node.SetProcessUnhandledKeyInput(System.Boolean)
  commentId: M:Godot.Node.SetProcessUnhandledKeyInput(System.Boolean)
  parent: Godot.Node
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: SetProcessUnhandledKeyInput(bool)
  nameWithType: Node.SetProcessUnhandledKeyInput(bool)
  fullName: Godot.Node.SetProcessUnhandledKeyInput(bool)
  nameWithType.vb: Node.SetProcessUnhandledKeyInput(Boolean)
  fullName.vb: Godot.Node.SetProcessUnhandledKeyInput(Boolean)
  name.vb: SetProcessUnhandledKeyInput(Boolean)
  spec.csharp:
  - uid: Godot.Node.SetProcessUnhandledKeyInput(System.Boolean)
    name: SetProcessUnhandledKeyInput
    isExternal: true
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Godot.Node.SetProcessUnhandledKeyInput(System.Boolean)
    name: SetProcessUnhandledKeyInput
    isExternal: true
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Godot.Node.IsProcessingUnhandledKeyInput
  commentId: M:Godot.Node.IsProcessingUnhandledKeyInput
  parent: Godot.Node
  isExternal: true
  name: IsProcessingUnhandledKeyInput()
  nameWithType: Node.IsProcessingUnhandledKeyInput()
  fullName: Godot.Node.IsProcessingUnhandledKeyInput()
  spec.csharp:
  - uid: Godot.Node.IsProcessingUnhandledKeyInput
    name: IsProcessingUnhandledKeyInput
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Godot.Node.IsProcessingUnhandledKeyInput
    name: IsProcessingUnhandledKeyInput
    isExternal: true
  - name: (
  - name: )
- uid: Godot.Node.CanProcess
  commentId: M:Godot.Node.CanProcess
  parent: Godot.Node
  isExternal: true
  name: CanProcess()
  nameWithType: Node.CanProcess()
  fullName: Godot.Node.CanProcess()
  spec.csharp:
  - uid: Godot.Node.CanProcess
    name: CanProcess
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Godot.Node.CanProcess
    name: CanProcess
    isExternal: true
  - name: (
  - name: )
- uid: Godot.Node.SetDisplayFolded(System.Boolean)
  commentId: M:Godot.Node.SetDisplayFolded(System.Boolean)
  parent: Godot.Node
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: SetDisplayFolded(bool)
  nameWithType: Node.SetDisplayFolded(bool)
  fullName: Godot.Node.SetDisplayFolded(bool)
  nameWithType.vb: Node.SetDisplayFolded(Boolean)
  fullName.vb: Godot.Node.SetDisplayFolded(Boolean)
  name.vb: SetDisplayFolded(Boolean)
  spec.csharp:
  - uid: Godot.Node.SetDisplayFolded(System.Boolean)
    name: SetDisplayFolded
    isExternal: true
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Godot.Node.SetDisplayFolded(System.Boolean)
    name: SetDisplayFolded
    isExternal: true
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Godot.Node.IsDisplayedFolded
  commentId: M:Godot.Node.IsDisplayedFolded
  parent: Godot.Node
  isExternal: true
  name: IsDisplayedFolded()
  nameWithType: Node.IsDisplayedFolded()
  fullName: Godot.Node.IsDisplayedFolded()
  spec.csharp:
  - uid: Godot.Node.IsDisplayedFolded
    name: IsDisplayedFolded
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Godot.Node.IsDisplayedFolded
    name: IsDisplayedFolded
    isExternal: true
  - name: (
  - name: )
- uid: Godot.Node.SetProcessInternal(System.Boolean)
  commentId: M:Godot.Node.SetProcessInternal(System.Boolean)
  parent: Godot.Node
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: SetProcessInternal(bool)
  nameWithType: Node.SetProcessInternal(bool)
  fullName: Godot.Node.SetProcessInternal(bool)
  nameWithType.vb: Node.SetProcessInternal(Boolean)
  fullName.vb: Godot.Node.SetProcessInternal(Boolean)
  name.vb: SetProcessInternal(Boolean)
  spec.csharp:
  - uid: Godot.Node.SetProcessInternal(System.Boolean)
    name: SetProcessInternal
    isExternal: true
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Godot.Node.SetProcessInternal(System.Boolean)
    name: SetProcessInternal
    isExternal: true
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Godot.Node.IsProcessingInternal
  commentId: M:Godot.Node.IsProcessingInternal
  parent: Godot.Node
  isExternal: true
  name: IsProcessingInternal()
  nameWithType: Node.IsProcessingInternal()
  fullName: Godot.Node.IsProcessingInternal()
  spec.csharp:
  - uid: Godot.Node.IsProcessingInternal
    name: IsProcessingInternal
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Godot.Node.IsProcessingInternal
    name: IsProcessingInternal
    isExternal: true
  - name: (
  - name: )
- uid: Godot.Node.SetPhysicsProcessInternal(System.Boolean)
  commentId: M:Godot.Node.SetPhysicsProcessInternal(System.Boolean)
  parent: Godot.Node
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: SetPhysicsProcessInternal(bool)
  nameWithType: Node.SetPhysicsProcessInternal(bool)
  fullName: Godot.Node.SetPhysicsProcessInternal(bool)
  nameWithType.vb: Node.SetPhysicsProcessInternal(Boolean)
  fullName.vb: Godot.Node.SetPhysicsProcessInternal(Boolean)
  name.vb: SetPhysicsProcessInternal(Boolean)
  spec.csharp:
  - uid: Godot.Node.SetPhysicsProcessInternal(System.Boolean)
    name: SetPhysicsProcessInternal
    isExternal: true
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Godot.Node.SetPhysicsProcessInternal(System.Boolean)
    name: SetPhysicsProcessInternal
    isExternal: true
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Godot.Node.IsPhysicsProcessingInternal
  commentId: M:Godot.Node.IsPhysicsProcessingInternal
  parent: Godot.Node
  isExternal: true
  name: IsPhysicsProcessingInternal()
  nameWithType: Node.IsPhysicsProcessingInternal()
  fullName: Godot.Node.IsPhysicsProcessingInternal()
  spec.csharp:
  - uid: Godot.Node.IsPhysicsProcessingInternal
    name: IsPhysicsProcessingInternal
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Godot.Node.IsPhysicsProcessingInternal
    name: IsPhysicsProcessingInternal
    isExternal: true
  - name: (
  - name: )
- uid: Godot.Node.IsPhysicsInterpolated
  commentId: M:Godot.Node.IsPhysicsInterpolated
  parent: Godot.Node
  isExternal: true
  name: IsPhysicsInterpolated()
  nameWithType: Node.IsPhysicsInterpolated()
  fullName: Godot.Node.IsPhysicsInterpolated()
  spec.csharp:
  - uid: Godot.Node.IsPhysicsInterpolated
    name: IsPhysicsInterpolated
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Godot.Node.IsPhysicsInterpolated
    name: IsPhysicsInterpolated
    isExternal: true
  - name: (
  - name: )
- uid: Godot.Node.IsPhysicsInterpolatedAndEnabled
  commentId: M:Godot.Node.IsPhysicsInterpolatedAndEnabled
  parent: Godot.Node
  isExternal: true
  name: IsPhysicsInterpolatedAndEnabled()
  nameWithType: Node.IsPhysicsInterpolatedAndEnabled()
  fullName: Godot.Node.IsPhysicsInterpolatedAndEnabled()
  spec.csharp:
  - uid: Godot.Node.IsPhysicsInterpolatedAndEnabled
    name: IsPhysicsInterpolatedAndEnabled
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Godot.Node.IsPhysicsInterpolatedAndEnabled
    name: IsPhysicsInterpolatedAndEnabled
    isExternal: true
  - name: (
  - name: )
- uid: Godot.Node.ResetPhysicsInterpolation
  commentId: M:Godot.Node.ResetPhysicsInterpolation
  parent: Godot.Node
  isExternal: true
  name: ResetPhysicsInterpolation()
  nameWithType: Node.ResetPhysicsInterpolation()
  fullName: Godot.Node.ResetPhysicsInterpolation()
  spec.csharp:
  - uid: Godot.Node.ResetPhysicsInterpolation
    name: ResetPhysicsInterpolation
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Godot.Node.ResetPhysicsInterpolation
    name: ResetPhysicsInterpolation
    isExternal: true
  - name: (
  - name: )
- uid: Godot.Node.GetWindow
  commentId: M:Godot.Node.GetWindow
  parent: Godot.Node
  isExternal: true
  name: GetWindow()
  nameWithType: Node.GetWindow()
  fullName: Godot.Node.GetWindow()
  spec.csharp:
  - uid: Godot.Node.GetWindow
    name: GetWindow
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Godot.Node.GetWindow
    name: GetWindow
    isExternal: true
  - name: (
  - name: )
- uid: Godot.Node.GetLastExclusiveWindow
  commentId: M:Godot.Node.GetLastExclusiveWindow
  parent: Godot.Node
  isExternal: true
  name: GetLastExclusiveWindow()
  nameWithType: Node.GetLastExclusiveWindow()
  fullName: Godot.Node.GetLastExclusiveWindow()
  spec.csharp:
  - uid: Godot.Node.GetLastExclusiveWindow
    name: GetLastExclusiveWindow
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Godot.Node.GetLastExclusiveWindow
    name: GetLastExclusiveWindow
    isExternal: true
  - name: (
  - name: )
- uid: Godot.Node.GetTree
  commentId: M:Godot.Node.GetTree
  parent: Godot.Node
  isExternal: true
  name: GetTree()
  nameWithType: Node.GetTree()
  fullName: Godot.Node.GetTree()
  spec.csharp:
  - uid: Godot.Node.GetTree
    name: GetTree
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Godot.Node.GetTree
    name: GetTree
    isExternal: true
  - name: (
  - name: )
- uid: Godot.Node.CreateTween
  commentId: M:Godot.Node.CreateTween
  parent: Godot.Node
  isExternal: true
  name: CreateTween()
  nameWithType: Node.CreateTween()
  fullName: Godot.Node.CreateTween()
  spec.csharp:
  - uid: Godot.Node.CreateTween
    name: CreateTween
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Godot.Node.CreateTween
    name: CreateTween
    isExternal: true
  - name: (
  - name: )
- uid: Godot.Node.Duplicate(System.Int32)
  commentId: M:Godot.Node.Duplicate(System.Int32)
  parent: Godot.Node
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: Duplicate(int)
  nameWithType: Node.Duplicate(int)
  fullName: Godot.Node.Duplicate(int)
  nameWithType.vb: Node.Duplicate(Integer)
  fullName.vb: Godot.Node.Duplicate(Integer)
  name.vb: Duplicate(Integer)
  spec.csharp:
  - uid: Godot.Node.Duplicate(System.Int32)
    name: Duplicate
    isExternal: true
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: Godot.Node.Duplicate(System.Int32)
    name: Duplicate
    isExternal: true
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: Godot.Node.ReplaceBy(Godot.Node,System.Boolean)
  commentId: M:Godot.Node.ReplaceBy(Godot.Node,System.Boolean)
  parent: Godot.Node
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: ReplaceBy(Node, bool)
  nameWithType: Node.ReplaceBy(Node, bool)
  fullName: Godot.Node.ReplaceBy(Godot.Node, bool)
  nameWithType.vb: Node.ReplaceBy(Node, Boolean)
  fullName.vb: Godot.Node.ReplaceBy(Godot.Node, Boolean)
  name.vb: ReplaceBy(Node, Boolean)
  spec.csharp:
  - uid: Godot.Node.ReplaceBy(Godot.Node,System.Boolean)
    name: ReplaceBy
    isExternal: true
  - name: (
  - uid: Godot.Node
    name: Node
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Godot.Node.ReplaceBy(Godot.Node,System.Boolean)
    name: ReplaceBy
    isExternal: true
  - name: (
  - uid: Godot.Node
    name: Node
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Godot.Node.SetSceneInstanceLoadPlaceholder(System.Boolean)
  commentId: M:Godot.Node.SetSceneInstanceLoadPlaceholder(System.Boolean)
  parent: Godot.Node
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: SetSceneInstanceLoadPlaceholder(bool)
  nameWithType: Node.SetSceneInstanceLoadPlaceholder(bool)
  fullName: Godot.Node.SetSceneInstanceLoadPlaceholder(bool)
  nameWithType.vb: Node.SetSceneInstanceLoadPlaceholder(Boolean)
  fullName.vb: Godot.Node.SetSceneInstanceLoadPlaceholder(Boolean)
  name.vb: SetSceneInstanceLoadPlaceholder(Boolean)
  spec.csharp:
  - uid: Godot.Node.SetSceneInstanceLoadPlaceholder(System.Boolean)
    name: SetSceneInstanceLoadPlaceholder
    isExternal: true
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Godot.Node.SetSceneInstanceLoadPlaceholder(System.Boolean)
    name: SetSceneInstanceLoadPlaceholder
    isExternal: true
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Godot.Node.GetSceneInstanceLoadPlaceholder
  commentId: M:Godot.Node.GetSceneInstanceLoadPlaceholder
  parent: Godot.Node
  isExternal: true
  name: GetSceneInstanceLoadPlaceholder()
  nameWithType: Node.GetSceneInstanceLoadPlaceholder()
  fullName: Godot.Node.GetSceneInstanceLoadPlaceholder()
  spec.csharp:
  - uid: Godot.Node.GetSceneInstanceLoadPlaceholder
    name: GetSceneInstanceLoadPlaceholder
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Godot.Node.GetSceneInstanceLoadPlaceholder
    name: GetSceneInstanceLoadPlaceholder
    isExternal: true
  - name: (
  - name: )
- uid: Godot.Node.SetEditableInstance(Godot.Node,System.Boolean)
  commentId: M:Godot.Node.SetEditableInstance(Godot.Node,System.Boolean)
  parent: Godot.Node
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: SetEditableInstance(Node, bool)
  nameWithType: Node.SetEditableInstance(Node, bool)
  fullName: Godot.Node.SetEditableInstance(Godot.Node, bool)
  nameWithType.vb: Node.SetEditableInstance(Node, Boolean)
  fullName.vb: Godot.Node.SetEditableInstance(Godot.Node, Boolean)
  name.vb: SetEditableInstance(Node, Boolean)
  spec.csharp:
  - uid: Godot.Node.SetEditableInstance(Godot.Node,System.Boolean)
    name: SetEditableInstance
    isExternal: true
  - name: (
  - uid: Godot.Node
    name: Node
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Godot.Node.SetEditableInstance(Godot.Node,System.Boolean)
    name: SetEditableInstance
    isExternal: true
  - name: (
  - uid: Godot.Node
    name: Node
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Godot.Node.IsEditableInstance(Godot.Node)
  commentId: M:Godot.Node.IsEditableInstance(Godot.Node)
  parent: Godot.Node
  isExternal: true
  name: IsEditableInstance(Node)
  nameWithType: Node.IsEditableInstance(Node)
  fullName: Godot.Node.IsEditableInstance(Godot.Node)
  spec.csharp:
  - uid: Godot.Node.IsEditableInstance(Godot.Node)
    name: IsEditableInstance
    isExternal: true
  - name: (
  - uid: Godot.Node
    name: Node
    isExternal: true
  - name: )
  spec.vb:
  - uid: Godot.Node.IsEditableInstance(Godot.Node)
    name: IsEditableInstance
    isExternal: true
  - name: (
  - uid: Godot.Node
    name: Node
    isExternal: true
  - name: )
- uid: Godot.Node.GetViewport
  commentId: M:Godot.Node.GetViewport
  parent: Godot.Node
  isExternal: true
  name: GetViewport()
  nameWithType: Node.GetViewport()
  fullName: Godot.Node.GetViewport()
  spec.csharp:
  - uid: Godot.Node.GetViewport
    name: GetViewport
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Godot.Node.GetViewport
    name: GetViewport
    isExternal: true
  - name: (
  - name: )
- uid: Godot.Node.QueueFree
  commentId: M:Godot.Node.QueueFree
  parent: Godot.Node
  isExternal: true
  name: QueueFree()
  nameWithType: Node.QueueFree()
  fullName: Godot.Node.QueueFree()
  spec.csharp:
  - uid: Godot.Node.QueueFree
    name: QueueFree
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Godot.Node.QueueFree
    name: QueueFree
    isExternal: true
  - name: (
  - name: )
- uid: Godot.Node.RequestReady
  commentId: M:Godot.Node.RequestReady
  parent: Godot.Node
  isExternal: true
  name: RequestReady()
  nameWithType: Node.RequestReady()
  fullName: Godot.Node.RequestReady()
  spec.csharp:
  - uid: Godot.Node.RequestReady
    name: RequestReady
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Godot.Node.RequestReady
    name: RequestReady
    isExternal: true
  - name: (
  - name: )
- uid: Godot.Node.IsNodeReady
  commentId: M:Godot.Node.IsNodeReady
  parent: Godot.Node
  isExternal: true
  name: IsNodeReady()
  nameWithType: Node.IsNodeReady()
  fullName: Godot.Node.IsNodeReady()
  spec.csharp:
  - uid: Godot.Node.IsNodeReady
    name: IsNodeReady
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Godot.Node.IsNodeReady
    name: IsNodeReady
    isExternal: true
  - name: (
  - name: )
- uid: Godot.Node.SetMultiplayerAuthority(System.Int32,System.Boolean)
  commentId: M:Godot.Node.SetMultiplayerAuthority(System.Int32,System.Boolean)
  parent: Godot.Node
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: SetMultiplayerAuthority(int, bool)
  nameWithType: Node.SetMultiplayerAuthority(int, bool)
  fullName: Godot.Node.SetMultiplayerAuthority(int, bool)
  nameWithType.vb: Node.SetMultiplayerAuthority(Integer, Boolean)
  fullName.vb: Godot.Node.SetMultiplayerAuthority(Integer, Boolean)
  name.vb: SetMultiplayerAuthority(Integer, Boolean)
  spec.csharp:
  - uid: Godot.Node.SetMultiplayerAuthority(System.Int32,System.Boolean)
    name: SetMultiplayerAuthority
    isExternal: true
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Godot.Node.SetMultiplayerAuthority(System.Int32,System.Boolean)
    name: SetMultiplayerAuthority
    isExternal: true
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Godot.Node.GetMultiplayerAuthority
  commentId: M:Godot.Node.GetMultiplayerAuthority
  parent: Godot.Node
  isExternal: true
  name: GetMultiplayerAuthority()
  nameWithType: Node.GetMultiplayerAuthority()
  fullName: Godot.Node.GetMultiplayerAuthority()
  spec.csharp:
  - uid: Godot.Node.GetMultiplayerAuthority
    name: GetMultiplayerAuthority
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Godot.Node.GetMultiplayerAuthority
    name: GetMultiplayerAuthority
    isExternal: true
  - name: (
  - name: )
- uid: Godot.Node.IsMultiplayerAuthority
  commentId: M:Godot.Node.IsMultiplayerAuthority
  parent: Godot.Node
  isExternal: true
  name: IsMultiplayerAuthority()
  nameWithType: Node.IsMultiplayerAuthority()
  fullName: Godot.Node.IsMultiplayerAuthority()
  spec.csharp:
  - uid: Godot.Node.IsMultiplayerAuthority
    name: IsMultiplayerAuthority
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Godot.Node.IsMultiplayerAuthority
    name: IsMultiplayerAuthority
    isExternal: true
  - name: (
  - name: )
- uid: Godot.Node.RpcConfig(Godot.StringName,Godot.Variant)
  commentId: M:Godot.Node.RpcConfig(Godot.StringName,Godot.Variant)
  parent: Godot.Node
  isExternal: true
  name: RpcConfig(StringName, Variant)
  nameWithType: Node.RpcConfig(StringName, Variant)
  fullName: Godot.Node.RpcConfig(Godot.StringName, Godot.Variant)
  spec.csharp:
  - uid: Godot.Node.RpcConfig(Godot.StringName,Godot.Variant)
    name: RpcConfig
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.Variant
    name: Variant
    isExternal: true
  - name: )
  spec.vb:
  - uid: Godot.Node.RpcConfig(Godot.StringName,Godot.Variant)
    name: RpcConfig
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.Variant
    name: Variant
    isExternal: true
  - name: )
- uid: Godot.Node.Atr(System.String,Godot.StringName)
  commentId: M:Godot.Node.Atr(System.String,Godot.StringName)
  parent: Godot.Node
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: Atr(string, StringName)
  nameWithType: Node.Atr(string, StringName)
  fullName: Godot.Node.Atr(string, Godot.StringName)
  nameWithType.vb: Node.Atr(String, StringName)
  fullName.vb: Godot.Node.Atr(String, Godot.StringName)
  name.vb: Atr(String, StringName)
  spec.csharp:
  - uid: Godot.Node.Atr(System.String,Godot.StringName)
    name: Atr
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: )
  spec.vb:
  - uid: Godot.Node.Atr(System.String,Godot.StringName)
    name: Atr
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: )
- uid: Godot.Node.AtrN(System.String,Godot.StringName,System.Int32,Godot.StringName)
  commentId: M:Godot.Node.AtrN(System.String,Godot.StringName,System.Int32,Godot.StringName)
  parent: Godot.Node
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: AtrN(string, StringName, int, StringName)
  nameWithType: Node.AtrN(string, StringName, int, StringName)
  fullName: Godot.Node.AtrN(string, Godot.StringName, int, Godot.StringName)
  nameWithType.vb: Node.AtrN(String, StringName, Integer, StringName)
  fullName.vb: Godot.Node.AtrN(String, Godot.StringName, Integer, Godot.StringName)
  name.vb: AtrN(String, StringName, Integer, StringName)
  spec.csharp:
  - uid: Godot.Node.AtrN(System.String,Godot.StringName,System.Int32,Godot.StringName)
    name: AtrN
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: )
  spec.vb:
  - uid: Godot.Node.AtrN(System.String,Godot.StringName,System.Int32,Godot.StringName)
    name: AtrN
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: )
- uid: Godot.Node.Rpc(Godot.StringName,Godot.Variant[])
  commentId: M:Godot.Node.Rpc(Godot.StringName,Godot.Variant[])
  parent: Godot.Node
  isExternal: true
  name: Rpc(StringName, params Variant[])
  nameWithType: Node.Rpc(StringName, params Variant[])
  fullName: Godot.Node.Rpc(Godot.StringName, params Godot.Variant[])
  nameWithType.vb: Node.Rpc(StringName, ParamArray Variant())
  fullName.vb: Godot.Node.Rpc(Godot.StringName, ParamArray Godot.Variant())
  name.vb: Rpc(StringName, ParamArray Variant())
  spec.csharp:
  - uid: Godot.Node.Rpc(Godot.StringName,Godot.Variant[])
    name: Rpc
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: ','
  - name: " "
  - name: params
  - name: " "
  - uid: Godot.Variant
    name: Variant
    isExternal: true
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: Godot.Node.Rpc(Godot.StringName,Godot.Variant[])
    name: Rpc
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: ','
  - name: " "
  - name: ParamArray
  - name: " "
  - uid: Godot.Variant
    name: Variant
    isExternal: true
  - name: (
  - name: )
  - name: )
- uid: Godot.Node.RpcId(System.Int64,Godot.StringName,Godot.Variant[])
  commentId: M:Godot.Node.RpcId(System.Int64,Godot.StringName,Godot.Variant[])
  parent: Godot.Node
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int64
  name: RpcId(long, StringName, params Variant[])
  nameWithType: Node.RpcId(long, StringName, params Variant[])
  fullName: Godot.Node.RpcId(long, Godot.StringName, params Godot.Variant[])
  nameWithType.vb: Node.RpcId(Long, StringName, ParamArray Variant())
  fullName.vb: Godot.Node.RpcId(Long, Godot.StringName, ParamArray Godot.Variant())
  name.vb: RpcId(Long, StringName, ParamArray Variant())
  spec.csharp:
  - uid: Godot.Node.RpcId(System.Int64,Godot.StringName,Godot.Variant[])
    name: RpcId
    isExternal: true
  - name: (
  - uid: System.Int64
    name: long
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int64
  - name: ','
  - name: " "
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: ','
  - name: " "
  - name: params
  - name: " "
  - uid: Godot.Variant
    name: Variant
    isExternal: true
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: Godot.Node.RpcId(System.Int64,Godot.StringName,Godot.Variant[])
    name: RpcId
    isExternal: true
  - name: (
  - uid: System.Int64
    name: Long
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int64
  - name: ','
  - name: " "
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: ','
  - name: " "
  - name: ParamArray
  - name: " "
  - uid: Godot.Variant
    name: Variant
    isExternal: true
  - name: (
  - name: )
  - name: )
- uid: Godot.Node.UpdateConfigurationWarnings
  commentId: M:Godot.Node.UpdateConfigurationWarnings
  parent: Godot.Node
  isExternal: true
  name: UpdateConfigurationWarnings()
  nameWithType: Node.UpdateConfigurationWarnings()
  fullName: Godot.Node.UpdateConfigurationWarnings()
  spec.csharp:
  - uid: Godot.Node.UpdateConfigurationWarnings
    name: UpdateConfigurationWarnings
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Godot.Node.UpdateConfigurationWarnings
    name: UpdateConfigurationWarnings
    isExternal: true
  - name: (
  - name: )
- uid: Godot.Node.CallDeferredThreadGroup(Godot.StringName,Godot.Variant[])
  commentId: M:Godot.Node.CallDeferredThreadGroup(Godot.StringName,Godot.Variant[])
  parent: Godot.Node
  isExternal: true
  name: CallDeferredThreadGroup(StringName, params Variant[])
  nameWithType: Node.CallDeferredThreadGroup(StringName, params Variant[])
  fullName: Godot.Node.CallDeferredThreadGroup(Godot.StringName, params Godot.Variant[])
  nameWithType.vb: Node.CallDeferredThreadGroup(StringName, ParamArray Variant())
  fullName.vb: Godot.Node.CallDeferredThreadGroup(Godot.StringName, ParamArray Godot.Variant())
  name.vb: CallDeferredThreadGroup(StringName, ParamArray Variant())
  spec.csharp:
  - uid: Godot.Node.CallDeferredThreadGroup(Godot.StringName,Godot.Variant[])
    name: CallDeferredThreadGroup
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: ','
  - name: " "
  - name: params
  - name: " "
  - uid: Godot.Variant
    name: Variant
    isExternal: true
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: Godot.Node.CallDeferredThreadGroup(Godot.StringName,Godot.Variant[])
    name: CallDeferredThreadGroup
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: ','
  - name: " "
  - name: ParamArray
  - name: " "
  - uid: Godot.Variant
    name: Variant
    isExternal: true
  - name: (
  - name: )
  - name: )
- uid: Godot.Node.SetDeferredThreadGroup(Godot.StringName,Godot.Variant)
  commentId: M:Godot.Node.SetDeferredThreadGroup(Godot.StringName,Godot.Variant)
  parent: Godot.Node
  isExternal: true
  name: SetDeferredThreadGroup(StringName, Variant)
  nameWithType: Node.SetDeferredThreadGroup(StringName, Variant)
  fullName: Godot.Node.SetDeferredThreadGroup(Godot.StringName, Godot.Variant)
  spec.csharp:
  - uid: Godot.Node.SetDeferredThreadGroup(Godot.StringName,Godot.Variant)
    name: SetDeferredThreadGroup
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.Variant
    name: Variant
    isExternal: true
  - name: )
  spec.vb:
  - uid: Godot.Node.SetDeferredThreadGroup(Godot.StringName,Godot.Variant)
    name: SetDeferredThreadGroup
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.Variant
    name: Variant
    isExternal: true
  - name: )
- uid: Godot.Node.NotifyDeferredThreadGroup(System.Int32)
  commentId: M:Godot.Node.NotifyDeferredThreadGroup(System.Int32)
  parent: Godot.Node
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: NotifyDeferredThreadGroup(int)
  nameWithType: Node.NotifyDeferredThreadGroup(int)
  fullName: Godot.Node.NotifyDeferredThreadGroup(int)
  nameWithType.vb: Node.NotifyDeferredThreadGroup(Integer)
  fullName.vb: Godot.Node.NotifyDeferredThreadGroup(Integer)
  name.vb: NotifyDeferredThreadGroup(Integer)
  spec.csharp:
  - uid: Godot.Node.NotifyDeferredThreadGroup(System.Int32)
    name: NotifyDeferredThreadGroup
    isExternal: true
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: Godot.Node.NotifyDeferredThreadGroup(System.Int32)
    name: NotifyDeferredThreadGroup
    isExternal: true
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: Godot.Node.CallThreadSafe(Godot.StringName,Godot.Variant[])
  commentId: M:Godot.Node.CallThreadSafe(Godot.StringName,Godot.Variant[])
  parent: Godot.Node
  isExternal: true
  name: CallThreadSafe(StringName, params Variant[])
  nameWithType: Node.CallThreadSafe(StringName, params Variant[])
  fullName: Godot.Node.CallThreadSafe(Godot.StringName, params Godot.Variant[])
  nameWithType.vb: Node.CallThreadSafe(StringName, ParamArray Variant())
  fullName.vb: Godot.Node.CallThreadSafe(Godot.StringName, ParamArray Godot.Variant())
  name.vb: CallThreadSafe(StringName, ParamArray Variant())
  spec.csharp:
  - uid: Godot.Node.CallThreadSafe(Godot.StringName,Godot.Variant[])
    name: CallThreadSafe
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: ','
  - name: " "
  - name: params
  - name: " "
  - uid: Godot.Variant
    name: Variant
    isExternal: true
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: Godot.Node.CallThreadSafe(Godot.StringName,Godot.Variant[])
    name: CallThreadSafe
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: ','
  - name: " "
  - name: ParamArray
  - name: " "
  - uid: Godot.Variant
    name: Variant
    isExternal: true
  - name: (
  - name: )
  - name: )
- uid: Godot.Node.SetThreadSafe(Godot.StringName,Godot.Variant)
  commentId: M:Godot.Node.SetThreadSafe(Godot.StringName,Godot.Variant)
  parent: Godot.Node
  isExternal: true
  name: SetThreadSafe(StringName, Variant)
  nameWithType: Node.SetThreadSafe(StringName, Variant)
  fullName: Godot.Node.SetThreadSafe(Godot.StringName, Godot.Variant)
  spec.csharp:
  - uid: Godot.Node.SetThreadSafe(Godot.StringName,Godot.Variant)
    name: SetThreadSafe
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.Variant
    name: Variant
    isExternal: true
  - name: )
  spec.vb:
  - uid: Godot.Node.SetThreadSafe(Godot.StringName,Godot.Variant)
    name: SetThreadSafe
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.Variant
    name: Variant
    isExternal: true
  - name: )
- uid: Godot.Node.NotifyThreadSafe(System.Int32)
  commentId: M:Godot.Node.NotifyThreadSafe(System.Int32)
  parent: Godot.Node
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: NotifyThreadSafe(int)
  nameWithType: Node.NotifyThreadSafe(int)
  fullName: Godot.Node.NotifyThreadSafe(int)
  nameWithType.vb: Node.NotifyThreadSafe(Integer)
  fullName.vb: Godot.Node.NotifyThreadSafe(Integer)
  name.vb: NotifyThreadSafe(Integer)
  spec.csharp:
  - uid: Godot.Node.NotifyThreadSafe(System.Int32)
    name: NotifyThreadSafe
    isExternal: true
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: Godot.Node.NotifyThreadSafe(System.Int32)
    name: NotifyThreadSafe
    isExternal: true
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: Godot.Node.InvokeGodotClassMethod(Godot.NativeInterop.godot_string_name@,Godot.NativeInterop.NativeVariantPtrArgs,Godot.NativeInterop.godot_variant@)
  commentId: M:Godot.Node.InvokeGodotClassMethod(Godot.NativeInterop.godot_string_name@,Godot.NativeInterop.NativeVariantPtrArgs,Godot.NativeInterop.godot_variant@)
  parent: Godot.Node
  isExternal: true
  name: InvokeGodotClassMethod(in godot_string_name, NativeVariantPtrArgs, out godot_variant)
  nameWithType: Node.InvokeGodotClassMethod(in godot_string_name, NativeVariantPtrArgs, out godot_variant)
  fullName: Godot.Node.InvokeGodotClassMethod(in Godot.NativeInterop.godot_string_name, Godot.NativeInterop.NativeVariantPtrArgs, out Godot.NativeInterop.godot_variant)
  nameWithType.vb: Node.InvokeGodotClassMethod(godot_string_name, NativeVariantPtrArgs, godot_variant)
  fullName.vb: Godot.Node.InvokeGodotClassMethod(Godot.NativeInterop.godot_string_name, Godot.NativeInterop.NativeVariantPtrArgs, Godot.NativeInterop.godot_variant)
  name.vb: InvokeGodotClassMethod(godot_string_name, NativeVariantPtrArgs, godot_variant)
  spec.csharp:
  - uid: Godot.Node.InvokeGodotClassMethod(Godot.NativeInterop.godot_string_name@,Godot.NativeInterop.NativeVariantPtrArgs,Godot.NativeInterop.godot_variant@)
    name: InvokeGodotClassMethod
    isExternal: true
  - name: (
  - name: in
  - name: " "
  - uid: Godot.NativeInterop.godot_string_name
    name: godot_string_name
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.NativeInterop.NativeVariantPtrArgs
    name: NativeVariantPtrArgs
    isExternal: true
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - uid: Godot.NativeInterop.godot_variant
    name: godot_variant
    isExternal: true
  - name: )
  spec.vb:
  - uid: Godot.Node.InvokeGodotClassMethod(Godot.NativeInterop.godot_string_name@,Godot.NativeInterop.NativeVariantPtrArgs,Godot.NativeInterop.godot_variant@)
    name: InvokeGodotClassMethod
    isExternal: true
  - name: (
  - uid: Godot.NativeInterop.godot_string_name
    name: godot_string_name
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.NativeInterop.NativeVariantPtrArgs
    name: NativeVariantPtrArgs
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.NativeInterop.godot_variant
    name: godot_variant
    isExternal: true
  - name: )
- uid: Godot.Node.HasGodotClassMethod(Godot.NativeInterop.godot_string_name@)
  commentId: M:Godot.Node.HasGodotClassMethod(Godot.NativeInterop.godot_string_name@)
  parent: Godot.Node
  isExternal: true
  name: HasGodotClassMethod(in godot_string_name)
  nameWithType: Node.HasGodotClassMethod(in godot_string_name)
  fullName: Godot.Node.HasGodotClassMethod(in Godot.NativeInterop.godot_string_name)
  nameWithType.vb: Node.HasGodotClassMethod(godot_string_name)
  fullName.vb: Godot.Node.HasGodotClassMethod(Godot.NativeInterop.godot_string_name)
  name.vb: HasGodotClassMethod(godot_string_name)
  spec.csharp:
  - uid: Godot.Node.HasGodotClassMethod(Godot.NativeInterop.godot_string_name@)
    name: HasGodotClassMethod
    isExternal: true
  - name: (
  - name: in
  - name: " "
  - uid: Godot.NativeInterop.godot_string_name
    name: godot_string_name
    isExternal: true
  - name: )
  spec.vb:
  - uid: Godot.Node.HasGodotClassMethod(Godot.NativeInterop.godot_string_name@)
    name: HasGodotClassMethod
    isExternal: true
  - name: (
  - uid: Godot.NativeInterop.godot_string_name
    name: godot_string_name
    isExternal: true
  - name: )
- uid: Godot.Node.HasGodotClassSignal(Godot.NativeInterop.godot_string_name@)
  commentId: M:Godot.Node.HasGodotClassSignal(Godot.NativeInterop.godot_string_name@)
  parent: Godot.Node
  isExternal: true
  name: HasGodotClassSignal(in godot_string_name)
  nameWithType: Node.HasGodotClassSignal(in godot_string_name)
  fullName: Godot.Node.HasGodotClassSignal(in Godot.NativeInterop.godot_string_name)
  nameWithType.vb: Node.HasGodotClassSignal(godot_string_name)
  fullName.vb: Godot.Node.HasGodotClassSignal(Godot.NativeInterop.godot_string_name)
  name.vb: HasGodotClassSignal(godot_string_name)
  spec.csharp:
  - uid: Godot.Node.HasGodotClassSignal(Godot.NativeInterop.godot_string_name@)
    name: HasGodotClassSignal
    isExternal: true
  - name: (
  - name: in
  - name: " "
  - uid: Godot.NativeInterop.godot_string_name
    name: godot_string_name
    isExternal: true
  - name: )
  spec.vb:
  - uid: Godot.Node.HasGodotClassSignal(Godot.NativeInterop.godot_string_name@)
    name: HasGodotClassSignal
    isExternal: true
  - name: (
  - uid: Godot.NativeInterop.godot_string_name
    name: godot_string_name
    isExternal: true
  - name: )
- uid: Godot.Node.Name
  commentId: P:Godot.Node.Name
  parent: Godot.Node
  isExternal: true
  name: Name
  nameWithType: Node.Name
  fullName: Godot.Node.Name
- uid: Godot.Node.UniqueNameInOwner
  commentId: P:Godot.Node.UniqueNameInOwner
  parent: Godot.Node
  isExternal: true
  name: UniqueNameInOwner
  nameWithType: Node.UniqueNameInOwner
  fullName: Godot.Node.UniqueNameInOwner
- uid: Godot.Node.SceneFilePath
  commentId: P:Godot.Node.SceneFilePath
  parent: Godot.Node
  isExternal: true
  name: SceneFilePath
  nameWithType: Node.SceneFilePath
  fullName: Godot.Node.SceneFilePath
- uid: Godot.Node.Owner
  commentId: P:Godot.Node.Owner
  parent: Godot.Node
  isExternal: true
  name: Owner
  nameWithType: Node.Owner
  fullName: Godot.Node.Owner
- uid: Godot.Node.Multiplayer
  commentId: P:Godot.Node.Multiplayer
  parent: Godot.Node
  isExternal: true
  name: Multiplayer
  nameWithType: Node.Multiplayer
  fullName: Godot.Node.Multiplayer
- uid: Godot.Node.ProcessMode
  commentId: P:Godot.Node.ProcessMode
  parent: Godot.Node
  isExternal: true
  name: ProcessMode
  nameWithType: Node.ProcessMode
  fullName: Godot.Node.ProcessMode
- uid: Godot.Node.ProcessPriority
  commentId: P:Godot.Node.ProcessPriority
  parent: Godot.Node
  isExternal: true
  name: ProcessPriority
  nameWithType: Node.ProcessPriority
  fullName: Godot.Node.ProcessPriority
- uid: Godot.Node.ProcessPhysicsPriority
  commentId: P:Godot.Node.ProcessPhysicsPriority
  parent: Godot.Node
  isExternal: true
  name: ProcessPhysicsPriority
  nameWithType: Node.ProcessPhysicsPriority
  fullName: Godot.Node.ProcessPhysicsPriority
- uid: Godot.Node.ProcessThreadGroup
  commentId: P:Godot.Node.ProcessThreadGroup
  parent: Godot.Node
  isExternal: true
  name: ProcessThreadGroup
  nameWithType: Node.ProcessThreadGroup
  fullName: Godot.Node.ProcessThreadGroup
- uid: Godot.Node.ProcessThreadGroupOrder
  commentId: P:Godot.Node.ProcessThreadGroupOrder
  parent: Godot.Node
  isExternal: true
  name: ProcessThreadGroupOrder
  nameWithType: Node.ProcessThreadGroupOrder
  fullName: Godot.Node.ProcessThreadGroupOrder
- uid: Godot.Node.ProcessThreadMessages
  commentId: P:Godot.Node.ProcessThreadMessages
  parent: Godot.Node
  isExternal: true
  name: ProcessThreadMessages
  nameWithType: Node.ProcessThreadMessages
  fullName: Godot.Node.ProcessThreadMessages
- uid: Godot.Node.PhysicsInterpolationMode
  commentId: P:Godot.Node.PhysicsInterpolationMode
  parent: Godot.Node
  isExternal: true
  name: PhysicsInterpolationMode
  nameWithType: Node.PhysicsInterpolationMode
  fullName: Godot.Node.PhysicsInterpolationMode
- uid: Godot.Node.AutoTranslateMode
  commentId: P:Godot.Node.AutoTranslateMode
  parent: Godot.Node
  isExternal: true
  name: AutoTranslateMode
  nameWithType: Node.AutoTranslateMode
  fullName: Godot.Node.AutoTranslateMode
- uid: Godot.Node.EditorDescription
  commentId: P:Godot.Node.EditorDescription
  parent: Godot.Node
  isExternal: true
  name: EditorDescription
  nameWithType: Node.EditorDescription
  fullName: Godot.Node.EditorDescription
- uid: Godot.Node.Ready
  commentId: E:Godot.Node.Ready
  parent: Godot.Node
  isExternal: true
  name: Ready
  nameWithType: Node.Ready
  fullName: Godot.Node.Ready
- uid: Godot.Node.Renamed
  commentId: E:Godot.Node.Renamed
  parent: Godot.Node
  isExternal: true
  name: Renamed
  nameWithType: Node.Renamed
  fullName: Godot.Node.Renamed
- uid: Godot.Node.TreeEntered
  commentId: E:Godot.Node.TreeEntered
  parent: Godot.Node
  isExternal: true
  name: TreeEntered
  nameWithType: Node.TreeEntered
  fullName: Godot.Node.TreeEntered
- uid: Godot.Node.TreeExiting
  commentId: E:Godot.Node.TreeExiting
  parent: Godot.Node
  isExternal: true
  name: TreeExiting
  nameWithType: Node.TreeExiting
  fullName: Godot.Node.TreeExiting
- uid: Godot.Node.TreeExited
  commentId: E:Godot.Node.TreeExited
  parent: Godot.Node
  isExternal: true
  name: TreeExited
  nameWithType: Node.TreeExited
  fullName: Godot.Node.TreeExited
- uid: Godot.Node.ChildEnteredTree
  commentId: E:Godot.Node.ChildEnteredTree
  parent: Godot.Node
  isExternal: true
  name: ChildEnteredTree
  nameWithType: Node.ChildEnteredTree
  fullName: Godot.Node.ChildEnteredTree
- uid: Godot.Node.ChildExitingTree
  commentId: E:Godot.Node.ChildExitingTree
  parent: Godot.Node
  isExternal: true
  name: ChildExitingTree
  nameWithType: Node.ChildExitingTree
  fullName: Godot.Node.ChildExitingTree
- uid: Godot.Node.ChildOrderChanged
  commentId: E:Godot.Node.ChildOrderChanged
  parent: Godot.Node
  isExternal: true
  name: ChildOrderChanged
  nameWithType: Node.ChildOrderChanged
  fullName: Godot.Node.ChildOrderChanged
- uid: Godot.Node.ReplacingBy
  commentId: E:Godot.Node.ReplacingBy
  parent: Godot.Node
  isExternal: true
  name: ReplacingBy
  nameWithType: Node.ReplacingBy
  fullName: Godot.Node.ReplacingBy
- uid: Godot.Node.EditorDescriptionChanged
  commentId: E:Godot.Node.EditorDescriptionChanged
  parent: Godot.Node
  isExternal: true
  name: EditorDescriptionChanged
  nameWithType: Node.EditorDescriptionChanged
  fullName: Godot.Node.EditorDescriptionChanged
- uid: Godot.GodotObject.NotificationPostinitialize
  commentId: F:Godot.GodotObject.NotificationPostinitialize
  parent: Godot.GodotObject
  isExternal: true
  name: NotificationPostinitialize
  nameWithType: GodotObject.NotificationPostinitialize
  fullName: Godot.GodotObject.NotificationPostinitialize
- uid: Godot.GodotObject.NotificationPredelete
  commentId: F:Godot.GodotObject.NotificationPredelete
  parent: Godot.GodotObject
  isExternal: true
  name: NotificationPredelete
  nameWithType: GodotObject.NotificationPredelete
  fullName: Godot.GodotObject.NotificationPredelete
- uid: Godot.GodotObject.NotificationExtensionReloaded
  commentId: F:Godot.GodotObject.NotificationExtensionReloaded
  parent: Godot.GodotObject
  isExternal: true
  name: NotificationExtensionReloaded
  nameWithType: GodotObject.NotificationExtensionReloaded
  fullName: Godot.GodotObject.NotificationExtensionReloaded
- uid: Godot.GodotObject.InstanceFromId(System.UInt64)
  commentId: M:Godot.GodotObject.InstanceFromId(System.UInt64)
  parent: Godot.GodotObject
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.uint64
  name: InstanceFromId(ulong)
  nameWithType: GodotObject.InstanceFromId(ulong)
  fullName: Godot.GodotObject.InstanceFromId(ulong)
  nameWithType.vb: GodotObject.InstanceFromId(ULong)
  fullName.vb: Godot.GodotObject.InstanceFromId(ULong)
  name.vb: InstanceFromId(ULong)
  spec.csharp:
  - uid: Godot.GodotObject.InstanceFromId(System.UInt64)
    name: InstanceFromId
    isExternal: true
  - name: (
  - uid: System.UInt64
    name: ulong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: )
  spec.vb:
  - uid: Godot.GodotObject.InstanceFromId(System.UInt64)
    name: InstanceFromId
    isExternal: true
  - name: (
  - uid: System.UInt64
    name: ULong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: )
- uid: Godot.GodotObject.IsInstanceIdValid(System.UInt64)
  commentId: M:Godot.GodotObject.IsInstanceIdValid(System.UInt64)
  parent: Godot.GodotObject
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.uint64
  name: IsInstanceIdValid(ulong)
  nameWithType: GodotObject.IsInstanceIdValid(ulong)
  fullName: Godot.GodotObject.IsInstanceIdValid(ulong)
  nameWithType.vb: GodotObject.IsInstanceIdValid(ULong)
  fullName.vb: Godot.GodotObject.IsInstanceIdValid(ULong)
  name.vb: IsInstanceIdValid(ULong)
  spec.csharp:
  - uid: Godot.GodotObject.IsInstanceIdValid(System.UInt64)
    name: IsInstanceIdValid
    isExternal: true
  - name: (
  - uid: System.UInt64
    name: ulong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: )
  spec.vb:
  - uid: Godot.GodotObject.IsInstanceIdValid(System.UInt64)
    name: IsInstanceIdValid
    isExternal: true
  - name: (
  - uid: System.UInt64
    name: ULong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: )
- uid: Godot.GodotObject.IsInstanceValid(Godot.GodotObject)
  commentId: M:Godot.GodotObject.IsInstanceValid(Godot.GodotObject)
  parent: Godot.GodotObject
  isExternal: true
  name: IsInstanceValid(GodotObject)
  nameWithType: GodotObject.IsInstanceValid(GodotObject)
  fullName: Godot.GodotObject.IsInstanceValid(Godot.GodotObject)
  spec.csharp:
  - uid: Godot.GodotObject.IsInstanceValid(Godot.GodotObject)
    name: IsInstanceValid
    isExternal: true
  - name: (
  - uid: Godot.GodotObject
    name: GodotObject
    isExternal: true
  - name: )
  spec.vb:
  - uid: Godot.GodotObject.IsInstanceValid(Godot.GodotObject)
    name: IsInstanceValid
    isExternal: true
  - name: (
  - uid: Godot.GodotObject
    name: GodotObject
    isExternal: true
  - name: )
- uid: Godot.GodotObject.WeakRef(Godot.GodotObject)
  commentId: M:Godot.GodotObject.WeakRef(Godot.GodotObject)
  parent: Godot.GodotObject
  isExternal: true
  name: WeakRef(GodotObject)
  nameWithType: GodotObject.WeakRef(GodotObject)
  fullName: Godot.GodotObject.WeakRef(Godot.GodotObject)
  spec.csharp:
  - uid: Godot.GodotObject.WeakRef(Godot.GodotObject)
    name: WeakRef
    isExternal: true
  - name: (
  - uid: Godot.GodotObject
    name: GodotObject
    isExternal: true
  - name: )
  spec.vb:
  - uid: Godot.GodotObject.WeakRef(Godot.GodotObject)
    name: WeakRef
    isExternal: true
  - name: (
  - uid: Godot.GodotObject
    name: GodotObject
    isExternal: true
  - name: )
- uid: Godot.GodotObject.Dispose
  commentId: M:Godot.GodotObject.Dispose
  parent: Godot.GodotObject
  isExternal: true
  name: Dispose()
  nameWithType: GodotObject.Dispose()
  fullName: Godot.GodotObject.Dispose()
  spec.csharp:
  - uid: Godot.GodotObject.Dispose
    name: Dispose
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Godot.GodotObject.Dispose
    name: Dispose
    isExternal: true
  - name: (
  - name: )
- uid: Godot.GodotObject.Dispose(System.Boolean)
  commentId: M:Godot.GodotObject.Dispose(System.Boolean)
  parent: Godot.GodotObject
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: Dispose(bool)
  nameWithType: GodotObject.Dispose(bool)
  fullName: Godot.GodotObject.Dispose(bool)
  nameWithType.vb: GodotObject.Dispose(Boolean)
  fullName.vb: Godot.GodotObject.Dispose(Boolean)
  name.vb: Dispose(Boolean)
  spec.csharp:
  - uid: Godot.GodotObject.Dispose(System.Boolean)
    name: Dispose
    isExternal: true
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Godot.GodotObject.Dispose(System.Boolean)
    name: Dispose
    isExternal: true
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Godot.GodotObject.ToString
  commentId: M:Godot.GodotObject.ToString
  parent: Godot.GodotObject
  isExternal: true
  name: ToString()
  nameWithType: GodotObject.ToString()
  fullName: Godot.GodotObject.ToString()
  spec.csharp:
  - uid: Godot.GodotObject.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Godot.GodotObject.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
- uid: Godot.GodotObject.ToSignal(Godot.GodotObject,Godot.StringName)
  commentId: M:Godot.GodotObject.ToSignal(Godot.GodotObject,Godot.StringName)
  parent: Godot.GodotObject
  isExternal: true
  name: ToSignal(GodotObject, StringName)
  nameWithType: GodotObject.ToSignal(GodotObject, StringName)
  fullName: Godot.GodotObject.ToSignal(Godot.GodotObject, Godot.StringName)
  spec.csharp:
  - uid: Godot.GodotObject.ToSignal(Godot.GodotObject,Godot.StringName)
    name: ToSignal
    isExternal: true
  - name: (
  - uid: Godot.GodotObject
    name: GodotObject
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: )
  spec.vb:
  - uid: Godot.GodotObject.ToSignal(Godot.GodotObject,Godot.StringName)
    name: ToSignal
    isExternal: true
  - name: (
  - uid: Godot.GodotObject
    name: GodotObject
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: )
- uid: Godot.GodotObject._Get(Godot.StringName)
  commentId: M:Godot.GodotObject._Get(Godot.StringName)
  parent: Godot.GodotObject
  isExternal: true
  name: _Get(StringName)
  nameWithType: GodotObject._Get(StringName)
  fullName: Godot.GodotObject._Get(Godot.StringName)
  spec.csharp:
  - uid: Godot.GodotObject._Get(Godot.StringName)
    name: _Get
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: )
  spec.vb:
  - uid: Godot.GodotObject._Get(Godot.StringName)
    name: _Get
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: )
- uid: Godot.GodotObject._GetPropertyList
  commentId: M:Godot.GodotObject._GetPropertyList
  parent: Godot.GodotObject
  isExternal: true
  name: _GetPropertyList()
  nameWithType: GodotObject._GetPropertyList()
  fullName: Godot.GodotObject._GetPropertyList()
  spec.csharp:
  - uid: Godot.GodotObject._GetPropertyList
    name: _GetPropertyList
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Godot.GodotObject._GetPropertyList
    name: _GetPropertyList
    isExternal: true
  - name: (
  - name: )
- uid: Godot.GodotObject._Notification(System.Int32)
  commentId: M:Godot.GodotObject._Notification(System.Int32)
  parent: Godot.GodotObject
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: _Notification(int)
  nameWithType: GodotObject._Notification(int)
  fullName: Godot.GodotObject._Notification(int)
  nameWithType.vb: GodotObject._Notification(Integer)
  fullName.vb: Godot.GodotObject._Notification(Integer)
  name.vb: _Notification(Integer)
  spec.csharp:
  - uid: Godot.GodotObject._Notification(System.Int32)
    name: _Notification
    isExternal: true
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: Godot.GodotObject._Notification(System.Int32)
    name: _Notification
    isExternal: true
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: Godot.GodotObject._PropertyCanRevert(Godot.StringName)
  commentId: M:Godot.GodotObject._PropertyCanRevert(Godot.StringName)
  parent: Godot.GodotObject
  isExternal: true
  name: _PropertyCanRevert(StringName)
  nameWithType: GodotObject._PropertyCanRevert(StringName)
  fullName: Godot.GodotObject._PropertyCanRevert(Godot.StringName)
  spec.csharp:
  - uid: Godot.GodotObject._PropertyCanRevert(Godot.StringName)
    name: _PropertyCanRevert
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: )
  spec.vb:
  - uid: Godot.GodotObject._PropertyCanRevert(Godot.StringName)
    name: _PropertyCanRevert
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: )
- uid: Godot.GodotObject._PropertyGetRevert(Godot.StringName)
  commentId: M:Godot.GodotObject._PropertyGetRevert(Godot.StringName)
  parent: Godot.GodotObject
  isExternal: true
  name: _PropertyGetRevert(StringName)
  nameWithType: GodotObject._PropertyGetRevert(StringName)
  fullName: Godot.GodotObject._PropertyGetRevert(Godot.StringName)
  spec.csharp:
  - uid: Godot.GodotObject._PropertyGetRevert(Godot.StringName)
    name: _PropertyGetRevert
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: )
  spec.vb:
  - uid: Godot.GodotObject._PropertyGetRevert(Godot.StringName)
    name: _PropertyGetRevert
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: )
- uid: Godot.GodotObject._Set(Godot.StringName,Godot.Variant)
  commentId: M:Godot.GodotObject._Set(Godot.StringName,Godot.Variant)
  parent: Godot.GodotObject
  isExternal: true
  name: _Set(StringName, Variant)
  nameWithType: GodotObject._Set(StringName, Variant)
  fullName: Godot.GodotObject._Set(Godot.StringName, Godot.Variant)
  spec.csharp:
  - uid: Godot.GodotObject._Set(Godot.StringName,Godot.Variant)
    name: _Set
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.Variant
    name: Variant
    isExternal: true
  - name: )
  spec.vb:
  - uid: Godot.GodotObject._Set(Godot.StringName,Godot.Variant)
    name: _Set
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.Variant
    name: Variant
    isExternal: true
  - name: )
- uid: Godot.GodotObject._ValidateProperty(Godot.Collections.Dictionary)
  commentId: M:Godot.GodotObject._ValidateProperty(Godot.Collections.Dictionary)
  parent: Godot.GodotObject
  isExternal: true
  name: _ValidateProperty(Dictionary)
  nameWithType: GodotObject._ValidateProperty(Dictionary)
  fullName: Godot.GodotObject._ValidateProperty(Godot.Collections.Dictionary)
  spec.csharp:
  - uid: Godot.GodotObject._ValidateProperty(Godot.Collections.Dictionary)
    name: _ValidateProperty
    isExternal: true
  - name: (
  - uid: Godot.Collections.Dictionary
    name: Dictionary
    isExternal: true
  - name: )
  spec.vb:
  - uid: Godot.GodotObject._ValidateProperty(Godot.Collections.Dictionary)
    name: _ValidateProperty
    isExternal: true
  - name: (
  - uid: Godot.Collections.Dictionary
    name: Dictionary
    isExternal: true
  - name: )
- uid: Godot.GodotObject.Free
  commentId: M:Godot.GodotObject.Free
  parent: Godot.GodotObject
  isExternal: true
  name: Free()
  nameWithType: GodotObject.Free()
  fullName: Godot.GodotObject.Free()
  spec.csharp:
  - uid: Godot.GodotObject.Free
    name: Free
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Godot.GodotObject.Free
    name: Free
    isExternal: true
  - name: (
  - name: )
- uid: Godot.GodotObject.GetClass
  commentId: M:Godot.GodotObject.GetClass
  parent: Godot.GodotObject
  isExternal: true
  name: GetClass()
  nameWithType: GodotObject.GetClass()
  fullName: Godot.GodotObject.GetClass()
  spec.csharp:
  - uid: Godot.GodotObject.GetClass
    name: GetClass
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Godot.GodotObject.GetClass
    name: GetClass
    isExternal: true
  - name: (
  - name: )
- uid: Godot.GodotObject.IsClass(System.String)
  commentId: M:Godot.GodotObject.IsClass(System.String)
  parent: Godot.GodotObject
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: IsClass(string)
  nameWithType: GodotObject.IsClass(string)
  fullName: Godot.GodotObject.IsClass(string)
  nameWithType.vb: GodotObject.IsClass(String)
  fullName.vb: Godot.GodotObject.IsClass(String)
  name.vb: IsClass(String)
  spec.csharp:
  - uid: Godot.GodotObject.IsClass(System.String)
    name: IsClass
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Godot.GodotObject.IsClass(System.String)
    name: IsClass
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Godot.GodotObject.Set(Godot.StringName,Godot.Variant)
  commentId: M:Godot.GodotObject.Set(Godot.StringName,Godot.Variant)
  parent: Godot.GodotObject
  isExternal: true
  name: Set(StringName, Variant)
  nameWithType: GodotObject.Set(StringName, Variant)
  fullName: Godot.GodotObject.Set(Godot.StringName, Godot.Variant)
  spec.csharp:
  - uid: Godot.GodotObject.Set(Godot.StringName,Godot.Variant)
    name: Set
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.Variant
    name: Variant
    isExternal: true
  - name: )
  spec.vb:
  - uid: Godot.GodotObject.Set(Godot.StringName,Godot.Variant)
    name: Set
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.Variant
    name: Variant
    isExternal: true
  - name: )
- uid: Godot.GodotObject.Get(Godot.StringName)
  commentId: M:Godot.GodotObject.Get(Godot.StringName)
  parent: Godot.GodotObject
  isExternal: true
  name: Get(StringName)
  nameWithType: GodotObject.Get(StringName)
  fullName: Godot.GodotObject.Get(Godot.StringName)
  spec.csharp:
  - uid: Godot.GodotObject.Get(Godot.StringName)
    name: Get
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: )
  spec.vb:
  - uid: Godot.GodotObject.Get(Godot.StringName)
    name: Get
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: )
- uid: Godot.GodotObject.SetIndexed(Godot.NodePath,Godot.Variant)
  commentId: M:Godot.GodotObject.SetIndexed(Godot.NodePath,Godot.Variant)
  parent: Godot.GodotObject
  isExternal: true
  name: SetIndexed(NodePath, Variant)
  nameWithType: GodotObject.SetIndexed(NodePath, Variant)
  fullName: Godot.GodotObject.SetIndexed(Godot.NodePath, Godot.Variant)
  spec.csharp:
  - uid: Godot.GodotObject.SetIndexed(Godot.NodePath,Godot.Variant)
    name: SetIndexed
    isExternal: true
  - name: (
  - uid: Godot.NodePath
    name: NodePath
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.Variant
    name: Variant
    isExternal: true
  - name: )
  spec.vb:
  - uid: Godot.GodotObject.SetIndexed(Godot.NodePath,Godot.Variant)
    name: SetIndexed
    isExternal: true
  - name: (
  - uid: Godot.NodePath
    name: NodePath
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.Variant
    name: Variant
    isExternal: true
  - name: )
- uid: Godot.GodotObject.GetIndexed(Godot.NodePath)
  commentId: M:Godot.GodotObject.GetIndexed(Godot.NodePath)
  parent: Godot.GodotObject
  isExternal: true
  name: GetIndexed(NodePath)
  nameWithType: GodotObject.GetIndexed(NodePath)
  fullName: Godot.GodotObject.GetIndexed(Godot.NodePath)
  spec.csharp:
  - uid: Godot.GodotObject.GetIndexed(Godot.NodePath)
    name: GetIndexed
    isExternal: true
  - name: (
  - uid: Godot.NodePath
    name: NodePath
    isExternal: true
  - name: )
  spec.vb:
  - uid: Godot.GodotObject.GetIndexed(Godot.NodePath)
    name: GetIndexed
    isExternal: true
  - name: (
  - uid: Godot.NodePath
    name: NodePath
    isExternal: true
  - name: )
- uid: Godot.GodotObject.GetPropertyList
  commentId: M:Godot.GodotObject.GetPropertyList
  parent: Godot.GodotObject
  isExternal: true
  name: GetPropertyList()
  nameWithType: GodotObject.GetPropertyList()
  fullName: Godot.GodotObject.GetPropertyList()
  spec.csharp:
  - uid: Godot.GodotObject.GetPropertyList
    name: GetPropertyList
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Godot.GodotObject.GetPropertyList
    name: GetPropertyList
    isExternal: true
  - name: (
  - name: )
- uid: Godot.GodotObject.GetMethodList
  commentId: M:Godot.GodotObject.GetMethodList
  parent: Godot.GodotObject
  isExternal: true
  name: GetMethodList()
  nameWithType: GodotObject.GetMethodList()
  fullName: Godot.GodotObject.GetMethodList()
  spec.csharp:
  - uid: Godot.GodotObject.GetMethodList
    name: GetMethodList
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Godot.GodotObject.GetMethodList
    name: GetMethodList
    isExternal: true
  - name: (
  - name: )
- uid: Godot.GodotObject.PropertyCanRevert(Godot.StringName)
  commentId: M:Godot.GodotObject.PropertyCanRevert(Godot.StringName)
  parent: Godot.GodotObject
  isExternal: true
  name: PropertyCanRevert(StringName)
  nameWithType: GodotObject.PropertyCanRevert(StringName)
  fullName: Godot.GodotObject.PropertyCanRevert(Godot.StringName)
  spec.csharp:
  - uid: Godot.GodotObject.PropertyCanRevert(Godot.StringName)
    name: PropertyCanRevert
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: )
  spec.vb:
  - uid: Godot.GodotObject.PropertyCanRevert(Godot.StringName)
    name: PropertyCanRevert
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: )
- uid: Godot.GodotObject.PropertyGetRevert(Godot.StringName)
  commentId: M:Godot.GodotObject.PropertyGetRevert(Godot.StringName)
  parent: Godot.GodotObject
  isExternal: true
  name: PropertyGetRevert(StringName)
  nameWithType: GodotObject.PropertyGetRevert(StringName)
  fullName: Godot.GodotObject.PropertyGetRevert(Godot.StringName)
  spec.csharp:
  - uid: Godot.GodotObject.PropertyGetRevert(Godot.StringName)
    name: PropertyGetRevert
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: )
  spec.vb:
  - uid: Godot.GodotObject.PropertyGetRevert(Godot.StringName)
    name: PropertyGetRevert
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: )
- uid: Godot.GodotObject.Notification(System.Int32,System.Boolean)
  commentId: M:Godot.GodotObject.Notification(System.Int32,System.Boolean)
  parent: Godot.GodotObject
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: Notification(int, bool)
  nameWithType: GodotObject.Notification(int, bool)
  fullName: Godot.GodotObject.Notification(int, bool)
  nameWithType.vb: GodotObject.Notification(Integer, Boolean)
  fullName.vb: Godot.GodotObject.Notification(Integer, Boolean)
  name.vb: Notification(Integer, Boolean)
  spec.csharp:
  - uid: Godot.GodotObject.Notification(System.Int32,System.Boolean)
    name: Notification
    isExternal: true
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Godot.GodotObject.Notification(System.Int32,System.Boolean)
    name: Notification
    isExternal: true
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Godot.GodotObject.GetInstanceId
  commentId: M:Godot.GodotObject.GetInstanceId
  parent: Godot.GodotObject
  isExternal: true
  name: GetInstanceId()
  nameWithType: GodotObject.GetInstanceId()
  fullName: Godot.GodotObject.GetInstanceId()
  spec.csharp:
  - uid: Godot.GodotObject.GetInstanceId
    name: GetInstanceId
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Godot.GodotObject.GetInstanceId
    name: GetInstanceId
    isExternal: true
  - name: (
  - name: )
- uid: Godot.GodotObject.SetScript(Godot.Variant)
  commentId: M:Godot.GodotObject.SetScript(Godot.Variant)
  parent: Godot.GodotObject
  isExternal: true
  name: SetScript(Variant)
  nameWithType: GodotObject.SetScript(Variant)
  fullName: Godot.GodotObject.SetScript(Godot.Variant)
  spec.csharp:
  - uid: Godot.GodotObject.SetScript(Godot.Variant)
    name: SetScript
    isExternal: true
  - name: (
  - uid: Godot.Variant
    name: Variant
    isExternal: true
  - name: )
  spec.vb:
  - uid: Godot.GodotObject.SetScript(Godot.Variant)
    name: SetScript
    isExternal: true
  - name: (
  - uid: Godot.Variant
    name: Variant
    isExternal: true
  - name: )
- uid: Godot.GodotObject.GetScript
  commentId: M:Godot.GodotObject.GetScript
  parent: Godot.GodotObject
  isExternal: true
  name: GetScript()
  nameWithType: GodotObject.GetScript()
  fullName: Godot.GodotObject.GetScript()
  spec.csharp:
  - uid: Godot.GodotObject.GetScript
    name: GetScript
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Godot.GodotObject.GetScript
    name: GetScript
    isExternal: true
  - name: (
  - name: )
- uid: Godot.GodotObject.SetMeta(Godot.StringName,Godot.Variant)
  commentId: M:Godot.GodotObject.SetMeta(Godot.StringName,Godot.Variant)
  parent: Godot.GodotObject
  isExternal: true
  name: SetMeta(StringName, Variant)
  nameWithType: GodotObject.SetMeta(StringName, Variant)
  fullName: Godot.GodotObject.SetMeta(Godot.StringName, Godot.Variant)
  spec.csharp:
  - uid: Godot.GodotObject.SetMeta(Godot.StringName,Godot.Variant)
    name: SetMeta
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.Variant
    name: Variant
    isExternal: true
  - name: )
  spec.vb:
  - uid: Godot.GodotObject.SetMeta(Godot.StringName,Godot.Variant)
    name: SetMeta
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.Variant
    name: Variant
    isExternal: true
  - name: )
- uid: Godot.GodotObject.RemoveMeta(Godot.StringName)
  commentId: M:Godot.GodotObject.RemoveMeta(Godot.StringName)
  parent: Godot.GodotObject
  isExternal: true
  name: RemoveMeta(StringName)
  nameWithType: GodotObject.RemoveMeta(StringName)
  fullName: Godot.GodotObject.RemoveMeta(Godot.StringName)
  spec.csharp:
  - uid: Godot.GodotObject.RemoveMeta(Godot.StringName)
    name: RemoveMeta
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: )
  spec.vb:
  - uid: Godot.GodotObject.RemoveMeta(Godot.StringName)
    name: RemoveMeta
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: )
- uid: Godot.GodotObject.GetMeta(Godot.StringName,Godot.Variant)
  commentId: M:Godot.GodotObject.GetMeta(Godot.StringName,Godot.Variant)
  parent: Godot.GodotObject
  isExternal: true
  name: GetMeta(StringName, Variant)
  nameWithType: GodotObject.GetMeta(StringName, Variant)
  fullName: Godot.GodotObject.GetMeta(Godot.StringName, Godot.Variant)
  spec.csharp:
  - uid: Godot.GodotObject.GetMeta(Godot.StringName,Godot.Variant)
    name: GetMeta
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.Variant
    name: Variant
    isExternal: true
  - name: )
  spec.vb:
  - uid: Godot.GodotObject.GetMeta(Godot.StringName,Godot.Variant)
    name: GetMeta
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.Variant
    name: Variant
    isExternal: true
  - name: )
- uid: Godot.GodotObject.HasMeta(Godot.StringName)
  commentId: M:Godot.GodotObject.HasMeta(Godot.StringName)
  parent: Godot.GodotObject
  isExternal: true
  name: HasMeta(StringName)
  nameWithType: GodotObject.HasMeta(StringName)
  fullName: Godot.GodotObject.HasMeta(Godot.StringName)
  spec.csharp:
  - uid: Godot.GodotObject.HasMeta(Godot.StringName)
    name: HasMeta
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: )
  spec.vb:
  - uid: Godot.GodotObject.HasMeta(Godot.StringName)
    name: HasMeta
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: )
- uid: Godot.GodotObject.GetMetaList
  commentId: M:Godot.GodotObject.GetMetaList
  parent: Godot.GodotObject
  isExternal: true
  name: GetMetaList()
  nameWithType: GodotObject.GetMetaList()
  fullName: Godot.GodotObject.GetMetaList()
  spec.csharp:
  - uid: Godot.GodotObject.GetMetaList
    name: GetMetaList
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Godot.GodotObject.GetMetaList
    name: GetMetaList
    isExternal: true
  - name: (
  - name: )
- uid: Godot.GodotObject.AddUserSignal(System.String,Godot.Collections.Array)
  commentId: M:Godot.GodotObject.AddUserSignal(System.String,Godot.Collections.Array)
  parent: Godot.GodotObject
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: AddUserSignal(string, Array)
  nameWithType: GodotObject.AddUserSignal(string, Array)
  fullName: Godot.GodotObject.AddUserSignal(string, Godot.Collections.Array)
  nameWithType.vb: GodotObject.AddUserSignal(String, Array)
  fullName.vb: Godot.GodotObject.AddUserSignal(String, Godot.Collections.Array)
  name.vb: AddUserSignal(String, Array)
  spec.csharp:
  - uid: Godot.GodotObject.AddUserSignal(System.String,Godot.Collections.Array)
    name: AddUserSignal
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Godot.Collections.Array
    name: Array
    isExternal: true
  - name: )
  spec.vb:
  - uid: Godot.GodotObject.AddUserSignal(System.String,Godot.Collections.Array)
    name: AddUserSignal
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Godot.Collections.Array
    name: Array
    isExternal: true
  - name: )
- uid: Godot.GodotObject.HasUserSignal(Godot.StringName)
  commentId: M:Godot.GodotObject.HasUserSignal(Godot.StringName)
  parent: Godot.GodotObject
  isExternal: true
  name: HasUserSignal(StringName)
  nameWithType: GodotObject.HasUserSignal(StringName)
  fullName: Godot.GodotObject.HasUserSignal(Godot.StringName)
  spec.csharp:
  - uid: Godot.GodotObject.HasUserSignal(Godot.StringName)
    name: HasUserSignal
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: )
  spec.vb:
  - uid: Godot.GodotObject.HasUserSignal(Godot.StringName)
    name: HasUserSignal
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: )
- uid: Godot.GodotObject.RemoveUserSignal(Godot.StringName)
  commentId: M:Godot.GodotObject.RemoveUserSignal(Godot.StringName)
  parent: Godot.GodotObject
  isExternal: true
  name: RemoveUserSignal(StringName)
  nameWithType: GodotObject.RemoveUserSignal(StringName)
  fullName: Godot.GodotObject.RemoveUserSignal(Godot.StringName)
  spec.csharp:
  - uid: Godot.GodotObject.RemoveUserSignal(Godot.StringName)
    name: RemoveUserSignal
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: )
  spec.vb:
  - uid: Godot.GodotObject.RemoveUserSignal(Godot.StringName)
    name: RemoveUserSignal
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: )
- uid: Godot.GodotObject.EmitSignal(Godot.StringName,Godot.Variant[])
  commentId: M:Godot.GodotObject.EmitSignal(Godot.StringName,Godot.Variant[])
  parent: Godot.GodotObject
  isExternal: true
  name: EmitSignal(StringName, params Variant[])
  nameWithType: GodotObject.EmitSignal(StringName, params Variant[])
  fullName: Godot.GodotObject.EmitSignal(Godot.StringName, params Godot.Variant[])
  nameWithType.vb: GodotObject.EmitSignal(StringName, ParamArray Variant())
  fullName.vb: Godot.GodotObject.EmitSignal(Godot.StringName, ParamArray Godot.Variant())
  name.vb: EmitSignal(StringName, ParamArray Variant())
  spec.csharp:
  - uid: Godot.GodotObject.EmitSignal(Godot.StringName,Godot.Variant[])
    name: EmitSignal
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: ','
  - name: " "
  - name: params
  - name: " "
  - uid: Godot.Variant
    name: Variant
    isExternal: true
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: Godot.GodotObject.EmitSignal(Godot.StringName,Godot.Variant[])
    name: EmitSignal
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: ','
  - name: " "
  - name: ParamArray
  - name: " "
  - uid: Godot.Variant
    name: Variant
    isExternal: true
  - name: (
  - name: )
  - name: )
- uid: Godot.GodotObject.Call(Godot.StringName,Godot.Variant[])
  commentId: M:Godot.GodotObject.Call(Godot.StringName,Godot.Variant[])
  parent: Godot.GodotObject
  isExternal: true
  name: Call(StringName, params Variant[])
  nameWithType: GodotObject.Call(StringName, params Variant[])
  fullName: Godot.GodotObject.Call(Godot.StringName, params Godot.Variant[])
  nameWithType.vb: GodotObject.Call(StringName, ParamArray Variant())
  fullName.vb: Godot.GodotObject.Call(Godot.StringName, ParamArray Godot.Variant())
  name.vb: Call(StringName, ParamArray Variant())
  spec.csharp:
  - uid: Godot.GodotObject.Call(Godot.StringName,Godot.Variant[])
    name: Call
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: ','
  - name: " "
  - name: params
  - name: " "
  - uid: Godot.Variant
    name: Variant
    isExternal: true
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: Godot.GodotObject.Call(Godot.StringName,Godot.Variant[])
    name: Call
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: ','
  - name: " "
  - name: ParamArray
  - name: " "
  - uid: Godot.Variant
    name: Variant
    isExternal: true
  - name: (
  - name: )
  - name: )
- uid: Godot.GodotObject.CallDeferred(Godot.StringName,Godot.Variant[])
  commentId: M:Godot.GodotObject.CallDeferred(Godot.StringName,Godot.Variant[])
  parent: Godot.GodotObject
  isExternal: true
  name: CallDeferred(StringName, params Variant[])
  nameWithType: GodotObject.CallDeferred(StringName, params Variant[])
  fullName: Godot.GodotObject.CallDeferred(Godot.StringName, params Godot.Variant[])
  nameWithType.vb: GodotObject.CallDeferred(StringName, ParamArray Variant())
  fullName.vb: Godot.GodotObject.CallDeferred(Godot.StringName, ParamArray Godot.Variant())
  name.vb: CallDeferred(StringName, ParamArray Variant())
  spec.csharp:
  - uid: Godot.GodotObject.CallDeferred(Godot.StringName,Godot.Variant[])
    name: CallDeferred
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: ','
  - name: " "
  - name: params
  - name: " "
  - uid: Godot.Variant
    name: Variant
    isExternal: true
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: Godot.GodotObject.CallDeferred(Godot.StringName,Godot.Variant[])
    name: CallDeferred
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: ','
  - name: " "
  - name: ParamArray
  - name: " "
  - uid: Godot.Variant
    name: Variant
    isExternal: true
  - name: (
  - name: )
  - name: )
- uid: Godot.GodotObject.SetDeferred(Godot.StringName,Godot.Variant)
  commentId: M:Godot.GodotObject.SetDeferred(Godot.StringName,Godot.Variant)
  parent: Godot.GodotObject
  isExternal: true
  name: SetDeferred(StringName, Variant)
  nameWithType: GodotObject.SetDeferred(StringName, Variant)
  fullName: Godot.GodotObject.SetDeferred(Godot.StringName, Godot.Variant)
  spec.csharp:
  - uid: Godot.GodotObject.SetDeferred(Godot.StringName,Godot.Variant)
    name: SetDeferred
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.Variant
    name: Variant
    isExternal: true
  - name: )
  spec.vb:
  - uid: Godot.GodotObject.SetDeferred(Godot.StringName,Godot.Variant)
    name: SetDeferred
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.Variant
    name: Variant
    isExternal: true
  - name: )
- uid: Godot.GodotObject.Callv(Godot.StringName,Godot.Collections.Array)
  commentId: M:Godot.GodotObject.Callv(Godot.StringName,Godot.Collections.Array)
  parent: Godot.GodotObject
  isExternal: true
  name: Callv(StringName, Array)
  nameWithType: GodotObject.Callv(StringName, Array)
  fullName: Godot.GodotObject.Callv(Godot.StringName, Godot.Collections.Array)
  spec.csharp:
  - uid: Godot.GodotObject.Callv(Godot.StringName,Godot.Collections.Array)
    name: Callv
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.Collections.Array
    name: Array
    isExternal: true
  - name: )
  spec.vb:
  - uid: Godot.GodotObject.Callv(Godot.StringName,Godot.Collections.Array)
    name: Callv
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.Collections.Array
    name: Array
    isExternal: true
  - name: )
- uid: Godot.GodotObject.HasMethod(Godot.StringName)
  commentId: M:Godot.GodotObject.HasMethod(Godot.StringName)
  parent: Godot.GodotObject
  isExternal: true
  name: HasMethod(StringName)
  nameWithType: GodotObject.HasMethod(StringName)
  fullName: Godot.GodotObject.HasMethod(Godot.StringName)
  spec.csharp:
  - uid: Godot.GodotObject.HasMethod(Godot.StringName)
    name: HasMethod
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: )
  spec.vb:
  - uid: Godot.GodotObject.HasMethod(Godot.StringName)
    name: HasMethod
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: )
- uid: Godot.GodotObject.GetMethodArgumentCount(Godot.StringName)
  commentId: M:Godot.GodotObject.GetMethodArgumentCount(Godot.StringName)
  parent: Godot.GodotObject
  isExternal: true
  name: GetMethodArgumentCount(StringName)
  nameWithType: GodotObject.GetMethodArgumentCount(StringName)
  fullName: Godot.GodotObject.GetMethodArgumentCount(Godot.StringName)
  spec.csharp:
  - uid: Godot.GodotObject.GetMethodArgumentCount(Godot.StringName)
    name: GetMethodArgumentCount
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: )
  spec.vb:
  - uid: Godot.GodotObject.GetMethodArgumentCount(Godot.StringName)
    name: GetMethodArgumentCount
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: )
- uid: Godot.GodotObject.HasSignal(Godot.StringName)
  commentId: M:Godot.GodotObject.HasSignal(Godot.StringName)
  parent: Godot.GodotObject
  isExternal: true
  name: HasSignal(StringName)
  nameWithType: GodotObject.HasSignal(StringName)
  fullName: Godot.GodotObject.HasSignal(Godot.StringName)
  spec.csharp:
  - uid: Godot.GodotObject.HasSignal(Godot.StringName)
    name: HasSignal
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: )
  spec.vb:
  - uid: Godot.GodotObject.HasSignal(Godot.StringName)
    name: HasSignal
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: )
- uid: Godot.GodotObject.GetSignalList
  commentId: M:Godot.GodotObject.GetSignalList
  parent: Godot.GodotObject
  isExternal: true
  name: GetSignalList()
  nameWithType: GodotObject.GetSignalList()
  fullName: Godot.GodotObject.GetSignalList()
  spec.csharp:
  - uid: Godot.GodotObject.GetSignalList
    name: GetSignalList
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Godot.GodotObject.GetSignalList
    name: GetSignalList
    isExternal: true
  - name: (
  - name: )
- uid: Godot.GodotObject.GetSignalConnectionList(Godot.StringName)
  commentId: M:Godot.GodotObject.GetSignalConnectionList(Godot.StringName)
  parent: Godot.GodotObject
  isExternal: true
  name: GetSignalConnectionList(StringName)
  nameWithType: GodotObject.GetSignalConnectionList(StringName)
  fullName: Godot.GodotObject.GetSignalConnectionList(Godot.StringName)
  spec.csharp:
  - uid: Godot.GodotObject.GetSignalConnectionList(Godot.StringName)
    name: GetSignalConnectionList
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: )
  spec.vb:
  - uid: Godot.GodotObject.GetSignalConnectionList(Godot.StringName)
    name: GetSignalConnectionList
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: )
- uid: Godot.GodotObject.GetIncomingConnections
  commentId: M:Godot.GodotObject.GetIncomingConnections
  parent: Godot.GodotObject
  isExternal: true
  name: GetIncomingConnections()
  nameWithType: GodotObject.GetIncomingConnections()
  fullName: Godot.GodotObject.GetIncomingConnections()
  spec.csharp:
  - uid: Godot.GodotObject.GetIncomingConnections
    name: GetIncomingConnections
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Godot.GodotObject.GetIncomingConnections
    name: GetIncomingConnections
    isExternal: true
  - name: (
  - name: )
- uid: Godot.GodotObject.Connect(Godot.StringName,Godot.Callable,System.UInt32)
  commentId: M:Godot.GodotObject.Connect(Godot.StringName,Godot.Callable,System.UInt32)
  parent: Godot.GodotObject
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.uint32
  name: Connect(StringName, Callable, uint)
  nameWithType: GodotObject.Connect(StringName, Callable, uint)
  fullName: Godot.GodotObject.Connect(Godot.StringName, Godot.Callable, uint)
  nameWithType.vb: GodotObject.Connect(StringName, Callable, UInteger)
  fullName.vb: Godot.GodotObject.Connect(Godot.StringName, Godot.Callable, UInteger)
  name.vb: Connect(StringName, Callable, UInteger)
  spec.csharp:
  - uid: Godot.GodotObject.Connect(Godot.StringName,Godot.Callable,System.UInt32)
    name: Connect
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.Callable
    name: Callable
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.UInt32
    name: uint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: )
  spec.vb:
  - uid: Godot.GodotObject.Connect(Godot.StringName,Godot.Callable,System.UInt32)
    name: Connect
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.Callable
    name: Callable
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.UInt32
    name: UInteger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: )
- uid: Godot.GodotObject.Disconnect(Godot.StringName,Godot.Callable)
  commentId: M:Godot.GodotObject.Disconnect(Godot.StringName,Godot.Callable)
  parent: Godot.GodotObject
  isExternal: true
  name: Disconnect(StringName, Callable)
  nameWithType: GodotObject.Disconnect(StringName, Callable)
  fullName: Godot.GodotObject.Disconnect(Godot.StringName, Godot.Callable)
  spec.csharp:
  - uid: Godot.GodotObject.Disconnect(Godot.StringName,Godot.Callable)
    name: Disconnect
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.Callable
    name: Callable
    isExternal: true
  - name: )
  spec.vb:
  - uid: Godot.GodotObject.Disconnect(Godot.StringName,Godot.Callable)
    name: Disconnect
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.Callable
    name: Callable
    isExternal: true
  - name: )
- uid: Godot.GodotObject.IsConnected(Godot.StringName,Godot.Callable)
  commentId: M:Godot.GodotObject.IsConnected(Godot.StringName,Godot.Callable)
  parent: Godot.GodotObject
  isExternal: true
  name: IsConnected(StringName, Callable)
  nameWithType: GodotObject.IsConnected(StringName, Callable)
  fullName: Godot.GodotObject.IsConnected(Godot.StringName, Godot.Callable)
  spec.csharp:
  - uid: Godot.GodotObject.IsConnected(Godot.StringName,Godot.Callable)
    name: IsConnected
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.Callable
    name: Callable
    isExternal: true
  - name: )
  spec.vb:
  - uid: Godot.GodotObject.IsConnected(Godot.StringName,Godot.Callable)
    name: IsConnected
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.Callable
    name: Callable
    isExternal: true
  - name: )
- uid: Godot.GodotObject.SetBlockSignals(System.Boolean)
  commentId: M:Godot.GodotObject.SetBlockSignals(System.Boolean)
  parent: Godot.GodotObject
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: SetBlockSignals(bool)
  nameWithType: GodotObject.SetBlockSignals(bool)
  fullName: Godot.GodotObject.SetBlockSignals(bool)
  nameWithType.vb: GodotObject.SetBlockSignals(Boolean)
  fullName.vb: Godot.GodotObject.SetBlockSignals(Boolean)
  name.vb: SetBlockSignals(Boolean)
  spec.csharp:
  - uid: Godot.GodotObject.SetBlockSignals(System.Boolean)
    name: SetBlockSignals
    isExternal: true
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Godot.GodotObject.SetBlockSignals(System.Boolean)
    name: SetBlockSignals
    isExternal: true
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Godot.GodotObject.IsBlockingSignals
  commentId: M:Godot.GodotObject.IsBlockingSignals
  parent: Godot.GodotObject
  isExternal: true
  name: IsBlockingSignals()
  nameWithType: GodotObject.IsBlockingSignals()
  fullName: Godot.GodotObject.IsBlockingSignals()
  spec.csharp:
  - uid: Godot.GodotObject.IsBlockingSignals
    name: IsBlockingSignals
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Godot.GodotObject.IsBlockingSignals
    name: IsBlockingSignals
    isExternal: true
  - name: (
  - name: )
- uid: Godot.GodotObject.NotifyPropertyListChanged
  commentId: M:Godot.GodotObject.NotifyPropertyListChanged
  parent: Godot.GodotObject
  isExternal: true
  name: NotifyPropertyListChanged()
  nameWithType: GodotObject.NotifyPropertyListChanged()
  fullName: Godot.GodotObject.NotifyPropertyListChanged()
  spec.csharp:
  - uid: Godot.GodotObject.NotifyPropertyListChanged
    name: NotifyPropertyListChanged
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Godot.GodotObject.NotifyPropertyListChanged
    name: NotifyPropertyListChanged
    isExternal: true
  - name: (
  - name: )
- uid: Godot.GodotObject.SetMessageTranslation(System.Boolean)
  commentId: M:Godot.GodotObject.SetMessageTranslation(System.Boolean)
  parent: Godot.GodotObject
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: SetMessageTranslation(bool)
  nameWithType: GodotObject.SetMessageTranslation(bool)
  fullName: Godot.GodotObject.SetMessageTranslation(bool)
  nameWithType.vb: GodotObject.SetMessageTranslation(Boolean)
  fullName.vb: Godot.GodotObject.SetMessageTranslation(Boolean)
  name.vb: SetMessageTranslation(Boolean)
  spec.csharp:
  - uid: Godot.GodotObject.SetMessageTranslation(System.Boolean)
    name: SetMessageTranslation
    isExternal: true
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Godot.GodotObject.SetMessageTranslation(System.Boolean)
    name: SetMessageTranslation
    isExternal: true
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Godot.GodotObject.CanTranslateMessages
  commentId: M:Godot.GodotObject.CanTranslateMessages
  parent: Godot.GodotObject
  isExternal: true
  name: CanTranslateMessages()
  nameWithType: GodotObject.CanTranslateMessages()
  fullName: Godot.GodotObject.CanTranslateMessages()
  spec.csharp:
  - uid: Godot.GodotObject.CanTranslateMessages
    name: CanTranslateMessages
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Godot.GodotObject.CanTranslateMessages
    name: CanTranslateMessages
    isExternal: true
  - name: (
  - name: )
- uid: Godot.GodotObject.Tr(Godot.StringName,Godot.StringName)
  commentId: M:Godot.GodotObject.Tr(Godot.StringName,Godot.StringName)
  parent: Godot.GodotObject
  isExternal: true
  name: Tr(StringName, StringName)
  nameWithType: GodotObject.Tr(StringName, StringName)
  fullName: Godot.GodotObject.Tr(Godot.StringName, Godot.StringName)
  spec.csharp:
  - uid: Godot.GodotObject.Tr(Godot.StringName,Godot.StringName)
    name: Tr
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: )
  spec.vb:
  - uid: Godot.GodotObject.Tr(Godot.StringName,Godot.StringName)
    name: Tr
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: )
- uid: Godot.GodotObject.TrN(Godot.StringName,Godot.StringName,System.Int32,Godot.StringName)
  commentId: M:Godot.GodotObject.TrN(Godot.StringName,Godot.StringName,System.Int32,Godot.StringName)
  parent: Godot.GodotObject
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: TrN(StringName, StringName, int, StringName)
  nameWithType: GodotObject.TrN(StringName, StringName, int, StringName)
  fullName: Godot.GodotObject.TrN(Godot.StringName, Godot.StringName, int, Godot.StringName)
  nameWithType.vb: GodotObject.TrN(StringName, StringName, Integer, StringName)
  fullName.vb: Godot.GodotObject.TrN(Godot.StringName, Godot.StringName, Integer, Godot.StringName)
  name.vb: TrN(StringName, StringName, Integer, StringName)
  spec.csharp:
  - uid: Godot.GodotObject.TrN(Godot.StringName,Godot.StringName,System.Int32,Godot.StringName)
    name: TrN
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: )
  spec.vb:
  - uid: Godot.GodotObject.TrN(Godot.StringName,Godot.StringName,System.Int32,Godot.StringName)
    name: TrN
    isExternal: true
  - name: (
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: ','
  - name: " "
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: Godot.StringName
    name: StringName
    isExternal: true
  - name: )
- uid: Godot.GodotObject.IsQueuedForDeletion
  commentId: M:Godot.GodotObject.IsQueuedForDeletion
  parent: Godot.GodotObject
  isExternal: true
  name: IsQueuedForDeletion()
  nameWithType: GodotObject.IsQueuedForDeletion()
  fullName: Godot.GodotObject.IsQueuedForDeletion()
  spec.csharp:
  - uid: Godot.GodotObject.IsQueuedForDeletion
    name: IsQueuedForDeletion
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Godot.GodotObject.IsQueuedForDeletion
    name: IsQueuedForDeletion
    isExternal: true
  - name: (
  - name: )
- uid: Godot.GodotObject.CancelFree
  commentId: M:Godot.GodotObject.CancelFree
  parent: Godot.GodotObject
  isExternal: true
  name: CancelFree()
  nameWithType: GodotObject.CancelFree()
  fullName: Godot.GodotObject.CancelFree()
  spec.csharp:
  - uid: Godot.GodotObject.CancelFree
    name: CancelFree
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Godot.GodotObject.CancelFree
    name: CancelFree
    isExternal: true
  - name: (
  - name: )
- uid: Godot.GodotObject.NativeInstance
  commentId: P:Godot.GodotObject.NativeInstance
  parent: Godot.GodotObject
  isExternal: true
  name: NativeInstance
  nameWithType: GodotObject.NativeInstance
  fullName: Godot.GodotObject.NativeInstance
- uid: Godot.GodotObject.ScriptChanged
  commentId: E:Godot.GodotObject.ScriptChanged
  parent: Godot.GodotObject
  isExternal: true
  name: ScriptChanged
  nameWithType: GodotObject.ScriptChanged
  fullName: Godot.GodotObject.ScriptChanged
- uid: Godot.GodotObject.PropertyListChanged
  commentId: E:Godot.GodotObject.PropertyListChanged
  parent: Godot.GodotObject
  isExternal: true
  name: PropertyListChanged
  nameWithType: GodotObject.PropertyListChanged
  fullName: Godot.GodotObject.PropertyListChanged
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Godot
  commentId: N:Godot
  isExternal: true
  name: Godot
  nameWithType: Godot
  fullName: Godot
- uid: System.Lazy{NPCProcGen.Autoloads.WorldState}
  commentId: T:System.Lazy{NPCProcGen.Autoloads.WorldState}
  parent: System
  definition: System.Lazy`1
  href: https://learn.microsoft.com/dotnet/api/system.lazy-1
  name: Lazy<WorldState>
  nameWithType: Lazy<WorldState>
  fullName: System.Lazy<NPCProcGen.Autoloads.WorldState>
  nameWithType.vb: Lazy(Of WorldState)
  fullName.vb: System.Lazy(Of NPCProcGen.Autoloads.WorldState)
  name.vb: Lazy(Of WorldState)
  spec.csharp:
  - uid: System.Lazy`1
    name: Lazy
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.lazy-1
  - name: <
  - uid: NPCProcGen.Autoloads.WorldState
    name: WorldState
    href: NPCProcGen.Autoloads.WorldState.html
  - name: '>'
  spec.vb:
  - uid: System.Lazy`1
    name: Lazy
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.lazy-1
  - name: (
  - name: Of
  - name: " "
  - uid: NPCProcGen.Autoloads.WorldState
    name: WorldState
    href: NPCProcGen.Autoloads.WorldState.html
  - name: )
- uid: System.Lazy`1
  commentId: T:System.Lazy`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.lazy-1
  name: Lazy<T>
  nameWithType: Lazy<T>
  fullName: System.Lazy<T>
  nameWithType.vb: Lazy(Of T)
  fullName.vb: System.Lazy(Of T)
  name.vb: Lazy(Of T)
  spec.csharp:
  - uid: System.Lazy`1
    name: Lazy
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.lazy-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Lazy`1
    name: Lazy
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.lazy-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: NPCProcGen.Autoloads.WorldState.Instance*
  commentId: Overload:NPCProcGen.Autoloads.WorldState.Instance
  href: NPCProcGen.Autoloads.WorldState.html#NPCProcGen_Autoloads_WorldState_Instance
  name: Instance
  nameWithType: WorldState.Instance
  fullName: NPCProcGen.Autoloads.WorldState.Instance
- uid: NPCProcGen.Autoloads.WorldState
  commentId: T:NPCProcGen.Autoloads.WorldState
  parent: NPCProcGen.Autoloads
  href: NPCProcGen.Autoloads.WorldState.html
  name: WorldState
  nameWithType: WorldState
  fullName: NPCProcGen.Autoloads.WorldState
- uid: NPCProcGen.Autoloads.WorldState.#ctor*
  commentId: Overload:NPCProcGen.Autoloads.WorldState.#ctor
  href: NPCProcGen.Autoloads.WorldState.html#NPCProcGen_Autoloads_WorldState__ctor
  name: WorldState
  nameWithType: WorldState.WorldState
  fullName: NPCProcGen.Autoloads.WorldState.WorldState
  nameWithType.vb: WorldState.New
  fullName.vb: NPCProcGen.Autoloads.WorldState.New
  name.vb: New
- uid: NPCProcGen.Autoloads.WorldState.Actors*
  commentId: Overload:NPCProcGen.Autoloads.WorldState.Actors
  href: NPCProcGen.Autoloads.WorldState.html#NPCProcGen_Autoloads_WorldState_Actors
  name: Actors
  nameWithType: WorldState.Actors
  fullName: NPCProcGen.Autoloads.WorldState.Actors
- uid: System.Collections.Generic.IReadOnlyList{NPCProcGen.ActorTag2D}
  commentId: T:System.Collections.Generic.IReadOnlyList{NPCProcGen.ActorTag2D}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyList`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  name: IReadOnlyList<ActorTag2D>
  nameWithType: IReadOnlyList<ActorTag2D>
  fullName: System.Collections.Generic.IReadOnlyList<NPCProcGen.ActorTag2D>
  nameWithType.vb: IReadOnlyList(Of ActorTag2D)
  fullName.vb: System.Collections.Generic.IReadOnlyList(Of NPCProcGen.ActorTag2D)
  name.vb: IReadOnlyList(Of ActorTag2D)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: <
  - uid: NPCProcGen.ActorTag2D
    name: ActorTag2D
    href: NPCProcGen.ActorTag2D.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: (
  - name: Of
  - name: " "
  - uid: NPCProcGen.ActorTag2D
    name: ActorTag2D
    href: NPCProcGen.ActorTag2D.html
  - name: )
- uid: System.Collections.Generic.IReadOnlyList`1
  commentId: T:System.Collections.Generic.IReadOnlyList`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  name: IReadOnlyList<T>
  nameWithType: IReadOnlyList<T>
  fullName: System.Collections.Generic.IReadOnlyList<T>
  nameWithType.vb: IReadOnlyList(Of T)
  fullName.vb: System.Collections.Generic.IReadOnlyList(Of T)
  name.vb: IReadOnlyList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: System.Collections.Generic.List{Godot.Node2D}
  commentId: T:System.Collections.Generic.List{Godot.Node2D}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<Node2D>
  nameWithType: List<Node2D>
  fullName: System.Collections.Generic.List<Godot.Node2D>
  nameWithType.vb: List(Of Node2D)
  fullName.vb: System.Collections.Generic.List(Of Godot.Node2D)
  name.vb: List(Of Node2D)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: Godot.Node2D
    name: Node2D
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: Godot.Node2D
    name: Node2D
    isExternal: true
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic.List{NPCProcGen.Core.Events.Event}
  commentId: T:System.Collections.Generic.List{NPCProcGen.Core.Events.Event}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<Event>
  nameWithType: List<Event>
  fullName: System.Collections.Generic.List<NPCProcGen.Core.Events.Event>
  nameWithType.vb: List(Of Event)
  fullName.vb: System.Collections.Generic.List(Of NPCProcGen.Core.Events.Event)
  name.vb: List(Of Event)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: NPCProcGen.Core.Events.Event
    name: Event
    href: NPCProcGen.Core.Events.Event.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: NPCProcGen.Core.Events.Event
    name: Event
    href: NPCProcGen.Core.Events.Event.html
  - name: )
- uid: System.Collections.Generic.List{NPCProcGen.Core.Components.Records.Crime}
  commentId: T:System.Collections.Generic.List{NPCProcGen.Core.Components.Records.Crime}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<Crime>
  nameWithType: List<Crime>
  fullName: System.Collections.Generic.List<NPCProcGen.Core.Components.Records.Crime>
  nameWithType.vb: List(Of Crime)
  fullName.vb: System.Collections.Generic.List(Of NPCProcGen.Core.Components.Records.Crime)
  name.vb: List(Of Crime)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: NPCProcGen.Core.Components.Records.Crime
    name: Crime
    href: NPCProcGen.Core.Components.Records.Crime.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: NPCProcGen.Core.Components.Records.Crime
    name: Crime
    href: NPCProcGen.Core.Components.Records.Crime.html
  - name: )
- uid: NPCProcGen.Autoloads.WorldState.Initialize*
  commentId: Overload:NPCProcGen.Autoloads.WorldState.Initialize
  href: NPCProcGen.Autoloads.WorldState.html#NPCProcGen_Autoloads_WorldState_Initialize_System_Collections_Generic_List_NPCProcGen_ActorTag2D__
  name: Initialize
  nameWithType: WorldState.Initialize
  fullName: NPCProcGen.Autoloads.WorldState.Initialize
- uid: System.Collections.Generic.List{NPCProcGen.ActorTag2D}
  commentId: T:System.Collections.Generic.List{NPCProcGen.ActorTag2D}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<ActorTag2D>
  nameWithType: List<ActorTag2D>
  fullName: System.Collections.Generic.List<NPCProcGen.ActorTag2D>
  nameWithType.vb: List(Of ActorTag2D)
  fullName.vb: System.Collections.Generic.List(Of NPCProcGen.ActorTag2D)
  name.vb: List(Of ActorTag2D)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: NPCProcGen.ActorTag2D
    name: ActorTag2D
    href: NPCProcGen.ActorTag2D.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: NPCProcGen.ActorTag2D
    name: ActorTag2D
    href: NPCProcGen.ActorTag2D.html
  - name: )
